// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: files/PlayCardResMsg.proto

package com.sy599.game.msg.serverPacket;

public final class PlayCardResMsg {
  private PlayCardResMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PlayCardResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string userId = 1;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // required int32 isPlay = 2;
    /**
     * <code>required int32 isPlay = 2;</code>
     *
     * <pre>
     *0要不起 1可以出牌
     * </pre>
     */
    boolean hasIsPlay();
    /**
     * <code>required int32 isPlay = 2;</code>
     *
     * <pre>
     *0要不起 1可以出牌
     * </pre>
     */
    int getIsPlay();

    // repeated int32 cardIds = 3;
    /**
     * <code>repeated int32 cardIds = 3;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardIdsList();
    /**
     * <code>repeated int32 cardIds = 3;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    int getCardIdsCount();
    /**
     * <code>repeated int32 cardIds = 3;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    int getCardIds(int index);

    // optional int32 cardType = 4;
    /**
     * <code>optional int32 cardType = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    boolean hasCardType();
    /**
     * <code>optional int32 cardType = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    int getCardType();

    // optional int32 isBt = 5;
    /**
     * <code>optional int32 isBt = 5;</code>
     */
    boolean hasIsBt();
    /**
     * <code>optional int32 isBt = 5;</code>
     */
    int getIsBt();

    // optional int32 seat = 6;
    /**
     * <code>optional int32 seat = 6;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>optional int32 seat = 6;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    int getSeat();

    // optional int32 isLet = 7;
    /**
     * <code>optional int32 isLet = 7;</code>
     *
     * <pre>
     *自己是否打得起
     * </pre>
     */
    boolean hasIsLet();
    /**
     * <code>optional int32 isLet = 7;</code>
     *
     * <pre>
     *自己是否打得起
     * </pre>
     */
    int getIsLet();

    // optional int32 nextSeat = 8;
    /**
     * <code>optional int32 nextSeat = 8;</code>
     *
     * <pre>
     *下一个应该出牌的玩家
     * </pre>
     */
    boolean hasNextSeat();
    /**
     * <code>optional int32 nextSeat = 8;</code>
     *
     * <pre>
     *下一个应该出牌的玩家
     * </pre>
     */
    int getNextSeat();

    // optional int32 curScore = 9;
    /**
     * <code>optional int32 curScore = 9;</code>
     *
     * <pre>
     * </pre>
     */
    boolean hasCurScore();
    /**
     * <code>optional int32 curScore = 9;</code>
     *
     * <pre>
     * </pre>
     */
    int getCurScore();

    // optional int32 isFirstOut = 10;
    /**
     * <code>optional int32 isFirstOut = 10;</code>
     */
    boolean hasIsFirstOut();
    /**
     * <code>optional int32 isFirstOut = 10;</code>
     */
    int getIsFirstOut();

    // repeated int32 scoreCard = 11;
    /**
     * <code>repeated int32 scoreCard = 11;</code>
     *
     * <pre>
     *打出的分数牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getScoreCardList();
    /**
     * <code>repeated int32 scoreCard = 11;</code>
     *
     * <pre>
     *打出的分数牌
     * </pre>
     */
    int getScoreCardCount();
    /**
     * <code>repeated int32 scoreCard = 11;</code>
     *
     * <pre>
     *打出的分数牌
     * </pre>
     */
    int getScoreCard(int index);

    // optional int32 leftCount = 12;
    /**
     * <code>optional int32 leftCount = 12;</code>
     *
     * <pre>
     *剩余牌数量
     * </pre>
     */
    boolean hasLeftCount();
    /**
     * <code>optional int32 leftCount = 12;</code>
     *
     * <pre>
     *剩余牌数量
     * </pre>
     */
    int getLeftCount();

    // optional int32 isClearDesk = 13;
    /**
     * <code>optional int32 isClearDesk = 13;</code>
     *
     * <pre>
     *是否清桌子
     * </pre>
     */
    boolean hasIsClearDesk();
    /**
     * <code>optional int32 isClearDesk = 13;</code>
     *
     * <pre>
     *是否清桌子
     * </pre>
     */
    int getIsClearDesk();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.PlayCardRes}
   *
   * <pre>
   *跑得快
   * </pre>
   */
  public static final class PlayCardRes extends
      com.google.protobuf.GeneratedMessage
      implements PlayCardResOrBuilder {
    // Use PlayCardRes.newBuilder() to construct.
    private PlayCardRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayCardRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayCardRes defaultInstance;
    public static PlayCardRes getDefaultInstance() {
      return defaultInstance;
    }

    public PlayCardRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayCardRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              isPlay_ = input.readInt32();
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                cardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              cardIds_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                cardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                cardIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              cardType_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              isBt_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              seat_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              isLet_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              nextSeat_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              curScore_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              isFirstOut_ = input.readInt32();
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                scoreCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              scoreCard_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                scoreCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                scoreCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              leftCount_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              isClearDesk_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          cardIds_ = java.util.Collections.unmodifiableList(cardIds_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          scoreCard_ = java.util.Collections.unmodifiableList(scoreCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayCardRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayCardRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayCardRes> PARSER =
        new com.google.protobuf.AbstractParser<PlayCardRes>() {
      public PlayCardRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayCardRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayCardRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 isPlay = 2;
    public static final int ISPLAY_FIELD_NUMBER = 2;
    private int isPlay_;
    /**
     * <code>required int32 isPlay = 2;</code>
     *
     * <pre>
     *0要不起 1可以出牌
     * </pre>
     */
    public boolean hasIsPlay() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 isPlay = 2;</code>
     *
     * <pre>
     *0要不起 1可以出牌
     * </pre>
     */
    public int getIsPlay() {
      return isPlay_;
    }

    // repeated int32 cardIds = 3;
    public static final int CARDIDS_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> cardIds_;
    /**
     * <code>repeated int32 cardIds = 3;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardIdsList() {
      return cardIds_;
    }
    /**
     * <code>repeated int32 cardIds = 3;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    public int getCardIdsCount() {
      return cardIds_.size();
    }
    /**
     * <code>repeated int32 cardIds = 3;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    public int getCardIds(int index) {
      return cardIds_.get(index);
    }

    // optional int32 cardType = 4;
    public static final int CARDTYPE_FIELD_NUMBER = 4;
    private int cardType_;
    /**
     * <code>optional int32 cardType = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public boolean hasCardType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 cardType = 4;</code>
     *
     * <pre>
     *牌型
     * </pre>
     */
    public int getCardType() {
      return cardType_;
    }

    // optional int32 isBt = 5;
    public static final int ISBT_FIELD_NUMBER = 5;
    private int isBt_;
    /**
     * <code>optional int32 isBt = 5;</code>
     */
    public boolean hasIsBt() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 isBt = 5;</code>
     */
    public int getIsBt() {
      return isBt_;
    }

    // optional int32 seat = 6;
    public static final int SEAT_FIELD_NUMBER = 6;
    private int seat_;
    /**
     * <code>optional int32 seat = 6;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 seat = 6;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // optional int32 isLet = 7;
    public static final int ISLET_FIELD_NUMBER = 7;
    private int isLet_;
    /**
     * <code>optional int32 isLet = 7;</code>
     *
     * <pre>
     *自己是否打得起
     * </pre>
     */
    public boolean hasIsLet() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 isLet = 7;</code>
     *
     * <pre>
     *自己是否打得起
     * </pre>
     */
    public int getIsLet() {
      return isLet_;
    }

    // optional int32 nextSeat = 8;
    public static final int NEXTSEAT_FIELD_NUMBER = 8;
    private int nextSeat_;
    /**
     * <code>optional int32 nextSeat = 8;</code>
     *
     * <pre>
     *下一个应该出牌的玩家
     * </pre>
     */
    public boolean hasNextSeat() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 nextSeat = 8;</code>
     *
     * <pre>
     *下一个应该出牌的玩家
     * </pre>
     */
    public int getNextSeat() {
      return nextSeat_;
    }

    // optional int32 curScore = 9;
    public static final int CURSCORE_FIELD_NUMBER = 9;
    private int curScore_;
    /**
     * <code>optional int32 curScore = 9;</code>
     *
     * <pre>
     * </pre>
     */
    public boolean hasCurScore() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 curScore = 9;</code>
     *
     * <pre>
     * </pre>
     */
    public int getCurScore() {
      return curScore_;
    }

    // optional int32 isFirstOut = 10;
    public static final int ISFIRSTOUT_FIELD_NUMBER = 10;
    private int isFirstOut_;
    /**
     * <code>optional int32 isFirstOut = 10;</code>
     */
    public boolean hasIsFirstOut() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 isFirstOut = 10;</code>
     */
    public int getIsFirstOut() {
      return isFirstOut_;
    }

    // repeated int32 scoreCard = 11;
    public static final int SCORECARD_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> scoreCard_;
    /**
     * <code>repeated int32 scoreCard = 11;</code>
     *
     * <pre>
     *打出的分数牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getScoreCardList() {
      return scoreCard_;
    }
    /**
     * <code>repeated int32 scoreCard = 11;</code>
     *
     * <pre>
     *打出的分数牌
     * </pre>
     */
    public int getScoreCardCount() {
      return scoreCard_.size();
    }
    /**
     * <code>repeated int32 scoreCard = 11;</code>
     *
     * <pre>
     *打出的分数牌
     * </pre>
     */
    public int getScoreCard(int index) {
      return scoreCard_.get(index);
    }

    // optional int32 leftCount = 12;
    public static final int LEFTCOUNT_FIELD_NUMBER = 12;
    private int leftCount_;
    /**
     * <code>optional int32 leftCount = 12;</code>
     *
     * <pre>
     *剩余牌数量
     * </pre>
     */
    public boolean hasLeftCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 leftCount = 12;</code>
     *
     * <pre>
     *剩余牌数量
     * </pre>
     */
    public int getLeftCount() {
      return leftCount_;
    }

    // optional int32 isClearDesk = 13;
    public static final int ISCLEARDESK_FIELD_NUMBER = 13;
    private int isClearDesk_;
    /**
     * <code>optional int32 isClearDesk = 13;</code>
     *
     * <pre>
     *是否清桌子
     * </pre>
     */
    public boolean hasIsClearDesk() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 isClearDesk = 13;</code>
     *
     * <pre>
     *是否清桌子
     * </pre>
     */
    public int getIsClearDesk() {
      return isClearDesk_;
    }

    private void initFields() {
      userId_ = "";
      isPlay_ = 0;
      cardIds_ = java.util.Collections.emptyList();
      cardType_ = 0;
      isBt_ = 0;
      seat_ = 0;
      isLet_ = 0;
      nextSeat_ = 0;
      curScore_ = 0;
      isFirstOut_ = 0;
      scoreCard_ = java.util.Collections.emptyList();
      leftCount_ = 0;
      isClearDesk_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIsPlay()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, isPlay_);
      }
      for (int i = 0; i < cardIds_.size(); i++) {
        output.writeInt32(3, cardIds_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, cardType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, isBt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, seat_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, isLet_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, nextSeat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, curScore_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, isFirstOut_);
      }
      for (int i = 0; i < scoreCard_.size(); i++) {
        output.writeInt32(11, scoreCard_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(12, leftCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(13, isClearDesk_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isPlay_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cardIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cardIds_.get(i));
        }
        size += dataSize;
        size += 1 * getCardIdsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, cardType_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, isBt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, seat_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, isLet_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, nextSeat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, curScore_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, isFirstOut_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scoreCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(scoreCard_.get(i));
        }
        size += dataSize;
        size += 1 * getScoreCardList().size();
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, leftCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, isClearDesk_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.PlayCardRes}
     *
     * <pre>
     *跑得快
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayCardRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayCardRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        isPlay_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        cardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        cardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        isBt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        isLet_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        nextSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        curScore_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        isFirstOut_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        scoreCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        leftCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        isClearDesk_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayCardRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.isPlay_ = isPlay_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          cardIds_ = java.util.Collections.unmodifiableList(cardIds_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.cardIds_ = cardIds_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.cardType_ = cardType_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.isBt_ = isBt_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.isLet_ = isLet_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.nextSeat_ = nextSeat_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.curScore_ = curScore_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.isFirstOut_ = isFirstOut_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          scoreCard_ = java.util.Collections.unmodifiableList(scoreCard_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.scoreCard_ = scoreCard_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.leftCount_ = leftCount_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.isClearDesk_ = isClearDesk_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasIsPlay()) {
          setIsPlay(other.getIsPlay());
        }
        if (!other.cardIds_.isEmpty()) {
          if (cardIds_.isEmpty()) {
            cardIds_ = other.cardIds_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureCardIdsIsMutable();
            cardIds_.addAll(other.cardIds_);
          }
          onChanged();
        }
        if (other.hasCardType()) {
          setCardType(other.getCardType());
        }
        if (other.hasIsBt()) {
          setIsBt(other.getIsBt());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasIsLet()) {
          setIsLet(other.getIsLet());
        }
        if (other.hasNextSeat()) {
          setNextSeat(other.getNextSeat());
        }
        if (other.hasCurScore()) {
          setCurScore(other.getCurScore());
        }
        if (other.hasIsFirstOut()) {
          setIsFirstOut(other.getIsFirstOut());
        }
        if (!other.scoreCard_.isEmpty()) {
          if (scoreCard_.isEmpty()) {
            scoreCard_ = other.scoreCard_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureScoreCardIsMutable();
            scoreCard_.addAll(other.scoreCard_);
          }
          onChanged();
        }
        if (other.hasLeftCount()) {
          setLeftCount(other.getLeftCount());
        }
        if (other.hasIsClearDesk()) {
          setIsClearDesk(other.getIsClearDesk());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasIsPlay()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayCardRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // required int32 isPlay = 2;
      private int isPlay_ ;
      /**
       * <code>required int32 isPlay = 2;</code>
       *
       * <pre>
       *0要不起 1可以出牌
       * </pre>
       */
      public boolean hasIsPlay() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 isPlay = 2;</code>
       *
       * <pre>
       *0要不起 1可以出牌
       * </pre>
       */
      public int getIsPlay() {
        return isPlay_;
      }
      /**
       * <code>required int32 isPlay = 2;</code>
       *
       * <pre>
       *0要不起 1可以出牌
       * </pre>
       */
      public Builder setIsPlay(int value) {
        bitField0_ |= 0x00000002;
        isPlay_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 isPlay = 2;</code>
       *
       * <pre>
       *0要不起 1可以出牌
       * </pre>
       */
      public Builder clearIsPlay() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isPlay_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cardIds = 3;
      private java.util.List<java.lang.Integer> cardIds_ = java.util.Collections.emptyList();
      private void ensureCardIdsIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          cardIds_ = new java.util.ArrayList<java.lang.Integer>(cardIds_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 cardIds = 3;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardIdsList() {
        return java.util.Collections.unmodifiableList(cardIds_);
      }
      /**
       * <code>repeated int32 cardIds = 3;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public int getCardIdsCount() {
        return cardIds_.size();
      }
      /**
       * <code>repeated int32 cardIds = 3;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public int getCardIds(int index) {
        return cardIds_.get(index);
      }
      /**
       * <code>repeated int32 cardIds = 3;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder setCardIds(
          int index, int value) {
        ensureCardIdsIsMutable();
        cardIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardIds = 3;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder addCardIds(int value) {
        ensureCardIdsIsMutable();
        cardIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardIds = 3;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder addAllCardIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardIdsIsMutable();
        super.addAll(values, cardIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cardIds = 3;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder clearCardIds() {
        cardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 cardType = 4;
      private int cardType_ ;
      /**
       * <code>optional int32 cardType = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public boolean hasCardType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 cardType = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public int getCardType() {
        return cardType_;
      }
      /**
       * <code>optional int32 cardType = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder setCardType(int value) {
        bitField0_ |= 0x00000008;
        cardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 cardType = 4;</code>
       *
       * <pre>
       *牌型
       * </pre>
       */
      public Builder clearCardType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        cardType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 isBt = 5;
      private int isBt_ ;
      /**
       * <code>optional int32 isBt = 5;</code>
       */
      public boolean hasIsBt() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 isBt = 5;</code>
       */
      public int getIsBt() {
        return isBt_;
      }
      /**
       * <code>optional int32 isBt = 5;</code>
       */
      public Builder setIsBt(int value) {
        bitField0_ |= 0x00000010;
        isBt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isBt = 5;</code>
       */
      public Builder clearIsBt() {
        bitField0_ = (bitField0_ & ~0x00000010);
        isBt_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat = 6;
      private int seat_ ;
      /**
       * <code>optional int32 seat = 6;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 seat = 6;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>optional int32 seat = 6;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000020;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat = 6;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000020);
        seat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 isLet = 7;
      private int isLet_ ;
      /**
       * <code>optional int32 isLet = 7;</code>
       *
       * <pre>
       *自己是否打得起
       * </pre>
       */
      public boolean hasIsLet() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 isLet = 7;</code>
       *
       * <pre>
       *自己是否打得起
       * </pre>
       */
      public int getIsLet() {
        return isLet_;
      }
      /**
       * <code>optional int32 isLet = 7;</code>
       *
       * <pre>
       *自己是否打得起
       * </pre>
       */
      public Builder setIsLet(int value) {
        bitField0_ |= 0x00000040;
        isLet_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isLet = 7;</code>
       *
       * <pre>
       *自己是否打得起
       * </pre>
       */
      public Builder clearIsLet() {
        bitField0_ = (bitField0_ & ~0x00000040);
        isLet_ = 0;
        onChanged();
        return this;
      }

      // optional int32 nextSeat = 8;
      private int nextSeat_ ;
      /**
       * <code>optional int32 nextSeat = 8;</code>
       *
       * <pre>
       *下一个应该出牌的玩家
       * </pre>
       */
      public boolean hasNextSeat() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 nextSeat = 8;</code>
       *
       * <pre>
       *下一个应该出牌的玩家
       * </pre>
       */
      public int getNextSeat() {
        return nextSeat_;
      }
      /**
       * <code>optional int32 nextSeat = 8;</code>
       *
       * <pre>
       *下一个应该出牌的玩家
       * </pre>
       */
      public Builder setNextSeat(int value) {
        bitField0_ |= 0x00000080;
        nextSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nextSeat = 8;</code>
       *
       * <pre>
       *下一个应该出牌的玩家
       * </pre>
       */
      public Builder clearNextSeat() {
        bitField0_ = (bitField0_ & ~0x00000080);
        nextSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 curScore = 9;
      private int curScore_ ;
      /**
       * <code>optional int32 curScore = 9;</code>
       *
       * <pre>
       * </pre>
       */
      public boolean hasCurScore() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 curScore = 9;</code>
       *
       * <pre>
       * </pre>
       */
      public int getCurScore() {
        return curScore_;
      }
      /**
       * <code>optional int32 curScore = 9;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setCurScore(int value) {
        bitField0_ |= 0x00000100;
        curScore_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 curScore = 9;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearCurScore() {
        bitField0_ = (bitField0_ & ~0x00000100);
        curScore_ = 0;
        onChanged();
        return this;
      }

      // optional int32 isFirstOut = 10;
      private int isFirstOut_ ;
      /**
       * <code>optional int32 isFirstOut = 10;</code>
       */
      public boolean hasIsFirstOut() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 isFirstOut = 10;</code>
       */
      public int getIsFirstOut() {
        return isFirstOut_;
      }
      /**
       * <code>optional int32 isFirstOut = 10;</code>
       */
      public Builder setIsFirstOut(int value) {
        bitField0_ |= 0x00000200;
        isFirstOut_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isFirstOut = 10;</code>
       */
      public Builder clearIsFirstOut() {
        bitField0_ = (bitField0_ & ~0x00000200);
        isFirstOut_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 scoreCard = 11;
      private java.util.List<java.lang.Integer> scoreCard_ = java.util.Collections.emptyList();
      private void ensureScoreCardIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          scoreCard_ = new java.util.ArrayList<java.lang.Integer>(scoreCard_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 scoreCard = 11;</code>
       *
       * <pre>
       *打出的分数牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getScoreCardList() {
        return java.util.Collections.unmodifiableList(scoreCard_);
      }
      /**
       * <code>repeated int32 scoreCard = 11;</code>
       *
       * <pre>
       *打出的分数牌
       * </pre>
       */
      public int getScoreCardCount() {
        return scoreCard_.size();
      }
      /**
       * <code>repeated int32 scoreCard = 11;</code>
       *
       * <pre>
       *打出的分数牌
       * </pre>
       */
      public int getScoreCard(int index) {
        return scoreCard_.get(index);
      }
      /**
       * <code>repeated int32 scoreCard = 11;</code>
       *
       * <pre>
       *打出的分数牌
       * </pre>
       */
      public Builder setScoreCard(
          int index, int value) {
        ensureScoreCardIsMutable();
        scoreCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scoreCard = 11;</code>
       *
       * <pre>
       *打出的分数牌
       * </pre>
       */
      public Builder addScoreCard(int value) {
        ensureScoreCardIsMutable();
        scoreCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scoreCard = 11;</code>
       *
       * <pre>
       *打出的分数牌
       * </pre>
       */
      public Builder addAllScoreCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureScoreCardIsMutable();
        super.addAll(values, scoreCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scoreCard = 11;</code>
       *
       * <pre>
       *打出的分数牌
       * </pre>
       */
      public Builder clearScoreCard() {
        scoreCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // optional int32 leftCount = 12;
      private int leftCount_ ;
      /**
       * <code>optional int32 leftCount = 12;</code>
       *
       * <pre>
       *剩余牌数量
       * </pre>
       */
      public boolean hasLeftCount() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 leftCount = 12;</code>
       *
       * <pre>
       *剩余牌数量
       * </pre>
       */
      public int getLeftCount() {
        return leftCount_;
      }
      /**
       * <code>optional int32 leftCount = 12;</code>
       *
       * <pre>
       *剩余牌数量
       * </pre>
       */
      public Builder setLeftCount(int value) {
        bitField0_ |= 0x00000800;
        leftCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 leftCount = 12;</code>
       *
       * <pre>
       *剩余牌数量
       * </pre>
       */
      public Builder clearLeftCount() {
        bitField0_ = (bitField0_ & ~0x00000800);
        leftCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 isClearDesk = 13;
      private int isClearDesk_ ;
      /**
       * <code>optional int32 isClearDesk = 13;</code>
       *
       * <pre>
       *是否清桌子
       * </pre>
       */
      public boolean hasIsClearDesk() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 isClearDesk = 13;</code>
       *
       * <pre>
       *是否清桌子
       * </pre>
       */
      public int getIsClearDesk() {
        return isClearDesk_;
      }
      /**
       * <code>optional int32 isClearDesk = 13;</code>
       *
       * <pre>
       *是否清桌子
       * </pre>
       */
      public Builder setIsClearDesk(int value) {
        bitField0_ |= 0x00001000;
        isClearDesk_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isClearDesk = 13;</code>
       *
       * <pre>
       *是否清桌子
       * </pre>
       */
      public Builder clearIsClearDesk() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isClearDesk_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.PlayCardRes)
    }

    static {
      defaultInstance = new PlayCardRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.PlayCardRes)
  }

  public interface PlayPaohuziResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string userId = 1;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // repeated int32 phzIds = 2;
    /**
     * <code>repeated int32 phzIds = 2;</code>
     *
     * <pre>
     *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
     * </pre>
     */
    java.util.List<java.lang.Integer> getPhzIdsList();
    /**
     * <code>repeated int32 phzIds = 2;</code>
     *
     * <pre>
     *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
     * </pre>
     */
    int getPhzIdsCount();
    /**
     * <code>repeated int32 phzIds = 2;</code>
     *
     * <pre>
     *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
     * </pre>
     */
    int getPhzIds(int index);

    // optional int32 action = 3;
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *动作 
     * </pre>
     */
    boolean hasAction();
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *动作 
     * </pre>
     */
    int getAction();

    // optional int32 seat = 4;
    /**
     * <code>optional int32 seat = 4;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>optional int32 seat = 4;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    int getSeat();

    // repeated int32 selfAct = 5;
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
     * </pre>
     */
    java.util.List<java.lang.Integer> getSelfActList();
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
     * </pre>
     */
    int getSelfActCount();
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
     * </pre>
     */
    int getSelfAct(int index);

    // optional int32 fromSeat = 6;
    /**
     * <code>optional int32 fromSeat = 6;</code>
     *
     * <pre>
     *跑的时候出牌人的座位
     * </pre>
     */
    boolean hasFromSeat();
    /**
     * <code>optional int32 fromSeat = 6;</code>
     *
     * <pre>
     *跑的时候出牌人的座位
     * </pre>
     */
    int getFromSeat();

    // optional int32 actType = 7;
    /**
     * <code>optional int32 actType = 7;</code>
     *
     * <pre>
     *0特殊动作 1摸 2出一个单牌
     * </pre>
     */
    boolean hasActType();
    /**
     * <code>optional int32 actType = 7;</code>
     *
     * <pre>
     *0特殊动作 1摸 2出一个单牌
     * </pre>
     */
    int getActType();

    // optional int32 remain = 8;
    /**
     * <code>optional int32 remain = 8;</code>
     *
     * <pre>
     *剩余牌的张数
     * </pre>
     */
    boolean hasRemain();
    /**
     * <code>optional int32 remain = 8;</code>
     *
     * <pre>
     *剩余牌的张数
     * </pre>
     */
    int getRemain();

    // optional int32 nextSeat = 9;
    /**
     * <code>optional int32 nextSeat = 9;</code>
     *
     * <pre>
     *下次出牌的人
     * </pre>
     */
    boolean hasNextSeat();
    /**
     * <code>optional int32 nextSeat = 9;</code>
     *
     * <pre>
     *下次出牌的人
     * </pre>
     */
    int getNextSeat();

    // optional int32 huxi = 10;
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *打出去的牌的胡息   
     * </pre>
     */
    boolean hasHuxi();
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *打出去的牌的胡息   
     * </pre>
     */
    int getHuxi();

    // optional int32 isZaiPao = 11;
    /**
     * <code>optional int32 isZaiPao = 11;</code>
     *
     * <pre>
     *是否是栽过的牌跑了牌
     * </pre>
     */
    boolean hasIsZaiPao();
    /**
     * <code>optional int32 isZaiPao = 11;</code>
     *
     * <pre>
     *是否是栽过的牌跑了牌
     * </pre>
     */
    int getIsZaiPao();

    // optional int32 isChongPao = 12;
    /**
     * <code>optional int32 isChongPao = 12;</code>
     *
     * <pre>
     * 是否重跑
     * </pre>
     */
    boolean hasIsChongPao();
    /**
     * <code>optional int32 isChongPao = 12;</code>
     *
     * <pre>
     * 是否重跑
     * </pre>
     */
    int getIsChongPao();

    // optional int32 timeSeat = 13;
    /**
     * <code>optional int32 timeSeat = 13;</code>
     *
     * <pre>
     *闹钟位置
     * </pre>
     */
    boolean hasTimeSeat();
    /**
     * <code>optional int32 timeSeat = 13;</code>
     *
     * <pre>
     *闹钟位置
     * </pre>
     */
    int getTimeSeat();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.PlayPaohuziRes}
   *
   * <pre>
   *跑胡子
   * </pre>
   */
  public static final class PlayPaohuziRes extends
      com.google.protobuf.GeneratedMessage
      implements PlayPaohuziResOrBuilder {
    // Use PlayPaohuziRes.newBuilder() to construct.
    private PlayPaohuziRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayPaohuziRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayPaohuziRes defaultInstance;
    public static PlayPaohuziRes getDefaultInstance() {
      return defaultInstance;
    }

    public PlayPaohuziRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayPaohuziRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                phzIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              phzIds_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                phzIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                phzIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              action_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              seat_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              selfAct_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                selfAct_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              fromSeat_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              actType_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000020;
              remain_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              nextSeat_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000080;
              huxi_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000100;
              isZaiPao_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000200;
              isChongPao_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000400;
              timeSeat_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          phzIds_ = java.util.Collections.unmodifiableList(phzIds_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayPaohuziRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayPaohuziRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayPaohuziRes> PARSER =
        new com.google.protobuf.AbstractParser<PlayPaohuziRes>() {
      public PlayPaohuziRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayPaohuziRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayPaohuziRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 phzIds = 2;
    public static final int PHZIDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> phzIds_;
    /**
     * <code>repeated int32 phzIds = 2;</code>
     *
     * <pre>
     *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPhzIdsList() {
      return phzIds_;
    }
    /**
     * <code>repeated int32 phzIds = 2;</code>
     *
     * <pre>
     *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
     * </pre>
     */
    public int getPhzIdsCount() {
      return phzIds_.size();
    }
    /**
     * <code>repeated int32 phzIds = 2;</code>
     *
     * <pre>
     *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
     * </pre>
     */
    public int getPhzIds(int index) {
      return phzIds_.get(index);
    }

    // optional int32 action = 3;
    public static final int ACTION_FIELD_NUMBER = 3;
    private int action_;
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *动作 
     * </pre>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *动作 
     * </pre>
     */
    public int getAction() {
      return action_;
    }

    // optional int32 seat = 4;
    public static final int SEAT_FIELD_NUMBER = 4;
    private int seat_;
    /**
     * <code>optional int32 seat = 4;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 seat = 4;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // repeated int32 selfAct = 5;
    public static final int SELFACT_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> selfAct_;
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSelfActList() {
      return selfAct_;
    }
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
     * </pre>
     */
    public int getSelfActCount() {
      return selfAct_.size();
    }
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
     * </pre>
     */
    public int getSelfAct(int index) {
      return selfAct_.get(index);
    }

    // optional int32 fromSeat = 6;
    public static final int FROMSEAT_FIELD_NUMBER = 6;
    private int fromSeat_;
    /**
     * <code>optional int32 fromSeat = 6;</code>
     *
     * <pre>
     *跑的时候出牌人的座位
     * </pre>
     */
    public boolean hasFromSeat() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 fromSeat = 6;</code>
     *
     * <pre>
     *跑的时候出牌人的座位
     * </pre>
     */
    public int getFromSeat() {
      return fromSeat_;
    }

    // optional int32 actType = 7;
    public static final int ACTTYPE_FIELD_NUMBER = 7;
    private int actType_;
    /**
     * <code>optional int32 actType = 7;</code>
     *
     * <pre>
     *0特殊动作 1摸 2出一个单牌
     * </pre>
     */
    public boolean hasActType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 actType = 7;</code>
     *
     * <pre>
     *0特殊动作 1摸 2出一个单牌
     * </pre>
     */
    public int getActType() {
      return actType_;
    }

    // optional int32 remain = 8;
    public static final int REMAIN_FIELD_NUMBER = 8;
    private int remain_;
    /**
     * <code>optional int32 remain = 8;</code>
     *
     * <pre>
     *剩余牌的张数
     * </pre>
     */
    public boolean hasRemain() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 remain = 8;</code>
     *
     * <pre>
     *剩余牌的张数
     * </pre>
     */
    public int getRemain() {
      return remain_;
    }

    // optional int32 nextSeat = 9;
    public static final int NEXTSEAT_FIELD_NUMBER = 9;
    private int nextSeat_;
    /**
     * <code>optional int32 nextSeat = 9;</code>
     *
     * <pre>
     *下次出牌的人
     * </pre>
     */
    public boolean hasNextSeat() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 nextSeat = 9;</code>
     *
     * <pre>
     *下次出牌的人
     * </pre>
     */
    public int getNextSeat() {
      return nextSeat_;
    }

    // optional int32 huxi = 10;
    public static final int HUXI_FIELD_NUMBER = 10;
    private int huxi_;
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *打出去的牌的胡息   
     * </pre>
     */
    public boolean hasHuxi() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *打出去的牌的胡息   
     * </pre>
     */
    public int getHuxi() {
      return huxi_;
    }

    // optional int32 isZaiPao = 11;
    public static final int ISZAIPAO_FIELD_NUMBER = 11;
    private int isZaiPao_;
    /**
     * <code>optional int32 isZaiPao = 11;</code>
     *
     * <pre>
     *是否是栽过的牌跑了牌
     * </pre>
     */
    public boolean hasIsZaiPao() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 isZaiPao = 11;</code>
     *
     * <pre>
     *是否是栽过的牌跑了牌
     * </pre>
     */
    public int getIsZaiPao() {
      return isZaiPao_;
    }

    // optional int32 isChongPao = 12;
    public static final int ISCHONGPAO_FIELD_NUMBER = 12;
    private int isChongPao_;
    /**
     * <code>optional int32 isChongPao = 12;</code>
     *
     * <pre>
     * 是否重跑
     * </pre>
     */
    public boolean hasIsChongPao() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 isChongPao = 12;</code>
     *
     * <pre>
     * 是否重跑
     * </pre>
     */
    public int getIsChongPao() {
      return isChongPao_;
    }

    // optional int32 timeSeat = 13;
    public static final int TIMESEAT_FIELD_NUMBER = 13;
    private int timeSeat_;
    /**
     * <code>optional int32 timeSeat = 13;</code>
     *
     * <pre>
     *闹钟位置
     * </pre>
     */
    public boolean hasTimeSeat() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 timeSeat = 13;</code>
     *
     * <pre>
     *闹钟位置
     * </pre>
     */
    public int getTimeSeat() {
      return timeSeat_;
    }

    private void initFields() {
      userId_ = "";
      phzIds_ = java.util.Collections.emptyList();
      action_ = 0;
      seat_ = 0;
      selfAct_ = java.util.Collections.emptyList();
      fromSeat_ = 0;
      actType_ = 0;
      remain_ = 0;
      nextSeat_ = 0;
      huxi_ = 0;
      isZaiPao_ = 0;
      isChongPao_ = 0;
      timeSeat_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      for (int i = 0; i < phzIds_.size(); i++) {
        output.writeInt32(2, phzIds_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, action_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, seat_);
      }
      for (int i = 0; i < selfAct_.size(); i++) {
        output.writeInt32(5, selfAct_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, fromSeat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, actType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(8, remain_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, nextSeat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(10, huxi_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(11, isZaiPao_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(12, isChongPao_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(13, timeSeat_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < phzIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(phzIds_.get(i));
        }
        size += dataSize;
        size += 1 * getPhzIdsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, action_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seat_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < selfAct_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(selfAct_.get(i));
        }
        size += dataSize;
        size += 1 * getSelfActList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, fromSeat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, actType_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, remain_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, nextSeat_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, huxi_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, isZaiPao_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, isChongPao_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, timeSeat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.PlayPaohuziRes}
     *
     * <pre>
     *跑胡子
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayPaohuziRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayPaohuziRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        phzIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        fromSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        actType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        remain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        nextSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        huxi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        isZaiPao_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        isChongPao_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        timeSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayPaohuziRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          phzIds_ = java.util.Collections.unmodifiableList(phzIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.phzIds_ = phzIds_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.action_ = action_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seat_ = seat_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.selfAct_ = selfAct_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fromSeat_ = fromSeat_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.actType_ = actType_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.remain_ = remain_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.nextSeat_ = nextSeat_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000080;
        }
        result.huxi_ = huxi_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000100;
        }
        result.isZaiPao_ = isZaiPao_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        result.isChongPao_ = isChongPao_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.timeSeat_ = timeSeat_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (!other.phzIds_.isEmpty()) {
          if (phzIds_.isEmpty()) {
            phzIds_ = other.phzIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensurePhzIdsIsMutable();
            phzIds_.addAll(other.phzIds_);
          }
          onChanged();
        }
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (!other.selfAct_.isEmpty()) {
          if (selfAct_.isEmpty()) {
            selfAct_ = other.selfAct_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSelfActIsMutable();
            selfAct_.addAll(other.selfAct_);
          }
          onChanged();
        }
        if (other.hasFromSeat()) {
          setFromSeat(other.getFromSeat());
        }
        if (other.hasActType()) {
          setActType(other.getActType());
        }
        if (other.hasRemain()) {
          setRemain(other.getRemain());
        }
        if (other.hasNextSeat()) {
          setNextSeat(other.getNextSeat());
        }
        if (other.hasHuxi()) {
          setHuxi(other.getHuxi());
        }
        if (other.hasIsZaiPao()) {
          setIsZaiPao(other.getIsZaiPao());
        }
        if (other.hasIsChongPao()) {
          setIsChongPao(other.getIsChongPao());
        }
        if (other.hasTimeSeat()) {
          setTimeSeat(other.getTimeSeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayPaohuziRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // repeated int32 phzIds = 2;
      private java.util.List<java.lang.Integer> phzIds_ = java.util.Collections.emptyList();
      private void ensurePhzIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          phzIds_ = new java.util.ArrayList<java.lang.Integer>(phzIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 phzIds = 2;</code>
       *
       * <pre>
       *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPhzIdsList() {
        return java.util.Collections.unmodifiableList(phzIds_);
      }
      /**
       * <code>repeated int32 phzIds = 2;</code>
       *
       * <pre>
       *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
       * </pre>
       */
      public int getPhzIdsCount() {
        return phzIds_.size();
      }
      /**
       * <code>repeated int32 phzIds = 2;</code>
       *
       * <pre>
       *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
       * </pre>
       */
      public int getPhzIds(int index) {
        return phzIds_.get(index);
      }
      /**
       * <code>repeated int32 phzIds = 2;</code>
       *
       * <pre>
       *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
       * </pre>
       */
      public Builder setPhzIds(
          int index, int value) {
        ensurePhzIdsIsMutable();
        phzIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 phzIds = 2;</code>
       *
       * <pre>
       *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
       * </pre>
       */
      public Builder addPhzIds(int value) {
        ensurePhzIdsIsMutable();
        phzIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 phzIds = 2;</code>
       *
       * <pre>
       *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
       * </pre>
       */
      public Builder addAllPhzIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePhzIdsIsMutable();
        super.addAll(values, phzIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 phzIds = 2;</code>
       *
       * <pre>
       *牌组id  如果有摸的牌放第0位 id为0则表示不能让人看到(如0,0,0,0)
       * </pre>
       */
      public Builder clearPhzIds() {
        phzIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 action = 3;
      private int action_ ;
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *动作 
       * </pre>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *动作 
       * </pre>
       */
      public int getAction() {
        return action_;
      }
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *动作 
       * </pre>
       */
      public Builder setAction(int value) {
        bitField0_ |= 0x00000004;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *动作 
       * </pre>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000004);
        action_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat = 4;
      private int seat_ ;
      /**
       * <code>optional int32 seat = 4;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 seat = 4;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>optional int32 seat = 4;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000008;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat = 4;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seat_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 selfAct = 5;
      private java.util.List<java.lang.Integer> selfAct_ = java.util.Collections.emptyList();
      private void ensureSelfActIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = new java.util.ArrayList<java.lang.Integer>(selfAct_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSelfActList() {
        return java.util.Collections.unmodifiableList(selfAct_);
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
       * </pre>
       */
      public int getSelfActCount() {
        return selfAct_.size();
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
       * </pre>
       */
      public int getSelfAct(int index) {
        return selfAct_.get(index);
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
       * </pre>
       */
      public Builder setSelfAct(
          int index, int value) {
        ensureSelfActIsMutable();
        selfAct_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
       * </pre>
       */
      public Builder addSelfAct(int value) {
        ensureSelfActIsMutable();
        selfAct_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
       * </pre>
       */
      public Builder addAllSelfAct(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSelfActIsMutable();
        super.addAll(values, selfAct_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作  0胡 1碰 2栽 3提 4吃 5跑
       * </pre>
       */
      public Builder clearSelfAct() {
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional int32 fromSeat = 6;
      private int fromSeat_ ;
      /**
       * <code>optional int32 fromSeat = 6;</code>
       *
       * <pre>
       *跑的时候出牌人的座位
       * </pre>
       */
      public boolean hasFromSeat() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 fromSeat = 6;</code>
       *
       * <pre>
       *跑的时候出牌人的座位
       * </pre>
       */
      public int getFromSeat() {
        return fromSeat_;
      }
      /**
       * <code>optional int32 fromSeat = 6;</code>
       *
       * <pre>
       *跑的时候出牌人的座位
       * </pre>
       */
      public Builder setFromSeat(int value) {
        bitField0_ |= 0x00000020;
        fromSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fromSeat = 6;</code>
       *
       * <pre>
       *跑的时候出牌人的座位
       * </pre>
       */
      public Builder clearFromSeat() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fromSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 actType = 7;
      private int actType_ ;
      /**
       * <code>optional int32 actType = 7;</code>
       *
       * <pre>
       *0特殊动作 1摸 2出一个单牌
       * </pre>
       */
      public boolean hasActType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 actType = 7;</code>
       *
       * <pre>
       *0特殊动作 1摸 2出一个单牌
       * </pre>
       */
      public int getActType() {
        return actType_;
      }
      /**
       * <code>optional int32 actType = 7;</code>
       *
       * <pre>
       *0特殊动作 1摸 2出一个单牌
       * </pre>
       */
      public Builder setActType(int value) {
        bitField0_ |= 0x00000040;
        actType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 actType = 7;</code>
       *
       * <pre>
       *0特殊动作 1摸 2出一个单牌
       * </pre>
       */
      public Builder clearActType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        actType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remain = 8;
      private int remain_ ;
      /**
       * <code>optional int32 remain = 8;</code>
       *
       * <pre>
       *剩余牌的张数
       * </pre>
       */
      public boolean hasRemain() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 remain = 8;</code>
       *
       * <pre>
       *剩余牌的张数
       * </pre>
       */
      public int getRemain() {
        return remain_;
      }
      /**
       * <code>optional int32 remain = 8;</code>
       *
       * <pre>
       *剩余牌的张数
       * </pre>
       */
      public Builder setRemain(int value) {
        bitField0_ |= 0x00000080;
        remain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remain = 8;</code>
       *
       * <pre>
       *剩余牌的张数
       * </pre>
       */
      public Builder clearRemain() {
        bitField0_ = (bitField0_ & ~0x00000080);
        remain_ = 0;
        onChanged();
        return this;
      }

      // optional int32 nextSeat = 9;
      private int nextSeat_ ;
      /**
       * <code>optional int32 nextSeat = 9;</code>
       *
       * <pre>
       *下次出牌的人
       * </pre>
       */
      public boolean hasNextSeat() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 nextSeat = 9;</code>
       *
       * <pre>
       *下次出牌的人
       * </pre>
       */
      public int getNextSeat() {
        return nextSeat_;
      }
      /**
       * <code>optional int32 nextSeat = 9;</code>
       *
       * <pre>
       *下次出牌的人
       * </pre>
       */
      public Builder setNextSeat(int value) {
        bitField0_ |= 0x00000100;
        nextSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nextSeat = 9;</code>
       *
       * <pre>
       *下次出牌的人
       * </pre>
       */
      public Builder clearNextSeat() {
        bitField0_ = (bitField0_ & ~0x00000100);
        nextSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huxi = 10;
      private int huxi_ ;
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *打出去的牌的胡息   
       * </pre>
       */
      public boolean hasHuxi() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *打出去的牌的胡息   
       * </pre>
       */
      public int getHuxi() {
        return huxi_;
      }
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *打出去的牌的胡息   
       * </pre>
       */
      public Builder setHuxi(int value) {
        bitField0_ |= 0x00000200;
        huxi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *打出去的牌的胡息   
       * </pre>
       */
      public Builder clearHuxi() {
        bitField0_ = (bitField0_ & ~0x00000200);
        huxi_ = 0;
        onChanged();
        return this;
      }

      // optional int32 isZaiPao = 11;
      private int isZaiPao_ ;
      /**
       * <code>optional int32 isZaiPao = 11;</code>
       *
       * <pre>
       *是否是栽过的牌跑了牌
       * </pre>
       */
      public boolean hasIsZaiPao() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 isZaiPao = 11;</code>
       *
       * <pre>
       *是否是栽过的牌跑了牌
       * </pre>
       */
      public int getIsZaiPao() {
        return isZaiPao_;
      }
      /**
       * <code>optional int32 isZaiPao = 11;</code>
       *
       * <pre>
       *是否是栽过的牌跑了牌
       * </pre>
       */
      public Builder setIsZaiPao(int value) {
        bitField0_ |= 0x00000400;
        isZaiPao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isZaiPao = 11;</code>
       *
       * <pre>
       *是否是栽过的牌跑了牌
       * </pre>
       */
      public Builder clearIsZaiPao() {
        bitField0_ = (bitField0_ & ~0x00000400);
        isZaiPao_ = 0;
        onChanged();
        return this;
      }

      // optional int32 isChongPao = 12;
      private int isChongPao_ ;
      /**
       * <code>optional int32 isChongPao = 12;</code>
       *
       * <pre>
       * 是否重跑
       * </pre>
       */
      public boolean hasIsChongPao() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 isChongPao = 12;</code>
       *
       * <pre>
       * 是否重跑
       * </pre>
       */
      public int getIsChongPao() {
        return isChongPao_;
      }
      /**
       * <code>optional int32 isChongPao = 12;</code>
       *
       * <pre>
       * 是否重跑
       * </pre>
       */
      public Builder setIsChongPao(int value) {
        bitField0_ |= 0x00000800;
        isChongPao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isChongPao = 12;</code>
       *
       * <pre>
       * 是否重跑
       * </pre>
       */
      public Builder clearIsChongPao() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isChongPao_ = 0;
        onChanged();
        return this;
      }

      // optional int32 timeSeat = 13;
      private int timeSeat_ ;
      /**
       * <code>optional int32 timeSeat = 13;</code>
       *
       * <pre>
       *闹钟位置
       * </pre>
       */
      public boolean hasTimeSeat() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 timeSeat = 13;</code>
       *
       * <pre>
       *闹钟位置
       * </pre>
       */
      public int getTimeSeat() {
        return timeSeat_;
      }
      /**
       * <code>optional int32 timeSeat = 13;</code>
       *
       * <pre>
       *闹钟位置
       * </pre>
       */
      public Builder setTimeSeat(int value) {
        bitField0_ |= 0x00001000;
        timeSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 timeSeat = 13;</code>
       *
       * <pre>
       *闹钟位置
       * </pre>
       */
      public Builder clearTimeSeat() {
        bitField0_ = (bitField0_ & ~0x00001000);
        timeSeat_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.PlayPaohuziRes)
    }

    static {
      defaultInstance = new PlayPaohuziRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.PlayPaohuziRes)
  }

  public interface PlayMajiangResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string userId = 1;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // repeated int32 majiangIds = 2;
    /**
     * <code>repeated int32 majiangIds = 2;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    java.util.List<java.lang.Integer> getMajiangIdsList();
    /**
     * <code>repeated int32 majiangIds = 2;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    int getMajiangIdsCount();
    /**
     * <code>repeated int32 majiangIds = 2;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    int getMajiangIds(int index);

    // optional int32 action = 3;
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *动作 1胡 2碰 3明刚 4暗杠
     * </pre>
     */
    boolean hasAction();
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *动作 1胡 2碰 3明刚 4暗杠
     * </pre>
     */
    int getAction();

    // optional int32 seat = 4;
    /**
     * <code>optional int32 seat = 4;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>optional int32 seat = 4;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    int getSeat();

    // repeated int32 selfAct = 5;
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    java.util.List<java.lang.Integer> getSelfActList();
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    int getSelfActCount();
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    int getSelfAct(int index);

    // optional int32 fromSeat = 6;
    /**
     * <code>optional int32 fromSeat = 6;</code>
     *
     * <pre>
     *碰杠的时候出牌人的座位
     * </pre>
     */
    boolean hasFromSeat();
    /**
     * <code>optional int32 fromSeat = 6;</code>
     *
     * <pre>
     *碰杠的时候出牌人的座位
     * </pre>
     */
    int getFromSeat();

    // optional int32 zimo = 7;
    /**
     * <code>optional int32 zimo = 7;</code>
     *
     * <pre>
     *胡牌是否是自摸
     * </pre>
     */
    boolean hasZimo();
    /**
     * <code>optional int32 zimo = 7;</code>
     *
     * <pre>
     *胡牌是否是自摸
     * </pre>
     */
    int getZimo();

    // repeated int32 huArray = 8;
    /**
     * <code>repeated int32 huArray = 8;</code>
     *
     * <pre>
     *长沙麻将胡牌的各种类型  (前台显示)
     * </pre>
     */
    java.util.List<java.lang.Integer> getHuArrayList();
    /**
     * <code>repeated int32 huArray = 8;</code>
     *
     * <pre>
     *长沙麻将胡牌的各种类型  (前台显示)
     * </pre>
     */
    int getHuArrayCount();
    /**
     * <code>repeated int32 huArray = 8;</code>
     *
     * <pre>
     *长沙麻将胡牌的各种类型  (前台显示)
     * </pre>
     */
    int getHuArray(int index);

    // repeated int32 xiaohu = 9;
    /**
     * <code>repeated int32 xiaohu = 9;</code>
     *
     * <pre>
     *按钮显示
     * </pre>
     */
    java.util.List<java.lang.Integer> getXiaohuList();
    /**
     * <code>repeated int32 xiaohu = 9;</code>
     *
     * <pre>
     *按钮显示
     * </pre>
     */
    int getXiaohuCount();
    /**
     * <code>repeated int32 xiaohu = 9;</code>
     *
     * <pre>
     *按钮显示
     * </pre>
     */
    int getXiaohu(int index);

    // repeated string ext = 10;
    /**
     * <code>repeated string ext = 10;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.String>
    getExtList();
    /**
     * <code>repeated string ext = 10;</code>
     *
     * <pre>
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated string ext = 10;</code>
     *
     * <pre>
     * </pre>
     */
    java.lang.String getExt(int index);
    /**
     * <code>repeated string ext = 10;</code>
     *
     * <pre>
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtBytes(int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.PlayMajiangRes}
   *
   * <pre>
   *麻将
   * </pre>
   */
  public static final class PlayMajiangRes extends
      com.google.protobuf.GeneratedMessage
      implements PlayMajiangResOrBuilder {
    // Use PlayMajiangRes.newBuilder() to construct.
    private PlayMajiangRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayMajiangRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayMajiangRes defaultInstance;
    public static PlayMajiangRes getDefaultInstance() {
      return defaultInstance;
    }

    public PlayMajiangRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayMajiangRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                majiangIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              majiangIds_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                majiangIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                majiangIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              action_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              seat_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              selfAct_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                selfAct_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              fromSeat_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000010;
              zimo_ = input.readInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                huArray_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              huArray_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                huArray_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                huArray_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                xiaohu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              xiaohu_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                xiaohu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                xiaohu_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 82: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                ext_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000200;
              }
              ext_.add(input.readBytes());
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          majiangIds_ = java.util.Collections.unmodifiableList(majiangIds_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          huArray_ = java.util.Collections.unmodifiableList(huArray_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          xiaohu_ = java.util.Collections.unmodifiableList(xiaohu_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(ext_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayMajiangRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayMajiangRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayMajiangRes> PARSER =
        new com.google.protobuf.AbstractParser<PlayMajiangRes>() {
      public PlayMajiangRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayMajiangRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayMajiangRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 majiangIds = 2;
    public static final int MAJIANGIDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> majiangIds_;
    /**
     * <code>repeated int32 majiangIds = 2;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMajiangIdsList() {
      return majiangIds_;
    }
    /**
     * <code>repeated int32 majiangIds = 2;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    public int getMajiangIdsCount() {
      return majiangIds_.size();
    }
    /**
     * <code>repeated int32 majiangIds = 2;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    public int getMajiangIds(int index) {
      return majiangIds_.get(index);
    }

    // optional int32 action = 3;
    public static final int ACTION_FIELD_NUMBER = 3;
    private int action_;
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *动作 1胡 2碰 3明刚 4暗杠
     * </pre>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 action = 3;</code>
     *
     * <pre>
     *动作 1胡 2碰 3明刚 4暗杠
     * </pre>
     */
    public int getAction() {
      return action_;
    }

    // optional int32 seat = 4;
    public static final int SEAT_FIELD_NUMBER = 4;
    private int seat_;
    /**
     * <code>optional int32 seat = 4;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 seat = 4;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // repeated int32 selfAct = 5;
    public static final int SELFACT_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> selfAct_;
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSelfActList() {
      return selfAct_;
    }
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    public int getSelfActCount() {
      return selfAct_.size();
    }
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    public int getSelfAct(int index) {
      return selfAct_.get(index);
    }

    // optional int32 fromSeat = 6;
    public static final int FROMSEAT_FIELD_NUMBER = 6;
    private int fromSeat_;
    /**
     * <code>optional int32 fromSeat = 6;</code>
     *
     * <pre>
     *碰杠的时候出牌人的座位
     * </pre>
     */
    public boolean hasFromSeat() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 fromSeat = 6;</code>
     *
     * <pre>
     *碰杠的时候出牌人的座位
     * </pre>
     */
    public int getFromSeat() {
      return fromSeat_;
    }

    // optional int32 zimo = 7;
    public static final int ZIMO_FIELD_NUMBER = 7;
    private int zimo_;
    /**
     * <code>optional int32 zimo = 7;</code>
     *
     * <pre>
     *胡牌是否是自摸
     * </pre>
     */
    public boolean hasZimo() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 zimo = 7;</code>
     *
     * <pre>
     *胡牌是否是自摸
     * </pre>
     */
    public int getZimo() {
      return zimo_;
    }

    // repeated int32 huArray = 8;
    public static final int HUARRAY_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> huArray_;
    /**
     * <code>repeated int32 huArray = 8;</code>
     *
     * <pre>
     *长沙麻将胡牌的各种类型  (前台显示)
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHuArrayList() {
      return huArray_;
    }
    /**
     * <code>repeated int32 huArray = 8;</code>
     *
     * <pre>
     *长沙麻将胡牌的各种类型  (前台显示)
     * </pre>
     */
    public int getHuArrayCount() {
      return huArray_.size();
    }
    /**
     * <code>repeated int32 huArray = 8;</code>
     *
     * <pre>
     *长沙麻将胡牌的各种类型  (前台显示)
     * </pre>
     */
    public int getHuArray(int index) {
      return huArray_.get(index);
    }

    // repeated int32 xiaohu = 9;
    public static final int XIAOHU_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> xiaohu_;
    /**
     * <code>repeated int32 xiaohu = 9;</code>
     *
     * <pre>
     *按钮显示
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getXiaohuList() {
      return xiaohu_;
    }
    /**
     * <code>repeated int32 xiaohu = 9;</code>
     *
     * <pre>
     *按钮显示
     * </pre>
     */
    public int getXiaohuCount() {
      return xiaohu_.size();
    }
    /**
     * <code>repeated int32 xiaohu = 9;</code>
     *
     * <pre>
     *按钮显示
     * </pre>
     */
    public int getXiaohu(int index) {
      return xiaohu_.get(index);
    }

    // repeated string ext = 10;
    public static final int EXT_FIELD_NUMBER = 10;
    private com.google.protobuf.LazyStringList ext_;
    /**
     * <code>repeated string ext = 10;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.String>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated string ext = 10;</code>
     *
     * <pre>
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated string ext = 10;</code>
     *
     * <pre>
     * </pre>
     */
    public java.lang.String getExt(int index) {
      return ext_.get(index);
    }
    /**
     * <code>repeated string ext = 10;</code>
     *
     * <pre>
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtBytes(int index) {
      return ext_.getByteString(index);
    }

    private void initFields() {
      userId_ = "";
      majiangIds_ = java.util.Collections.emptyList();
      action_ = 0;
      seat_ = 0;
      selfAct_ = java.util.Collections.emptyList();
      fromSeat_ = 0;
      zimo_ = 0;
      huArray_ = java.util.Collections.emptyList();
      xiaohu_ = java.util.Collections.emptyList();
      ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      for (int i = 0; i < majiangIds_.size(); i++) {
        output.writeInt32(2, majiangIds_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, action_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, seat_);
      }
      for (int i = 0; i < selfAct_.size(); i++) {
        output.writeInt32(5, selfAct_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, fromSeat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(7, zimo_);
      }
      for (int i = 0; i < huArray_.size(); i++) {
        output.writeInt32(8, huArray_.get(i));
      }
      for (int i = 0; i < xiaohu_.size(); i++) {
        output.writeInt32(9, xiaohu_.get(i));
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeBytes(10, ext_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < majiangIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(majiangIds_.get(i));
        }
        size += dataSize;
        size += 1 * getMajiangIdsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, action_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, seat_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < selfAct_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(selfAct_.get(i));
        }
        size += dataSize;
        size += 1 * getSelfActList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, fromSeat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, zimo_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < huArray_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(huArray_.get(i));
        }
        size += dataSize;
        size += 1 * getHuArrayList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < xiaohu_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(xiaohu_.get(i));
        }
        size += dataSize;
        size += 1 * getXiaohuList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ext_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getExtList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.PlayMajiangRes}
     *
     * <pre>
     *麻将
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayMajiangRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayMajiangRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        majiangIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        fromSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        zimo_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        huArray_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        xiaohu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_PlayMajiangRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          majiangIds_ = java.util.Collections.unmodifiableList(majiangIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.majiangIds_ = majiangIds_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.action_ = action_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seat_ = seat_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.selfAct_ = selfAct_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fromSeat_ = fromSeat_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.zimo_ = zimo_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          huArray_ = java.util.Collections.unmodifiableList(huArray_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.huArray_ = huArray_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          xiaohu_ = java.util.Collections.unmodifiableList(xiaohu_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.xiaohu_ = xiaohu_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(
              ext_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.ext_ = ext_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (!other.majiangIds_.isEmpty()) {
          if (majiangIds_.isEmpty()) {
            majiangIds_ = other.majiangIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMajiangIdsIsMutable();
            majiangIds_.addAll(other.majiangIds_);
          }
          onChanged();
        }
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (!other.selfAct_.isEmpty()) {
          if (selfAct_.isEmpty()) {
            selfAct_ = other.selfAct_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSelfActIsMutable();
            selfAct_.addAll(other.selfAct_);
          }
          onChanged();
        }
        if (other.hasFromSeat()) {
          setFromSeat(other.getFromSeat());
        }
        if (other.hasZimo()) {
          setZimo(other.getZimo());
        }
        if (!other.huArray_.isEmpty()) {
          if (huArray_.isEmpty()) {
            huArray_ = other.huArray_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureHuArrayIsMutable();
            huArray_.addAll(other.huArray_);
          }
          onChanged();
        }
        if (!other.xiaohu_.isEmpty()) {
          if (xiaohu_.isEmpty()) {
            xiaohu_ = other.xiaohu_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureXiaohuIsMutable();
            xiaohu_.addAll(other.xiaohu_);
          }
          onChanged();
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.PlayMajiangRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // repeated int32 majiangIds = 2;
      private java.util.List<java.lang.Integer> majiangIds_ = java.util.Collections.emptyList();
      private void ensureMajiangIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          majiangIds_ = new java.util.ArrayList<java.lang.Integer>(majiangIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 majiangIds = 2;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMajiangIdsList() {
        return java.util.Collections.unmodifiableList(majiangIds_);
      }
      /**
       * <code>repeated int32 majiangIds = 2;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public int getMajiangIdsCount() {
        return majiangIds_.size();
      }
      /**
       * <code>repeated int32 majiangIds = 2;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public int getMajiangIds(int index) {
        return majiangIds_.get(index);
      }
      /**
       * <code>repeated int32 majiangIds = 2;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder setMajiangIds(
          int index, int value) {
        ensureMajiangIdsIsMutable();
        majiangIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 majiangIds = 2;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder addMajiangIds(int value) {
        ensureMajiangIdsIsMutable();
        majiangIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 majiangIds = 2;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder addAllMajiangIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMajiangIdsIsMutable();
        super.addAll(values, majiangIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 majiangIds = 2;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder clearMajiangIds() {
        majiangIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 action = 3;
      private int action_ ;
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *动作 1胡 2碰 3明刚 4暗杠
       * </pre>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *动作 1胡 2碰 3明刚 4暗杠
       * </pre>
       */
      public int getAction() {
        return action_;
      }
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *动作 1胡 2碰 3明刚 4暗杠
       * </pre>
       */
      public Builder setAction(int value) {
        bitField0_ |= 0x00000004;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 action = 3;</code>
       *
       * <pre>
       *动作 1胡 2碰 3明刚 4暗杠
       * </pre>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000004);
        action_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat = 4;
      private int seat_ ;
      /**
       * <code>optional int32 seat = 4;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 seat = 4;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>optional int32 seat = 4;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000008;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat = 4;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000008);
        seat_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 selfAct = 5;
      private java.util.List<java.lang.Integer> selfAct_ = java.util.Collections.emptyList();
      private void ensureSelfActIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = new java.util.ArrayList<java.lang.Integer>(selfAct_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSelfActList() {
        return java.util.Collections.unmodifiableList(selfAct_);
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public int getSelfActCount() {
        return selfAct_.size();
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public int getSelfAct(int index) {
        return selfAct_.get(index);
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder setSelfAct(
          int index, int value) {
        ensureSelfActIsMutable();
        selfAct_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder addSelfAct(int value) {
        ensureSelfActIsMutable();
        selfAct_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder addAllSelfAct(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSelfActIsMutable();
        super.addAll(values, selfAct_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder clearSelfAct() {
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional int32 fromSeat = 6;
      private int fromSeat_ ;
      /**
       * <code>optional int32 fromSeat = 6;</code>
       *
       * <pre>
       *碰杠的时候出牌人的座位
       * </pre>
       */
      public boolean hasFromSeat() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 fromSeat = 6;</code>
       *
       * <pre>
       *碰杠的时候出牌人的座位
       * </pre>
       */
      public int getFromSeat() {
        return fromSeat_;
      }
      /**
       * <code>optional int32 fromSeat = 6;</code>
       *
       * <pre>
       *碰杠的时候出牌人的座位
       * </pre>
       */
      public Builder setFromSeat(int value) {
        bitField0_ |= 0x00000020;
        fromSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fromSeat = 6;</code>
       *
       * <pre>
       *碰杠的时候出牌人的座位
       * </pre>
       */
      public Builder clearFromSeat() {
        bitField0_ = (bitField0_ & ~0x00000020);
        fromSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 zimo = 7;
      private int zimo_ ;
      /**
       * <code>optional int32 zimo = 7;</code>
       *
       * <pre>
       *胡牌是否是自摸
       * </pre>
       */
      public boolean hasZimo() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 zimo = 7;</code>
       *
       * <pre>
       *胡牌是否是自摸
       * </pre>
       */
      public int getZimo() {
        return zimo_;
      }
      /**
       * <code>optional int32 zimo = 7;</code>
       *
       * <pre>
       *胡牌是否是自摸
       * </pre>
       */
      public Builder setZimo(int value) {
        bitField0_ |= 0x00000040;
        zimo_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zimo = 7;</code>
       *
       * <pre>
       *胡牌是否是自摸
       * </pre>
       */
      public Builder clearZimo() {
        bitField0_ = (bitField0_ & ~0x00000040);
        zimo_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 huArray = 8;
      private java.util.List<java.lang.Integer> huArray_ = java.util.Collections.emptyList();
      private void ensureHuArrayIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          huArray_ = new java.util.ArrayList<java.lang.Integer>(huArray_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 huArray = 8;</code>
       *
       * <pre>
       *长沙麻将胡牌的各种类型  (前台显示)
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHuArrayList() {
        return java.util.Collections.unmodifiableList(huArray_);
      }
      /**
       * <code>repeated int32 huArray = 8;</code>
       *
       * <pre>
       *长沙麻将胡牌的各种类型  (前台显示)
       * </pre>
       */
      public int getHuArrayCount() {
        return huArray_.size();
      }
      /**
       * <code>repeated int32 huArray = 8;</code>
       *
       * <pre>
       *长沙麻将胡牌的各种类型  (前台显示)
       * </pre>
       */
      public int getHuArray(int index) {
        return huArray_.get(index);
      }
      /**
       * <code>repeated int32 huArray = 8;</code>
       *
       * <pre>
       *长沙麻将胡牌的各种类型  (前台显示)
       * </pre>
       */
      public Builder setHuArray(
          int index, int value) {
        ensureHuArrayIsMutable();
        huArray_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 huArray = 8;</code>
       *
       * <pre>
       *长沙麻将胡牌的各种类型  (前台显示)
       * </pre>
       */
      public Builder addHuArray(int value) {
        ensureHuArrayIsMutable();
        huArray_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 huArray = 8;</code>
       *
       * <pre>
       *长沙麻将胡牌的各种类型  (前台显示)
       * </pre>
       */
      public Builder addAllHuArray(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHuArrayIsMutable();
        super.addAll(values, huArray_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 huArray = 8;</code>
       *
       * <pre>
       *长沙麻将胡牌的各种类型  (前台显示)
       * </pre>
       */
      public Builder clearHuArray() {
        huArray_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 xiaohu = 9;
      private java.util.List<java.lang.Integer> xiaohu_ = java.util.Collections.emptyList();
      private void ensureXiaohuIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          xiaohu_ = new java.util.ArrayList<java.lang.Integer>(xiaohu_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 xiaohu = 9;</code>
       *
       * <pre>
       *按钮显示
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getXiaohuList() {
        return java.util.Collections.unmodifiableList(xiaohu_);
      }
      /**
       * <code>repeated int32 xiaohu = 9;</code>
       *
       * <pre>
       *按钮显示
       * </pre>
       */
      public int getXiaohuCount() {
        return xiaohu_.size();
      }
      /**
       * <code>repeated int32 xiaohu = 9;</code>
       *
       * <pre>
       *按钮显示
       * </pre>
       */
      public int getXiaohu(int index) {
        return xiaohu_.get(index);
      }
      /**
       * <code>repeated int32 xiaohu = 9;</code>
       *
       * <pre>
       *按钮显示
       * </pre>
       */
      public Builder setXiaohu(
          int index, int value) {
        ensureXiaohuIsMutable();
        xiaohu_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohu = 9;</code>
       *
       * <pre>
       *按钮显示
       * </pre>
       */
      public Builder addXiaohu(int value) {
        ensureXiaohuIsMutable();
        xiaohu_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohu = 9;</code>
       *
       * <pre>
       *按钮显示
       * </pre>
       */
      public Builder addAllXiaohu(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureXiaohuIsMutable();
        super.addAll(values, xiaohu_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohu = 9;</code>
       *
       * <pre>
       *按钮显示
       * </pre>
       */
      public Builder clearXiaohu() {
        xiaohu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated string ext = 10;
      private com.google.protobuf.LazyStringList ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          ext_ = new com.google.protobuf.LazyStringArrayList(ext_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated string ext = 10;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.String>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated string ext = 10;</code>
       *
       * <pre>
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated string ext = 10;</code>
       *
       * <pre>
       * </pre>
       */
      public java.lang.String getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated string ext = 10;</code>
       *
       * <pre>
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtBytes(int index) {
        return ext_.getByteString(index);
      }
      /**
       * <code>repeated string ext = 10;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 10;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 10;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 10;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearExt() {
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 10;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.PlayMajiangRes)
    }

    static {
      defaultInstance = new PlayMajiangRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.PlayMajiangRes)
  }

  public interface MoMajiangResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string userId = 1;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // optional int32 majiangId = 2;
    /**
     * <code>optional int32 majiangId = 2;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    boolean hasMajiangId();
    /**
     * <code>optional int32 majiangId = 2;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    int getMajiangId();

    // optional int32 seat = 3;
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    int getSeat();

    // repeated int32 selfAct = 4;
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    java.util.List<java.lang.Integer> getSelfActList();
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    int getSelfActCount();
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    int getSelfAct(int index);

    // optional int32 remain = 5;
    /**
     * <code>optional int32 remain = 5;</code>
     */
    boolean hasRemain();
    /**
     * <code>optional int32 remain = 5;</code>
     */
    int getRemain();

    // optional int32 nextDisCardIndex = 6;
    /**
     * <code>optional int32 nextDisCardIndex = 6;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    boolean hasNextDisCardIndex();
    /**
     * <code>optional int32 nextDisCardIndex = 6;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    int getNextDisCardIndex();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.MoMajiangRes}
   *
   * <pre>
   *摸牌
   * </pre>
   */
  public static final class MoMajiangRes extends
      com.google.protobuf.GeneratedMessage
      implements MoMajiangResOrBuilder {
    // Use MoMajiangRes.newBuilder() to construct.
    private MoMajiangRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MoMajiangRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MoMajiangRes defaultInstance;
    public static MoMajiangRes getDefaultInstance() {
      return defaultInstance;
    }

    public MoMajiangRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MoMajiangRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              majiangId_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              seat_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              selfAct_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                selfAct_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              remain_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              nextDisCardIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_MoMajiangRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_MoMajiangRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes.Builder.class);
    }

    public static com.google.protobuf.Parser<MoMajiangRes> PARSER =
        new com.google.protobuf.AbstractParser<MoMajiangRes>() {
      public MoMajiangRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MoMajiangRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MoMajiangRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 majiangId = 2;
    public static final int MAJIANGID_FIELD_NUMBER = 2;
    private int majiangId_;
    /**
     * <code>optional int32 majiangId = 2;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    public boolean hasMajiangId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 majiangId = 2;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    public int getMajiangId() {
      return majiangId_;
    }

    // optional int32 seat = 3;
    public static final int SEAT_FIELD_NUMBER = 3;
    private int seat_;
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // repeated int32 selfAct = 4;
    public static final int SELFACT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> selfAct_;
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSelfActList() {
      return selfAct_;
    }
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    public int getSelfActCount() {
      return selfAct_.size();
    }
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    public int getSelfAct(int index) {
      return selfAct_.get(index);
    }

    // optional int32 remain = 5;
    public static final int REMAIN_FIELD_NUMBER = 5;
    private int remain_;
    /**
     * <code>optional int32 remain = 5;</code>
     */
    public boolean hasRemain() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 remain = 5;</code>
     */
    public int getRemain() {
      return remain_;
    }

    // optional int32 nextDisCardIndex = 6;
    public static final int NEXTDISCARDINDEX_FIELD_NUMBER = 6;
    private int nextDisCardIndex_;
    /**
     * <code>optional int32 nextDisCardIndex = 6;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    public boolean hasNextDisCardIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 nextDisCardIndex = 6;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    public int getNextDisCardIndex() {
      return nextDisCardIndex_;
    }

    private void initFields() {
      userId_ = "";
      majiangId_ = 0;
      seat_ = 0;
      selfAct_ = java.util.Collections.emptyList();
      remain_ = 0;
      nextDisCardIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, majiangId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, seat_);
      }
      for (int i = 0; i < selfAct_.size(); i++) {
        output.writeInt32(4, selfAct_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, remain_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, nextDisCardIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, majiangId_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, seat_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < selfAct_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(selfAct_.get(i));
        }
        size += dataSize;
        size += 1 * getSelfActList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, remain_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, nextDisCardIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.MoMajiangRes}
     *
     * <pre>
     *摸牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_MoMajiangRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_MoMajiangRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        majiangId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        remain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        nextDisCardIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_MoMajiangRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.majiangId_ = majiangId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seat_ = seat_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.selfAct_ = selfAct_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.remain_ = remain_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.nextDisCardIndex_ = nextDisCardIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasMajiangId()) {
          setMajiangId(other.getMajiangId());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (!other.selfAct_.isEmpty()) {
          if (selfAct_.isEmpty()) {
            selfAct_ = other.selfAct_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSelfActIsMutable();
            selfAct_.addAll(other.selfAct_);
          }
          onChanged();
        }
        if (other.hasRemain()) {
          setRemain(other.getRemain());
        }
        if (other.hasNextDisCardIndex()) {
          setNextDisCardIndex(other.getNextDisCardIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.MoMajiangRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // optional int32 majiangId = 2;
      private int majiangId_ ;
      /**
       * <code>optional int32 majiangId = 2;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public boolean hasMajiangId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 majiangId = 2;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public int getMajiangId() {
        return majiangId_;
      }
      /**
       * <code>optional int32 majiangId = 2;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder setMajiangId(int value) {
        bitField0_ |= 0x00000002;
        majiangId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 majiangId = 2;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder clearMajiangId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        majiangId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat = 3;
      private int seat_ ;
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000004;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seat_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 selfAct = 4;
      private java.util.List<java.lang.Integer> selfAct_ = java.util.Collections.emptyList();
      private void ensureSelfActIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          selfAct_ = new java.util.ArrayList<java.lang.Integer>(selfAct_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSelfActList() {
        return java.util.Collections.unmodifiableList(selfAct_);
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public int getSelfActCount() {
        return selfAct_.size();
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public int getSelfAct(int index) {
        return selfAct_.get(index);
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder setSelfAct(
          int index, int value) {
        ensureSelfActIsMutable();
        selfAct_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder addSelfAct(int value) {
        ensureSelfActIsMutable();
        selfAct_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder addAllSelfAct(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSelfActIsMutable();
        super.addAll(values, selfAct_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder clearSelfAct() {
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 remain = 5;
      private int remain_ ;
      /**
       * <code>optional int32 remain = 5;</code>
       */
      public boolean hasRemain() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 remain = 5;</code>
       */
      public int getRemain() {
        return remain_;
      }
      /**
       * <code>optional int32 remain = 5;</code>
       */
      public Builder setRemain(int value) {
        bitField0_ |= 0x00000010;
        remain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remain = 5;</code>
       */
      public Builder clearRemain() {
        bitField0_ = (bitField0_ & ~0x00000010);
        remain_ = 0;
        onChanged();
        return this;
      }

      // optional int32 nextDisCardIndex = 6;
      private int nextDisCardIndex_ ;
      /**
       * <code>optional int32 nextDisCardIndex = 6;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public boolean hasNextDisCardIndex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 nextDisCardIndex = 6;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public int getNextDisCardIndex() {
        return nextDisCardIndex_;
      }
      /**
       * <code>optional int32 nextDisCardIndex = 6;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public Builder setNextDisCardIndex(int value) {
        bitField0_ |= 0x00000020;
        nextDisCardIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nextDisCardIndex = 6;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public Builder clearNextDisCardIndex() {
        bitField0_ = (bitField0_ & ~0x00000020);
        nextDisCardIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.MoMajiangRes)
    }

    static {
      defaultInstance = new MoMajiangRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.MoMajiangRes)
  }

  public interface BuFaMoMajiangResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string userId = 1;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // repeated int32 majiangId = 2;
    /**
     * <code>repeated int32 majiangId = 2;</code>
     *
     * <pre>
     *补摸的麻将组
     * </pre>
     */
    java.util.List<java.lang.Integer> getMajiangIdList();
    /**
     * <code>repeated int32 majiangId = 2;</code>
     *
     * <pre>
     *补摸的麻将组
     * </pre>
     */
    int getMajiangIdCount();
    /**
     * <code>repeated int32 majiangId = 2;</code>
     *
     * <pre>
     *补摸的麻将组
     * </pre>
     */
    int getMajiangId(int index);

    // optional int32 seat = 3;
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    int getSeat();

    // repeated int32 selfAct = 4;
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作
     * </pre>
     */
    java.util.List<java.lang.Integer> getSelfActList();
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作
     * </pre>
     */
    int getSelfActCount();
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作
     * </pre>
     */
    int getSelfAct(int index);

    // optional int32 remain = 5;
    /**
     * <code>optional int32 remain = 5;</code>
     */
    boolean hasRemain();
    /**
     * <code>optional int32 remain = 5;</code>
     */
    int getRemain();

    // optional int32 huaCount = 6;
    /**
     * <code>optional int32 huaCount = 6;</code>
     */
    boolean hasHuaCount();
    /**
     * <code>optional int32 huaCount = 6;</code>
     */
    int getHuaCount();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.BuFaMoMajiangRes}
   */
  public static final class BuFaMoMajiangRes extends
      com.google.protobuf.GeneratedMessage
      implements BuFaMoMajiangResOrBuilder {
    // Use BuFaMoMajiangRes.newBuilder() to construct.
    private BuFaMoMajiangRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BuFaMoMajiangRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BuFaMoMajiangRes defaultInstance;
    public static BuFaMoMajiangRes getDefaultInstance() {
      return defaultInstance;
    }

    public BuFaMoMajiangRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BuFaMoMajiangRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                majiangId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              majiangId_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                majiangId_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                majiangId_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              seat_ = input.readInt32();
              break;
            }
            case 32: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              selfAct_.add(input.readInt32());
              break;
            }
            case 34: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008) && input.getBytesUntilLimit() > 0) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000008;
              }
              while (input.getBytesUntilLimit() > 0) {
                selfAct_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 40: {
              bitField0_ |= 0x00000004;
              remain_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              huaCount_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          majiangId_ = java.util.Collections.unmodifiableList(majiangId_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_BuFaMoMajiangRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_BuFaMoMajiangRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes.Builder.class);
    }

    public static com.google.protobuf.Parser<BuFaMoMajiangRes> PARSER =
        new com.google.protobuf.AbstractParser<BuFaMoMajiangRes>() {
      public BuFaMoMajiangRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BuFaMoMajiangRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BuFaMoMajiangRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 majiangId = 2;
    public static final int MAJIANGID_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> majiangId_;
    /**
     * <code>repeated int32 majiangId = 2;</code>
     *
     * <pre>
     *补摸的麻将组
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMajiangIdList() {
      return majiangId_;
    }
    /**
     * <code>repeated int32 majiangId = 2;</code>
     *
     * <pre>
     *补摸的麻将组
     * </pre>
     */
    public int getMajiangIdCount() {
      return majiangId_.size();
    }
    /**
     * <code>repeated int32 majiangId = 2;</code>
     *
     * <pre>
     *补摸的麻将组
     * </pre>
     */
    public int getMajiangId(int index) {
      return majiangId_.get(index);
    }

    // optional int32 seat = 3;
    public static final int SEAT_FIELD_NUMBER = 3;
    private int seat_;
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // repeated int32 selfAct = 4;
    public static final int SELFACT_FIELD_NUMBER = 4;
    private java.util.List<java.lang.Integer> selfAct_;
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSelfActList() {
      return selfAct_;
    }
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作
     * </pre>
     */
    public int getSelfActCount() {
      return selfAct_.size();
    }
    /**
     * <code>repeated int32 selfAct = 4;</code>
     *
     * <pre>
     *自己的动作
     * </pre>
     */
    public int getSelfAct(int index) {
      return selfAct_.get(index);
    }

    // optional int32 remain = 5;
    public static final int REMAIN_FIELD_NUMBER = 5;
    private int remain_;
    /**
     * <code>optional int32 remain = 5;</code>
     */
    public boolean hasRemain() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 remain = 5;</code>
     */
    public int getRemain() {
      return remain_;
    }

    // optional int32 huaCount = 6;
    public static final int HUACOUNT_FIELD_NUMBER = 6;
    private int huaCount_;
    /**
     * <code>optional int32 huaCount = 6;</code>
     */
    public boolean hasHuaCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 huaCount = 6;</code>
     */
    public int getHuaCount() {
      return huaCount_;
    }

    private void initFields() {
      userId_ = "";
      majiangId_ = java.util.Collections.emptyList();
      seat_ = 0;
      selfAct_ = java.util.Collections.emptyList();
      remain_ = 0;
      huaCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      for (int i = 0; i < majiangId_.size(); i++) {
        output.writeInt32(2, majiangId_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, seat_);
      }
      for (int i = 0; i < selfAct_.size(); i++) {
        output.writeInt32(4, selfAct_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(5, remain_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, huaCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < majiangId_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(majiangId_.get(i));
        }
        size += dataSize;
        size += 1 * getMajiangIdList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, seat_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < selfAct_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(selfAct_.get(i));
        }
        size += dataSize;
        size += 1 * getSelfActList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, remain_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, huaCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.BuFaMoMajiangRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_BuFaMoMajiangRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_BuFaMoMajiangRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        majiangId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        remain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        huaCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_BuFaMoMajiangRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          majiangId_ = java.util.Collections.unmodifiableList(majiangId_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.majiangId_ = majiangId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.seat_ = seat_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.selfAct_ = selfAct_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.remain_ = remain_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.huaCount_ = huaCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (!other.majiangId_.isEmpty()) {
          if (majiangId_.isEmpty()) {
            majiangId_ = other.majiangId_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMajiangIdIsMutable();
            majiangId_.addAll(other.majiangId_);
          }
          onChanged();
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (!other.selfAct_.isEmpty()) {
          if (selfAct_.isEmpty()) {
            selfAct_ = other.selfAct_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureSelfActIsMutable();
            selfAct_.addAll(other.selfAct_);
          }
          onChanged();
        }
        if (other.hasRemain()) {
          setRemain(other.getRemain());
        }
        if (other.hasHuaCount()) {
          setHuaCount(other.getHuaCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.BuFaMoMajiangRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // repeated int32 majiangId = 2;
      private java.util.List<java.lang.Integer> majiangId_ = java.util.Collections.emptyList();
      private void ensureMajiangIdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          majiangId_ = new java.util.ArrayList<java.lang.Integer>(majiangId_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 majiangId = 2;</code>
       *
       * <pre>
       *补摸的麻将组
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMajiangIdList() {
        return java.util.Collections.unmodifiableList(majiangId_);
      }
      /**
       * <code>repeated int32 majiangId = 2;</code>
       *
       * <pre>
       *补摸的麻将组
       * </pre>
       */
      public int getMajiangIdCount() {
        return majiangId_.size();
      }
      /**
       * <code>repeated int32 majiangId = 2;</code>
       *
       * <pre>
       *补摸的麻将组
       * </pre>
       */
      public int getMajiangId(int index) {
        return majiangId_.get(index);
      }
      /**
       * <code>repeated int32 majiangId = 2;</code>
       *
       * <pre>
       *补摸的麻将组
       * </pre>
       */
      public Builder setMajiangId(
          int index, int value) {
        ensureMajiangIdIsMutable();
        majiangId_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 majiangId = 2;</code>
       *
       * <pre>
       *补摸的麻将组
       * </pre>
       */
      public Builder addMajiangId(int value) {
        ensureMajiangIdIsMutable();
        majiangId_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 majiangId = 2;</code>
       *
       * <pre>
       *补摸的麻将组
       * </pre>
       */
      public Builder addAllMajiangId(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMajiangIdIsMutable();
        super.addAll(values, majiangId_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 majiangId = 2;</code>
       *
       * <pre>
       *补摸的麻将组
       * </pre>
       */
      public Builder clearMajiangId() {
        majiangId_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 seat = 3;
      private int seat_ ;
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000004;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seat_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 selfAct = 4;
      private java.util.List<java.lang.Integer> selfAct_ = java.util.Collections.emptyList();
      private void ensureSelfActIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          selfAct_ = new java.util.ArrayList<java.lang.Integer>(selfAct_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSelfActList() {
        return java.util.Collections.unmodifiableList(selfAct_);
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作
       * </pre>
       */
      public int getSelfActCount() {
        return selfAct_.size();
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作
       * </pre>
       */
      public int getSelfAct(int index) {
        return selfAct_.get(index);
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作
       * </pre>
       */
      public Builder setSelfAct(
          int index, int value) {
        ensureSelfActIsMutable();
        selfAct_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作
       * </pre>
       */
      public Builder addSelfAct(int value) {
        ensureSelfActIsMutable();
        selfAct_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作
       * </pre>
       */
      public Builder addAllSelfAct(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSelfActIsMutable();
        super.addAll(values, selfAct_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 4;</code>
       *
       * <pre>
       *自己的动作
       * </pre>
       */
      public Builder clearSelfAct() {
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }

      // optional int32 remain = 5;
      private int remain_ ;
      /**
       * <code>optional int32 remain = 5;</code>
       */
      public boolean hasRemain() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 remain = 5;</code>
       */
      public int getRemain() {
        return remain_;
      }
      /**
       * <code>optional int32 remain = 5;</code>
       */
      public Builder setRemain(int value) {
        bitField0_ |= 0x00000010;
        remain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remain = 5;</code>
       */
      public Builder clearRemain() {
        bitField0_ = (bitField0_ & ~0x00000010);
        remain_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huaCount = 6;
      private int huaCount_ ;
      /**
       * <code>optional int32 huaCount = 6;</code>
       */
      public boolean hasHuaCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 huaCount = 6;</code>
       */
      public int getHuaCount() {
        return huaCount_;
      }
      /**
       * <code>optional int32 huaCount = 6;</code>
       */
      public Builder setHuaCount(int value) {
        bitField0_ |= 0x00000020;
        huaCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huaCount = 6;</code>
       */
      public Builder clearHuaCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        huaCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.BuFaMoMajiangRes)
    }

    static {
      defaultInstance = new BuFaMoMajiangRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.BuFaMoMajiangRes)
  }

  public interface GangMoMajiangResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string userId = 1;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 seat = 3;
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    int getSeat();

    // required int32 gangId = 4;
    /**
     * <code>required int32 gangId = 4;</code>
     *
     * <pre>
     *杠的牌id
     * </pre>
     */
    boolean hasGangId();
    /**
     * <code>required int32 gangId = 4;</code>
     *
     * <pre>
     *杠的牌id
     * </pre>
     */
    int getGangId();

    // repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
     */
    java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes> 
        getGangActsList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
     */
    com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes getGangActs(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
     */
    int getGangActsCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangResOrBuilder> 
        getGangActsOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
     */
    com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangResOrBuilder getGangActsOrBuilder(
        int index);

    // optional int32 reconnect = 6;
    /**
     * <code>optional int32 reconnect = 6;</code>
     *
     * <pre>
     *重连
     * </pre>
     */
    boolean hasReconnect();
    /**
     * <code>optional int32 reconnect = 6;</code>
     *
     * <pre>
     *重连
     * </pre>
     */
    int getReconnect();

    // optional int32 remain = 7;
    /**
     * <code>optional int32 remain = 7;</code>
     */
    boolean hasRemain();
    /**
     * <code>optional int32 remain = 7;</code>
     */
    int getRemain();

    // optional int32 dice = 8;
    /**
     * <code>optional int32 dice = 8;</code>
     *
     * <pre>
     *色子值
     * </pre>
     */
    boolean hasDice();
    /**
     * <code>optional int32 dice = 8;</code>
     *
     * <pre>
     *色子值
     * </pre>
     */
    int getDice();

    // optional int32 hasAct = 9;
    /**
     * <code>optional int32 hasAct = 9;</code>
     *
     * <pre>
     *是否有玩家有操作：0否，1是
     * </pre>
     */
    boolean hasHasAct();
    /**
     * <code>optional int32 hasAct = 9;</code>
     *
     * <pre>
     *是否有玩家有操作：0否，1是
     * </pre>
     */
    int getHasAct();

    // optional int32 mjNum = 10;
    /**
     * <code>optional int32 mjNum = 10;</code>
     *
     * <pre>
     *打色子打到的麻将数量
     * </pre>
     */
    boolean hasMjNum();
    /**
     * <code>optional int32 mjNum = 10;</code>
     *
     * <pre>
     *打色子打到的麻将数量
     * </pre>
     */
    int getMjNum();

    // optional int32 nextDisCardIndex = 11;
    /**
     * <code>optional int32 nextDisCardIndex = 11;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    boolean hasNextDisCardIndex();
    /**
     * <code>optional int32 nextDisCardIndex = 11;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    int getNextDisCardIndex();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.GangMoMajiangRes}
   *
   * <pre>
   *长沙麻将杠后摸牌
   * </pre>
   */
  public static final class GangMoMajiangRes extends
      com.google.protobuf.GeneratedMessage
      implements GangMoMajiangResOrBuilder {
    // Use GangMoMajiangRes.newBuilder() to construct.
    private GangMoMajiangRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GangMoMajiangRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GangMoMajiangRes defaultInstance;
    public static GangMoMajiangRes getDefaultInstance() {
      return defaultInstance;
    }

    public GangMoMajiangRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GangMoMajiangRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              seat_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              gangId_ = input.readInt32();
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                gangActs_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes>();
                mutable_bitField0_ |= 0x00000010;
              }
              gangActs_.add(input.readMessage(com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.PARSER, extensionRegistry));
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              reconnect_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              remain_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              dice_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              hasAct_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              mjNum_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000200;
              nextDisCardIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          gangActs_ = java.util.Collections.unmodifiableList(gangActs_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_GangMoMajiangRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_GangMoMajiangRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes.Builder.class);
    }

    public static com.google.protobuf.Parser<GangMoMajiangRes> PARSER =
        new com.google.protobuf.AbstractParser<GangMoMajiangRes>() {
      public GangMoMajiangRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GangMoMajiangRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GangMoMajiangRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *出牌人的userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 seat = 3;
    public static final int SEAT_FIELD_NUMBER = 3;
    private int seat_;
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 seat = 3;</code>
     *
     * <pre>
     *出牌人的座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // required int32 gangId = 4;
    public static final int GANGID_FIELD_NUMBER = 4;
    private int gangId_;
    /**
     * <code>required int32 gangId = 4;</code>
     *
     * <pre>
     *杠的牌id
     * </pre>
     */
    public boolean hasGangId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 gangId = 4;</code>
     *
     * <pre>
     *杠的牌id
     * </pre>
     */
    public int getGangId() {
      return gangId_;
    }

    // repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;
    public static final int GANGACTS_FIELD_NUMBER = 5;
    private java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes> gangActs_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes> getGangActsList() {
      return gangActs_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangResOrBuilder> 
        getGangActsOrBuilderList() {
      return gangActs_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
     */
    public int getGangActsCount() {
      return gangActs_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
     */
    public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes getGangActs(int index) {
      return gangActs_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
     */
    public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangResOrBuilder getGangActsOrBuilder(
        int index) {
      return gangActs_.get(index);
    }

    // optional int32 reconnect = 6;
    public static final int RECONNECT_FIELD_NUMBER = 6;
    private int reconnect_;
    /**
     * <code>optional int32 reconnect = 6;</code>
     *
     * <pre>
     *重连
     * </pre>
     */
    public boolean hasReconnect() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 reconnect = 6;</code>
     *
     * <pre>
     *重连
     * </pre>
     */
    public int getReconnect() {
      return reconnect_;
    }

    // optional int32 remain = 7;
    public static final int REMAIN_FIELD_NUMBER = 7;
    private int remain_;
    /**
     * <code>optional int32 remain = 7;</code>
     */
    public boolean hasRemain() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 remain = 7;</code>
     */
    public int getRemain() {
      return remain_;
    }

    // optional int32 dice = 8;
    public static final int DICE_FIELD_NUMBER = 8;
    private int dice_;
    /**
     * <code>optional int32 dice = 8;</code>
     *
     * <pre>
     *色子值
     * </pre>
     */
    public boolean hasDice() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 dice = 8;</code>
     *
     * <pre>
     *色子值
     * </pre>
     */
    public int getDice() {
      return dice_;
    }

    // optional int32 hasAct = 9;
    public static final int HASACT_FIELD_NUMBER = 9;
    private int hasAct_;
    /**
     * <code>optional int32 hasAct = 9;</code>
     *
     * <pre>
     *是否有玩家有操作：0否，1是
     * </pre>
     */
    public boolean hasHasAct() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 hasAct = 9;</code>
     *
     * <pre>
     *是否有玩家有操作：0否，1是
     * </pre>
     */
    public int getHasAct() {
      return hasAct_;
    }

    // optional int32 mjNum = 10;
    public static final int MJNUM_FIELD_NUMBER = 10;
    private int mjNum_;
    /**
     * <code>optional int32 mjNum = 10;</code>
     *
     * <pre>
     *打色子打到的麻将数量
     * </pre>
     */
    public boolean hasMjNum() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 mjNum = 10;</code>
     *
     * <pre>
     *打色子打到的麻将数量
     * </pre>
     */
    public int getMjNum() {
      return mjNum_;
    }

    // optional int32 nextDisCardIndex = 11;
    public static final int NEXTDISCARDINDEX_FIELD_NUMBER = 11;
    private int nextDisCardIndex_;
    /**
     * <code>optional int32 nextDisCardIndex = 11;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    public boolean hasNextDisCardIndex() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 nextDisCardIndex = 11;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    public int getNextDisCardIndex() {
      return nextDisCardIndex_;
    }

    private void initFields() {
      userId_ = "";
      name_ = "";
      seat_ = 0;
      gangId_ = 0;
      gangActs_ = java.util.Collections.emptyList();
      reconnect_ = 0;
      remain_ = 0;
      dice_ = 0;
      hasAct_ = 0;
      mjNum_ = 0;
      nextDisCardIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasGangId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getGangActsCount(); i++) {
        if (!getGangActs(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, seat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, gangId_);
      }
      for (int i = 0; i < gangActs_.size(); i++) {
        output.writeMessage(5, gangActs_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, reconnect_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, remain_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(8, dice_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(9, hasAct_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(10, mjNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(11, nextDisCardIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, seat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, gangId_);
      }
      for (int i = 0; i < gangActs_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, gangActs_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, reconnect_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, remain_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, dice_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, hasAct_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, mjNum_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, nextDisCardIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.GangMoMajiangRes}
     *
     * <pre>
     *长沙麻将杠后摸牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_GangMoMajiangRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_GangMoMajiangRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getGangActsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        gangId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (gangActsBuilder_ == null) {
          gangActs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          gangActsBuilder_.clear();
        }
        reconnect_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        remain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        dice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        hasAct_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        mjNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        nextDisCardIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_GangMoMajiangRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gangId_ = gangId_;
        if (gangActsBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            gangActs_ = java.util.Collections.unmodifiableList(gangActs_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.gangActs_ = gangActs_;
        } else {
          result.gangActs_ = gangActsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.reconnect_ = reconnect_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.remain_ = remain_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        result.dice_ = dice_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        result.hasAct_ = hasAct_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.mjNum_ = mjNum_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000200;
        }
        result.nextDisCardIndex_ = nextDisCardIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasGangId()) {
          setGangId(other.getGangId());
        }
        if (gangActsBuilder_ == null) {
          if (!other.gangActs_.isEmpty()) {
            if (gangActs_.isEmpty()) {
              gangActs_ = other.gangActs_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureGangActsIsMutable();
              gangActs_.addAll(other.gangActs_);
            }
            onChanged();
          }
        } else {
          if (!other.gangActs_.isEmpty()) {
            if (gangActsBuilder_.isEmpty()) {
              gangActsBuilder_.dispose();
              gangActsBuilder_ = null;
              gangActs_ = other.gangActs_;
              bitField0_ = (bitField0_ & ~0x00000010);
              gangActsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getGangActsFieldBuilder() : null;
            } else {
              gangActsBuilder_.addAllMessages(other.gangActs_);
            }
          }
        }
        if (other.hasReconnect()) {
          setReconnect(other.getReconnect());
        }
        if (other.hasRemain()) {
          setRemain(other.getRemain());
        }
        if (other.hasDice()) {
          setDice(other.getDice());
        }
        if (other.hasHasAct()) {
          setHasAct(other.getHasAct());
        }
        if (other.hasMjNum()) {
          setMjNum(other.getMjNum());
        }
        if (other.hasNextDisCardIndex()) {
          setNextDisCardIndex(other.getNextDisCardIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasGangId()) {
          
          return false;
        }
        for (int i = 0; i < getGangActsCount(); i++) {
          if (!getGangActs(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.GangMoMajiangRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *出牌人的userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 seat = 3;
      private int seat_ ;
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000004;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat = 3;</code>
       *
       * <pre>
       *出牌人的座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seat_ = 0;
        onChanged();
        return this;
      }

      // required int32 gangId = 4;
      private int gangId_ ;
      /**
       * <code>required int32 gangId = 4;</code>
       *
       * <pre>
       *杠的牌id
       * </pre>
       */
      public boolean hasGangId() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 gangId = 4;</code>
       *
       * <pre>
       *杠的牌id
       * </pre>
       */
      public int getGangId() {
        return gangId_;
      }
      /**
       * <code>required int32 gangId = 4;</code>
       *
       * <pre>
       *杠的牌id
       * </pre>
       */
      public Builder setGangId(int value) {
        bitField0_ |= 0x00000008;
        gangId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 gangId = 4;</code>
       *
       * <pre>
       *杠的牌id
       * </pre>
       */
      public Builder clearGangId() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gangId_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;
      private java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes> gangActs_ =
        java.util.Collections.emptyList();
      private void ensureGangActsIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          gangActs_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes>(gangActs_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangResOrBuilder> gangActsBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes> getGangActsList() {
        if (gangActsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(gangActs_);
        } else {
          return gangActsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public int getGangActsCount() {
        if (gangActsBuilder_ == null) {
          return gangActs_.size();
        } else {
          return gangActsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes getGangActs(int index) {
        if (gangActsBuilder_ == null) {
          return gangActs_.get(index);
        } else {
          return gangActsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public Builder setGangActs(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes value) {
        if (gangActsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGangActsIsMutable();
          gangActs_.set(index, value);
          onChanged();
        } else {
          gangActsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public Builder setGangActs(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder builderForValue) {
        if (gangActsBuilder_ == null) {
          ensureGangActsIsMutable();
          gangActs_.set(index, builderForValue.build());
          onChanged();
        } else {
          gangActsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public Builder addGangActs(com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes value) {
        if (gangActsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGangActsIsMutable();
          gangActs_.add(value);
          onChanged();
        } else {
          gangActsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public Builder addGangActs(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes value) {
        if (gangActsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureGangActsIsMutable();
          gangActs_.add(index, value);
          onChanged();
        } else {
          gangActsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public Builder addGangActs(
          com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder builderForValue) {
        if (gangActsBuilder_ == null) {
          ensureGangActsIsMutable();
          gangActs_.add(builderForValue.build());
          onChanged();
        } else {
          gangActsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public Builder addGangActs(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder builderForValue) {
        if (gangActsBuilder_ == null) {
          ensureGangActsIsMutable();
          gangActs_.add(index, builderForValue.build());
          onChanged();
        } else {
          gangActsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public Builder addAllGangActs(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes> values) {
        if (gangActsBuilder_ == null) {
          ensureGangActsIsMutable();
          super.addAll(values, gangActs_);
          onChanged();
        } else {
          gangActsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public Builder clearGangActs() {
        if (gangActsBuilder_ == null) {
          gangActs_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          gangActsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public Builder removeGangActs(int index) {
        if (gangActsBuilder_ == null) {
          ensureGangActsIsMutable();
          gangActs_.remove(index);
          onChanged();
        } else {
          gangActsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder getGangActsBuilder(
          int index) {
        return getGangActsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangResOrBuilder getGangActsOrBuilder(
          int index) {
        if (gangActsBuilder_ == null) {
          return gangActs_.get(index);  } else {
          return gangActsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangResOrBuilder> 
           getGangActsOrBuilderList() {
        if (gangActsBuilder_ != null) {
          return gangActsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(gangActs_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder addGangActsBuilder() {
        return getGangActsFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder addGangActsBuilder(
          int index) {
        return getGangActsFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangPlayMajiangRes gangActs = 5;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder> 
           getGangActsBuilderList() {
        return getGangActsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangResOrBuilder> 
          getGangActsFieldBuilder() {
        if (gangActsBuilder_ == null) {
          gangActsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangResOrBuilder>(
                  gangActs_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          gangActs_ = null;
        }
        return gangActsBuilder_;
      }

      // optional int32 reconnect = 6;
      private int reconnect_ ;
      /**
       * <code>optional int32 reconnect = 6;</code>
       *
       * <pre>
       *重连
       * </pre>
       */
      public boolean hasReconnect() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 reconnect = 6;</code>
       *
       * <pre>
       *重连
       * </pre>
       */
      public int getReconnect() {
        return reconnect_;
      }
      /**
       * <code>optional int32 reconnect = 6;</code>
       *
       * <pre>
       *重连
       * </pre>
       */
      public Builder setReconnect(int value) {
        bitField0_ |= 0x00000020;
        reconnect_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 reconnect = 6;</code>
       *
       * <pre>
       *重连
       * </pre>
       */
      public Builder clearReconnect() {
        bitField0_ = (bitField0_ & ~0x00000020);
        reconnect_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remain = 7;
      private int remain_ ;
      /**
       * <code>optional int32 remain = 7;</code>
       */
      public boolean hasRemain() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 remain = 7;</code>
       */
      public int getRemain() {
        return remain_;
      }
      /**
       * <code>optional int32 remain = 7;</code>
       */
      public Builder setRemain(int value) {
        bitField0_ |= 0x00000040;
        remain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remain = 7;</code>
       */
      public Builder clearRemain() {
        bitField0_ = (bitField0_ & ~0x00000040);
        remain_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dice = 8;
      private int dice_ ;
      /**
       * <code>optional int32 dice = 8;</code>
       *
       * <pre>
       *色子值
       * </pre>
       */
      public boolean hasDice() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 dice = 8;</code>
       *
       * <pre>
       *色子值
       * </pre>
       */
      public int getDice() {
        return dice_;
      }
      /**
       * <code>optional int32 dice = 8;</code>
       *
       * <pre>
       *色子值
       * </pre>
       */
      public Builder setDice(int value) {
        bitField0_ |= 0x00000080;
        dice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dice = 8;</code>
       *
       * <pre>
       *色子值
       * </pre>
       */
      public Builder clearDice() {
        bitField0_ = (bitField0_ & ~0x00000080);
        dice_ = 0;
        onChanged();
        return this;
      }

      // optional int32 hasAct = 9;
      private int hasAct_ ;
      /**
       * <code>optional int32 hasAct = 9;</code>
       *
       * <pre>
       *是否有玩家有操作：0否，1是
       * </pre>
       */
      public boolean hasHasAct() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 hasAct = 9;</code>
       *
       * <pre>
       *是否有玩家有操作：0否，1是
       * </pre>
       */
      public int getHasAct() {
        return hasAct_;
      }
      /**
       * <code>optional int32 hasAct = 9;</code>
       *
       * <pre>
       *是否有玩家有操作：0否，1是
       * </pre>
       */
      public Builder setHasAct(int value) {
        bitField0_ |= 0x00000100;
        hasAct_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 hasAct = 9;</code>
       *
       * <pre>
       *是否有玩家有操作：0否，1是
       * </pre>
       */
      public Builder clearHasAct() {
        bitField0_ = (bitField0_ & ~0x00000100);
        hasAct_ = 0;
        onChanged();
        return this;
      }

      // optional int32 mjNum = 10;
      private int mjNum_ ;
      /**
       * <code>optional int32 mjNum = 10;</code>
       *
       * <pre>
       *打色子打到的麻将数量
       * </pre>
       */
      public boolean hasMjNum() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 mjNum = 10;</code>
       *
       * <pre>
       *打色子打到的麻将数量
       * </pre>
       */
      public int getMjNum() {
        return mjNum_;
      }
      /**
       * <code>optional int32 mjNum = 10;</code>
       *
       * <pre>
       *打色子打到的麻将数量
       * </pre>
       */
      public Builder setMjNum(int value) {
        bitField0_ |= 0x00000200;
        mjNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mjNum = 10;</code>
       *
       * <pre>
       *打色子打到的麻将数量
       * </pre>
       */
      public Builder clearMjNum() {
        bitField0_ = (bitField0_ & ~0x00000200);
        mjNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 nextDisCardIndex = 11;
      private int nextDisCardIndex_ ;
      /**
       * <code>optional int32 nextDisCardIndex = 11;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public boolean hasNextDisCardIndex() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 nextDisCardIndex = 11;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public int getNextDisCardIndex() {
        return nextDisCardIndex_;
      }
      /**
       * <code>optional int32 nextDisCardIndex = 11;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public Builder setNextDisCardIndex(int value) {
        bitField0_ |= 0x00000400;
        nextDisCardIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nextDisCardIndex = 11;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public Builder clearNextDisCardIndex() {
        bitField0_ = (bitField0_ & ~0x00000400);
        nextDisCardIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.GangMoMajiangRes)
    }

    static {
      defaultInstance = new GangMoMajiangRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.GangMoMajiangRes)
  }

  public interface GangPlayMajiangResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 majiangId = 1;
    /**
     * <code>required int32 majiangId = 1;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    boolean hasMajiangId();
    /**
     * <code>required int32 majiangId = 1;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    int getMajiangId();

    // repeated int32 selfAct = 2;
    /**
     * <code>repeated int32 selfAct = 2;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    java.util.List<java.lang.Integer> getSelfActList();
    /**
     * <code>repeated int32 selfAct = 2;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    int getSelfActCount();
    /**
     * <code>repeated int32 selfAct = 2;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    int getSelfAct(int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.GangPlayMajiangRes}
   *
   * <pre>
   *长沙麻将杠之后出的牌
   * </pre>
   */
  public static final class GangPlayMajiangRes extends
      com.google.protobuf.GeneratedMessage
      implements GangPlayMajiangResOrBuilder {
    // Use GangPlayMajiangRes.newBuilder() to construct.
    private GangPlayMajiangRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GangPlayMajiangRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GangPlayMajiangRes defaultInstance;
    public static GangPlayMajiangRes getDefaultInstance() {
      return defaultInstance;
    }

    public GangPlayMajiangRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GangPlayMajiangRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              majiangId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              selfAct_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                selfAct_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_GangPlayMajiangRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_GangPlayMajiangRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder.class);
    }

    public static com.google.protobuf.Parser<GangPlayMajiangRes> PARSER =
        new com.google.protobuf.AbstractParser<GangPlayMajiangRes>() {
      public GangPlayMajiangRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GangPlayMajiangRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GangPlayMajiangRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 majiangId = 1;
    public static final int MAJIANGID_FIELD_NUMBER = 1;
    private int majiangId_;
    /**
     * <code>required int32 majiangId = 1;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    public boolean hasMajiangId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 majiangId = 1;</code>
     *
     * <pre>
     *牌组id
     * </pre>
     */
    public int getMajiangId() {
      return majiangId_;
    }

    // repeated int32 selfAct = 2;
    public static final int SELFACT_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> selfAct_;
    /**
     * <code>repeated int32 selfAct = 2;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSelfActList() {
      return selfAct_;
    }
    /**
     * <code>repeated int32 selfAct = 2;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    public int getSelfActCount() {
      return selfAct_.size();
    }
    /**
     * <code>repeated int32 selfAct = 2;</code>
     *
     * <pre>
     *自己的动作 
     * </pre>
     */
    public int getSelfAct(int index) {
      return selfAct_.get(index);
    }

    private void initFields() {
      majiangId_ = 0;
      selfAct_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMajiangId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, majiangId_);
      }
      for (int i = 0; i < selfAct_.size(); i++) {
        output.writeInt32(2, selfAct_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, majiangId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < selfAct_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(selfAct_.get(i));
        }
        size += dataSize;
        size += 1 * getSelfActList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.GangPlayMajiangRes}
     *
     * <pre>
     *长沙麻将杠之后出的牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_GangPlayMajiangRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_GangPlayMajiangRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        majiangId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_GangPlayMajiangRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.majiangId_ = majiangId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.selfAct_ = selfAct_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes.getDefaultInstance()) return this;
        if (other.hasMajiangId()) {
          setMajiangId(other.getMajiangId());
        }
        if (!other.selfAct_.isEmpty()) {
          if (selfAct_.isEmpty()) {
            selfAct_ = other.selfAct_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureSelfActIsMutable();
            selfAct_.addAll(other.selfAct_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMajiangId()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.GangPlayMajiangRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 majiangId = 1;
      private int majiangId_ ;
      /**
       * <code>required int32 majiangId = 1;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public boolean hasMajiangId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 majiangId = 1;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public int getMajiangId() {
        return majiangId_;
      }
      /**
       * <code>required int32 majiangId = 1;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder setMajiangId(int value) {
        bitField0_ |= 0x00000001;
        majiangId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 majiangId = 1;</code>
       *
       * <pre>
       *牌组id
       * </pre>
       */
      public Builder clearMajiangId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        majiangId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 selfAct = 2;
      private java.util.List<java.lang.Integer> selfAct_ = java.util.Collections.emptyList();
      private void ensureSelfActIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          selfAct_ = new java.util.ArrayList<java.lang.Integer>(selfAct_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 selfAct = 2;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSelfActList() {
        return java.util.Collections.unmodifiableList(selfAct_);
      }
      /**
       * <code>repeated int32 selfAct = 2;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public int getSelfActCount() {
        return selfAct_.size();
      }
      /**
       * <code>repeated int32 selfAct = 2;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public int getSelfAct(int index) {
        return selfAct_.get(index);
      }
      /**
       * <code>repeated int32 selfAct = 2;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder setSelfAct(
          int index, int value) {
        ensureSelfActIsMutable();
        selfAct_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 2;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder addSelfAct(int value) {
        ensureSelfActIsMutable();
        selfAct_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 2;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder addAllSelfAct(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSelfActIsMutable();
        super.addAll(values, selfAct_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 2;</code>
       *
       * <pre>
       *自己的动作 
       * </pre>
       */
      public Builder clearSelfAct() {
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.GangPlayMajiangRes)
    }

    static {
      defaultInstance = new GangPlayMajiangRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.GangPlayMajiangRes)
  }

  public interface TingPaiResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 majiangIds = 1;
    /**
     * <code>repeated int32 majiangIds = 1;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getMajiangIdsList();
    /**
     * <code>repeated int32 majiangIds = 1;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    int getMajiangIdsCount();
    /**
     * <code>repeated int32 majiangIds = 1;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    int getMajiangIds(int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.TingPaiRes}
   *
   * <pre>
   *听那些牌
   * </pre>
   */
  public static final class TingPaiRes extends
      com.google.protobuf.GeneratedMessage
      implements TingPaiResOrBuilder {
    // Use TingPaiRes.newBuilder() to construct.
    private TingPaiRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private TingPaiRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final TingPaiRes defaultInstance;
    public static TingPaiRes getDefaultInstance() {
      return defaultInstance;
    }

    public TingPaiRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private TingPaiRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                majiangIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              majiangIds_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                majiangIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                majiangIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          majiangIds_ = java.util.Collections.unmodifiableList(majiangIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_TingPaiRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_TingPaiRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes.Builder.class);
    }

    public static com.google.protobuf.Parser<TingPaiRes> PARSER =
        new com.google.protobuf.AbstractParser<TingPaiRes>() {
      public TingPaiRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new TingPaiRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<TingPaiRes> getParserForType() {
      return PARSER;
    }

    // repeated int32 majiangIds = 1;
    public static final int MAJIANGIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> majiangIds_;
    /**
     * <code>repeated int32 majiangIds = 1;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMajiangIdsList() {
      return majiangIds_;
    }
    /**
     * <code>repeated int32 majiangIds = 1;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    public int getMajiangIdsCount() {
      return majiangIds_.size();
    }
    /**
     * <code>repeated int32 majiangIds = 1;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    public int getMajiangIds(int index) {
      return majiangIds_.get(index);
    }

    private void initFields() {
      majiangIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < majiangIds_.size(); i++) {
        output.writeInt32(1, majiangIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < majiangIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(majiangIds_.get(i));
        }
        size += dataSize;
        size += 1 * getMajiangIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.TingPaiRes}
     *
     * <pre>
     *听那些牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_TingPaiRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_TingPaiRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        majiangIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_TingPaiRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          majiangIds_ = java.util.Collections.unmodifiableList(majiangIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.majiangIds_ = majiangIds_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes.getDefaultInstance()) return this;
        if (!other.majiangIds_.isEmpty()) {
          if (majiangIds_.isEmpty()) {
            majiangIds_ = other.majiangIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureMajiangIdsIsMutable();
            majiangIds_.addAll(other.majiangIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.TingPaiRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 majiangIds = 1;
      private java.util.List<java.lang.Integer> majiangIds_ = java.util.Collections.emptyList();
      private void ensureMajiangIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          majiangIds_ = new java.util.ArrayList<java.lang.Integer>(majiangIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 majiangIds = 1;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMajiangIdsList() {
        return java.util.Collections.unmodifiableList(majiangIds_);
      }
      /**
       * <code>repeated int32 majiangIds = 1;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public int getMajiangIdsCount() {
        return majiangIds_.size();
      }
      /**
       * <code>repeated int32 majiangIds = 1;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public int getMajiangIds(int index) {
        return majiangIds_.get(index);
      }
      /**
       * <code>repeated int32 majiangIds = 1;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public Builder setMajiangIds(
          int index, int value) {
        ensureMajiangIdsIsMutable();
        majiangIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 majiangIds = 1;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public Builder addMajiangIds(int value) {
        ensureMajiangIdsIsMutable();
        majiangIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 majiangIds = 1;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public Builder addAllMajiangIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMajiangIdsIsMutable();
        super.addAll(values, majiangIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 majiangIds = 1;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public Builder clearMajiangIds() {
        majiangIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.TingPaiRes)
    }

    static {
      defaultInstance = new TingPaiRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.TingPaiRes)
  }

  public interface DaPaiTingPaiInfoOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 majiangId = 1;
    /**
     * <code>optional int32 majiangId = 1;</code>
     *
     * <pre>
     *打哪张牌
     * </pre>
     */
    boolean hasMajiangId();
    /**
     * <code>optional int32 majiangId = 1;</code>
     *
     * <pre>
     *打哪张牌
     * </pre>
     */
    int getMajiangId();

    // repeated int32 tingMajiangIds = 2;
    /**
     * <code>repeated int32 tingMajiangIds = 2;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getTingMajiangIdsList();
    /**
     * <code>repeated int32 tingMajiangIds = 2;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    int getTingMajiangIdsCount();
    /**
     * <code>repeated int32 tingMajiangIds = 2;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    int getTingMajiangIds(int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo}
   *
   * <pre>
   *打牌后听哪些牌
   * </pre>
   */
  public static final class DaPaiTingPaiInfo extends
      com.google.protobuf.GeneratedMessage
      implements DaPaiTingPaiInfoOrBuilder {
    // Use DaPaiTingPaiInfo.newBuilder() to construct.
    private DaPaiTingPaiInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DaPaiTingPaiInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DaPaiTingPaiInfo defaultInstance;
    public static DaPaiTingPaiInfo getDefaultInstance() {
      return defaultInstance;
    }

    public DaPaiTingPaiInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DaPaiTingPaiInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              majiangId_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                tingMajiangIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              tingMajiangIds_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                tingMajiangIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                tingMajiangIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          tingMajiangIds_ = java.util.Collections.unmodifiableList(tingMajiangIds_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<DaPaiTingPaiInfo> PARSER =
        new com.google.protobuf.AbstractParser<DaPaiTingPaiInfo>() {
      public DaPaiTingPaiInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DaPaiTingPaiInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DaPaiTingPaiInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 majiangId = 1;
    public static final int MAJIANGID_FIELD_NUMBER = 1;
    private int majiangId_;
    /**
     * <code>optional int32 majiangId = 1;</code>
     *
     * <pre>
     *打哪张牌
     * </pre>
     */
    public boolean hasMajiangId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 majiangId = 1;</code>
     *
     * <pre>
     *打哪张牌
     * </pre>
     */
    public int getMajiangId() {
      return majiangId_;
    }

    // repeated int32 tingMajiangIds = 2;
    public static final int TINGMAJIANGIDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> tingMajiangIds_;
    /**
     * <code>repeated int32 tingMajiangIds = 2;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTingMajiangIdsList() {
      return tingMajiangIds_;
    }
    /**
     * <code>repeated int32 tingMajiangIds = 2;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    public int getTingMajiangIdsCount() {
      return tingMajiangIds_.size();
    }
    /**
     * <code>repeated int32 tingMajiangIds = 2;</code>
     *
     * <pre>
     *听哪些牌
     * </pre>
     */
    public int getTingMajiangIds(int index) {
      return tingMajiangIds_.get(index);
    }

    private void initFields() {
      majiangId_ = 0;
      tingMajiangIds_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, majiangId_);
      }
      for (int i = 0; i < tingMajiangIds_.size(); i++) {
        output.writeInt32(2, tingMajiangIds_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, majiangId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < tingMajiangIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(tingMajiangIds_.get(i));
        }
        size += dataSize;
        size += 1 * getTingMajiangIdsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo}
     *
     * <pre>
     *打牌后听哪些牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        majiangId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tingMajiangIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiInfo_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.majiangId_ = majiangId_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          tingMajiangIds_ = java.util.Collections.unmodifiableList(tingMajiangIds_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.tingMajiangIds_ = tingMajiangIds_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.getDefaultInstance()) return this;
        if (other.hasMajiangId()) {
          setMajiangId(other.getMajiangId());
        }
        if (!other.tingMajiangIds_.isEmpty()) {
          if (tingMajiangIds_.isEmpty()) {
            tingMajiangIds_ = other.tingMajiangIds_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureTingMajiangIdsIsMutable();
            tingMajiangIds_.addAll(other.tingMajiangIds_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 majiangId = 1;
      private int majiangId_ ;
      /**
       * <code>optional int32 majiangId = 1;</code>
       *
       * <pre>
       *打哪张牌
       * </pre>
       */
      public boolean hasMajiangId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 majiangId = 1;</code>
       *
       * <pre>
       *打哪张牌
       * </pre>
       */
      public int getMajiangId() {
        return majiangId_;
      }
      /**
       * <code>optional int32 majiangId = 1;</code>
       *
       * <pre>
       *打哪张牌
       * </pre>
       */
      public Builder setMajiangId(int value) {
        bitField0_ |= 0x00000001;
        majiangId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 majiangId = 1;</code>
       *
       * <pre>
       *打哪张牌
       * </pre>
       */
      public Builder clearMajiangId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        majiangId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 tingMajiangIds = 2;
      private java.util.List<java.lang.Integer> tingMajiangIds_ = java.util.Collections.emptyList();
      private void ensureTingMajiangIdsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          tingMajiangIds_ = new java.util.ArrayList<java.lang.Integer>(tingMajiangIds_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 tingMajiangIds = 2;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTingMajiangIdsList() {
        return java.util.Collections.unmodifiableList(tingMajiangIds_);
      }
      /**
       * <code>repeated int32 tingMajiangIds = 2;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public int getTingMajiangIdsCount() {
        return tingMajiangIds_.size();
      }
      /**
       * <code>repeated int32 tingMajiangIds = 2;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public int getTingMajiangIds(int index) {
        return tingMajiangIds_.get(index);
      }
      /**
       * <code>repeated int32 tingMajiangIds = 2;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public Builder setTingMajiangIds(
          int index, int value) {
        ensureTingMajiangIdsIsMutable();
        tingMajiangIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 tingMajiangIds = 2;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public Builder addTingMajiangIds(int value) {
        ensureTingMajiangIdsIsMutable();
        tingMajiangIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 tingMajiangIds = 2;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public Builder addAllTingMajiangIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTingMajiangIdsIsMutable();
        super.addAll(values, tingMajiangIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 tingMajiangIds = 2;</code>
       *
       * <pre>
       *听哪些牌
       * </pre>
       */
      public Builder clearTingMajiangIds() {
        tingMajiangIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo)
    }

    static {
      defaultInstance = new DaPaiTingPaiInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo)
  }

  public interface DaPaiTingPaiResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
     *
     * <pre>
     *打掉哪些牌后可以听哪些牌
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo> 
        getInfoList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
     *
     * <pre>
     *打掉哪些牌后可以听哪些牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo getInfo(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
     *
     * <pre>
     *打掉哪些牌后可以听哪些牌
     * </pre>
     */
    int getInfoCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
     *
     * <pre>
     *打掉哪些牌后可以听哪些牌
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfoOrBuilder> 
        getInfoOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
     *
     * <pre>
     *打掉哪些牌后可以听哪些牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfoOrBuilder getInfoOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.DaPaiTingPaiRes}
   *
   * <pre>
   *打掉哪些牌后可以听哪些牌
   * </pre>
   */
  public static final class DaPaiTingPaiRes extends
      com.google.protobuf.GeneratedMessage
      implements DaPaiTingPaiResOrBuilder {
    // Use DaPaiTingPaiRes.newBuilder() to construct.
    private DaPaiTingPaiRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DaPaiTingPaiRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DaPaiTingPaiRes defaultInstance;
    public static DaPaiTingPaiRes getDefaultInstance() {
      return defaultInstance;
    }

    public DaPaiTingPaiRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DaPaiTingPaiRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                info_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo>();
                mutable_bitField0_ |= 0x00000001;
              }
              info_.add(input.readMessage(com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          info_ = java.util.Collections.unmodifiableList(info_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes.Builder.class);
    }

    public static com.google.protobuf.Parser<DaPaiTingPaiRes> PARSER =
        new com.google.protobuf.AbstractParser<DaPaiTingPaiRes>() {
      public DaPaiTingPaiRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DaPaiTingPaiRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DaPaiTingPaiRes> getParserForType() {
      return PARSER;
    }

    // repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;
    public static final int INFO_FIELD_NUMBER = 1;
    private java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo> info_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
     *
     * <pre>
     *打掉哪些牌后可以听哪些牌
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo> getInfoList() {
      return info_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
     *
     * <pre>
     *打掉哪些牌后可以听哪些牌
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfoOrBuilder> 
        getInfoOrBuilderList() {
      return info_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
     *
     * <pre>
     *打掉哪些牌后可以听哪些牌
     * </pre>
     */
    public int getInfoCount() {
      return info_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
     *
     * <pre>
     *打掉哪些牌后可以听哪些牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo getInfo(int index) {
      return info_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
     *
     * <pre>
     *打掉哪些牌后可以听哪些牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfoOrBuilder getInfoOrBuilder(
        int index) {
      return info_.get(index);
    }

    private void initFields() {
      info_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < info_.size(); i++) {
        output.writeMessage(1, info_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < info_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, info_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.DaPaiTingPaiRes}
     *
     * <pre>
     *打掉哪些牌后可以听哪些牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getInfoFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (infoBuilder_ == null) {
          info_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          infoBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes(this);
        int from_bitField0_ = bitField0_;
        if (infoBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            info_ = java.util.Collections.unmodifiableList(info_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.info_ = info_;
        } else {
          result.info_ = infoBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes.getDefaultInstance()) return this;
        if (infoBuilder_ == null) {
          if (!other.info_.isEmpty()) {
            if (info_.isEmpty()) {
              info_ = other.info_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureInfoIsMutable();
              info_.addAll(other.info_);
            }
            onChanged();
          }
        } else {
          if (!other.info_.isEmpty()) {
            if (infoBuilder_.isEmpty()) {
              infoBuilder_.dispose();
              infoBuilder_ = null;
              info_ = other.info_;
              bitField0_ = (bitField0_ & ~0x00000001);
              infoBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getInfoFieldBuilder() : null;
            } else {
              infoBuilder_.addAllMessages(other.info_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;
      private java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo> info_ =
        java.util.Collections.emptyList();
      private void ensureInfoIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          info_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo>(info_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfoOrBuilder> infoBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo> getInfoList() {
        if (infoBuilder_ == null) {
          return java.util.Collections.unmodifiableList(info_);
        } else {
          return infoBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public int getInfoCount() {
        if (infoBuilder_ == null) {
          return info_.size();
        } else {
          return infoBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo getInfo(int index) {
        if (infoBuilder_ == null) {
          return info_.get(index);
        } else {
          return infoBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public Builder setInfo(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.set(index, value);
          onChanged();
        } else {
          infoBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public Builder setInfo(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.set(index, builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public Builder addInfo(com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.add(value);
          onChanged();
        } else {
          infoBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public Builder addInfo(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo value) {
        if (infoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureInfoIsMutable();
          info_.add(index, value);
          onChanged();
        } else {
          infoBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public Builder addInfo(
          com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.add(builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public Builder addInfo(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder builderForValue) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.add(index, builderForValue.build());
          onChanged();
        } else {
          infoBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public Builder addAllInfo(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo> values) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          super.addAll(values, info_);
          onChanged();
        } else {
          infoBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public Builder clearInfo() {
        if (infoBuilder_ == null) {
          info_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          infoBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public Builder removeInfo(int index) {
        if (infoBuilder_ == null) {
          ensureInfoIsMutable();
          info_.remove(index);
          onChanged();
        } else {
          infoBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder getInfoBuilder(
          int index) {
        return getInfoFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfoOrBuilder getInfoOrBuilder(
          int index) {
        if (infoBuilder_ == null) {
          return info_.get(index);  } else {
          return infoBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfoOrBuilder> 
           getInfoOrBuilderList() {
        if (infoBuilder_ != null) {
          return infoBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(info_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder addInfoBuilder() {
        return getInfoFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder addInfoBuilder(
          int index) {
        return getInfoFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.DaPaiTingPaiInfo info = 1;</code>
       *
       * <pre>
       *打掉哪些牌后可以听哪些牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder> 
           getInfoBuilderList() {
        return getInfoFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfoOrBuilder> 
          getInfoFieldBuilder() {
        if (infoBuilder_ == null) {
          infoBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfo.Builder, com.sy599.game.msg.serverPacket.PlayCardResMsg.DaPaiTingPaiInfoOrBuilder>(
                  info_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          info_ = null;
        }
        return infoBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.DaPaiTingPaiRes)
    }

    static {
      defaultInstance = new DaPaiTingPaiRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.DaPaiTingPaiRes)
  }

  public interface ActOperatorResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 act = 1;
    /**
     * <code>optional int32 act = 1;</code>
     *
     * <pre>
     *操作
     * </pre>
     */
    boolean hasAct();
    /**
     * <code>optional int32 act = 1;</code>
     *
     * <pre>
     *操作
     * </pre>
     */
    int getAct();

    // optional string operatorId = 2;
    /**
     * <code>optional string operatorId = 2;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    boolean hasOperatorId();
    /**
     * <code>optional string operatorId = 2;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    java.lang.String getOperatorId();
    /**
     * <code>optional string operatorId = 2;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    com.google.protobuf.ByteString
        getOperatorIdBytes();

    // optional int32 operatorSeat = 3;
    /**
     * <code>optional int32 operatorSeat = 3;</code>
     *
     * <pre>
     *操作人坐位
     * </pre>
     */
    boolean hasOperatorSeat();
    /**
     * <code>optional int32 operatorSeat = 3;</code>
     *
     * <pre>
     *操作人坐位
     * </pre>
     */
    int getOperatorSeat();

    // optional int32 point = 4;
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *输赢分
     * </pre>
     */
    boolean hasPoint();
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *输赢分
     * </pre>
     */
    int getPoint();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.ActOperatorRes}
   *
   * <pre>
   *操作输赢分
   * </pre>
   */
  public static final class ActOperatorRes extends
      com.google.protobuf.GeneratedMessage
      implements ActOperatorResOrBuilder {
    // Use ActOperatorRes.newBuilder() to construct.
    private ActOperatorRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ActOperatorRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ActOperatorRes defaultInstance;
    public static ActOperatorRes getDefaultInstance() {
      return defaultInstance;
    }

    public ActOperatorRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ActOperatorRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              act_ = input.readInt32();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              operatorId_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              operatorSeat_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              point_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_ActOperatorRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_ActOperatorRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder.class);
    }

    public static com.google.protobuf.Parser<ActOperatorRes> PARSER =
        new com.google.protobuf.AbstractParser<ActOperatorRes>() {
      public ActOperatorRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ActOperatorRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ActOperatorRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 act = 1;
    public static final int ACT_FIELD_NUMBER = 1;
    private int act_;
    /**
     * <code>optional int32 act = 1;</code>
     *
     * <pre>
     *操作
     * </pre>
     */
    public boolean hasAct() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 act = 1;</code>
     *
     * <pre>
     *操作
     * </pre>
     */
    public int getAct() {
      return act_;
    }

    // optional string operatorId = 2;
    public static final int OPERATORID_FIELD_NUMBER = 2;
    private java.lang.Object operatorId_;
    /**
     * <code>optional string operatorId = 2;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    public boolean hasOperatorId() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string operatorId = 2;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    public java.lang.String getOperatorId() {
      java.lang.Object ref = operatorId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          operatorId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string operatorId = 2;</code>
     *
     * <pre>
     *操作人id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOperatorIdBytes() {
      java.lang.Object ref = operatorId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        operatorId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 operatorSeat = 3;
    public static final int OPERATORSEAT_FIELD_NUMBER = 3;
    private int operatorSeat_;
    /**
     * <code>optional int32 operatorSeat = 3;</code>
     *
     * <pre>
     *操作人坐位
     * </pre>
     */
    public boolean hasOperatorSeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 operatorSeat = 3;</code>
     *
     * <pre>
     *操作人坐位
     * </pre>
     */
    public int getOperatorSeat() {
      return operatorSeat_;
    }

    // optional int32 point = 4;
    public static final int POINT_FIELD_NUMBER = 4;
    private int point_;
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *输赢分
     * </pre>
     */
    public boolean hasPoint() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *输赢分
     * </pre>
     */
    public int getPoint() {
      return point_;
    }

    private void initFields() {
      act_ = 0;
      operatorId_ = "";
      operatorSeat_ = 0;
      point_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, act_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getOperatorIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, operatorSeat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, point_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, act_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getOperatorIdBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, operatorSeat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, point_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.ActOperatorRes}
     *
     * <pre>
     *操作输赢分
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_ActOperatorRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_ActOperatorRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        act_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        operatorId_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        operatorSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        point_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_ActOperatorRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.act_ = act_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.operatorId_ = operatorId_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.operatorSeat_ = operatorSeat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.point_ = point_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.getDefaultInstance()) return this;
        if (other.hasAct()) {
          setAct(other.getAct());
        }
        if (other.hasOperatorId()) {
          bitField0_ |= 0x00000002;
          operatorId_ = other.operatorId_;
          onChanged();
        }
        if (other.hasOperatorSeat()) {
          setOperatorSeat(other.getOperatorSeat());
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 act = 1;
      private int act_ ;
      /**
       * <code>optional int32 act = 1;</code>
       *
       * <pre>
       *操作
       * </pre>
       */
      public boolean hasAct() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 act = 1;</code>
       *
       * <pre>
       *操作
       * </pre>
       */
      public int getAct() {
        return act_;
      }
      /**
       * <code>optional int32 act = 1;</code>
       *
       * <pre>
       *操作
       * </pre>
       */
      public Builder setAct(int value) {
        bitField0_ |= 0x00000001;
        act_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 act = 1;</code>
       *
       * <pre>
       *操作
       * </pre>
       */
      public Builder clearAct() {
        bitField0_ = (bitField0_ & ~0x00000001);
        act_ = 0;
        onChanged();
        return this;
      }

      // optional string operatorId = 2;
      private java.lang.Object operatorId_ = "";
      /**
       * <code>optional string operatorId = 2;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public boolean hasOperatorId() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string operatorId = 2;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public java.lang.String getOperatorId() {
        java.lang.Object ref = operatorId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          operatorId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string operatorId = 2;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOperatorIdBytes() {
        java.lang.Object ref = operatorId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          operatorId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string operatorId = 2;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public Builder setOperatorId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        operatorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string operatorId = 2;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public Builder clearOperatorId() {
        bitField0_ = (bitField0_ & ~0x00000002);
        operatorId_ = getDefaultInstance().getOperatorId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string operatorId = 2;</code>
       *
       * <pre>
       *操作人id
       * </pre>
       */
      public Builder setOperatorIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        operatorId_ = value;
        onChanged();
        return this;
      }

      // optional int32 operatorSeat = 3;
      private int operatorSeat_ ;
      /**
       * <code>optional int32 operatorSeat = 3;</code>
       *
       * <pre>
       *操作人坐位
       * </pre>
       */
      public boolean hasOperatorSeat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 operatorSeat = 3;</code>
       *
       * <pre>
       *操作人坐位
       * </pre>
       */
      public int getOperatorSeat() {
        return operatorSeat_;
      }
      /**
       * <code>optional int32 operatorSeat = 3;</code>
       *
       * <pre>
       *操作人坐位
       * </pre>
       */
      public Builder setOperatorSeat(int value) {
        bitField0_ |= 0x00000004;
        operatorSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 operatorSeat = 3;</code>
       *
       * <pre>
       *操作人坐位
       * </pre>
       */
      public Builder clearOperatorSeat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        operatorSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 point = 4;
      private int point_ ;
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *输赢分
       * </pre>
       */
      public boolean hasPoint() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *输赢分
       * </pre>
       */
      public int getPoint() {
        return point_;
      }
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *输赢分
       * </pre>
       */
      public Builder setPoint(int value) {
        bitField0_ |= 0x00000008;
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *输赢分
       * </pre>
       */
      public Builder clearPoint() {
        bitField0_ = (bitField0_ & ~0x00000008);
        point_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.ActOperatorRes)
    }

    static {
      defaultInstance = new ActOperatorRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.ActOperatorRes)
  }

  public interface CqxzMjScoreboardResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 observerSeat = 1;
    /**
     * <code>optional int32 observerSeat = 1;</code>
     *
     * <pre>
     *查看人座位号
     * </pre>
     */
    boolean hasObserverSeat();
    /**
     * <code>optional int32 observerSeat = 1;</code>
     *
     * <pre>
     *查看人座位号
     * </pre>
     */
    int getObserverSeat();

    // repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
     *
     * <pre>
     *每一条积分明细
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes> 
        getAorList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
     *
     * <pre>
     *每一条积分明细
     * </pre>
     */
    com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes getAor(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
     *
     * <pre>
     *每一条积分明细
     * </pre>
     */
    int getAorCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
     *
     * <pre>
     *每一条积分明细
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorResOrBuilder> 
        getAorOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
     *
     * <pre>
     *每一条积分明细
     * </pre>
     */
    com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorResOrBuilder getAorOrBuilder(
        int index);

    // optional int32 countPoint = 3;
    /**
     * <code>optional int32 countPoint = 3;</code>
     *
     * <pre>
     *累计实时输赢
     * </pre>
     */
    boolean hasCountPoint();
    /**
     * <code>optional int32 countPoint = 3;</code>
     *
     * <pre>
     *累计实时输赢
     * </pre>
     */
    int getCountPoint();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.CqxzMjScoreboardRes}
   *
   * <pre>
   *重庆血战麻将计分板
   * </pre>
   */
  public static final class CqxzMjScoreboardRes extends
      com.google.protobuf.GeneratedMessage
      implements CqxzMjScoreboardResOrBuilder {
    // Use CqxzMjScoreboardRes.newBuilder() to construct.
    private CqxzMjScoreboardRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CqxzMjScoreboardRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CqxzMjScoreboardRes defaultInstance;
    public static CqxzMjScoreboardRes getDefaultInstance() {
      return defaultInstance;
    }

    public CqxzMjScoreboardRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CqxzMjScoreboardRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              observerSeat_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                aor_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes>();
                mutable_bitField0_ |= 0x00000002;
              }
              aor_.add(input.readMessage(com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              countPoint_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          aor_ = java.util.Collections.unmodifiableList(aor_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_CqxzMjScoreboardRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_CqxzMjScoreboardRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes.Builder.class);
    }

    public static com.google.protobuf.Parser<CqxzMjScoreboardRes> PARSER =
        new com.google.protobuf.AbstractParser<CqxzMjScoreboardRes>() {
      public CqxzMjScoreboardRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CqxzMjScoreboardRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CqxzMjScoreboardRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 observerSeat = 1;
    public static final int OBSERVERSEAT_FIELD_NUMBER = 1;
    private int observerSeat_;
    /**
     * <code>optional int32 observerSeat = 1;</code>
     *
     * <pre>
     *查看人座位号
     * </pre>
     */
    public boolean hasObserverSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 observerSeat = 1;</code>
     *
     * <pre>
     *查看人座位号
     * </pre>
     */
    public int getObserverSeat() {
      return observerSeat_;
    }

    // repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;
    public static final int AOR_FIELD_NUMBER = 2;
    private java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes> aor_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
     *
     * <pre>
     *每一条积分明细
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes> getAorList() {
      return aor_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
     *
     * <pre>
     *每一条积分明细
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorResOrBuilder> 
        getAorOrBuilderList() {
      return aor_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
     *
     * <pre>
     *每一条积分明细
     * </pre>
     */
    public int getAorCount() {
      return aor_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
     *
     * <pre>
     *每一条积分明细
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes getAor(int index) {
      return aor_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
     *
     * <pre>
     *每一条积分明细
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorResOrBuilder getAorOrBuilder(
        int index) {
      return aor_.get(index);
    }

    // optional int32 countPoint = 3;
    public static final int COUNTPOINT_FIELD_NUMBER = 3;
    private int countPoint_;
    /**
     * <code>optional int32 countPoint = 3;</code>
     *
     * <pre>
     *累计实时输赢
     * </pre>
     */
    public boolean hasCountPoint() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 countPoint = 3;</code>
     *
     * <pre>
     *累计实时输赢
     * </pre>
     */
    public int getCountPoint() {
      return countPoint_;
    }

    private void initFields() {
      observerSeat_ = 0;
      aor_ = java.util.Collections.emptyList();
      countPoint_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, observerSeat_);
      }
      for (int i = 0; i < aor_.size(); i++) {
        output.writeMessage(2, aor_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, countPoint_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, observerSeat_);
      }
      for (int i = 0; i < aor_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, aor_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, countPoint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.CqxzMjScoreboardRes}
     *
     * <pre>
     *重庆血战麻将计分板
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_CqxzMjScoreboardRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_CqxzMjScoreboardRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes.class, com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getAorFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        observerSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (aorBuilder_ == null) {
          aor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          aorBuilder_.clear();
        }
        countPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.internal_static_com_sy599_game_msg_serverPacket_CqxzMjScoreboardRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes build() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes buildPartial() {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes result = new com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.observerSeat_ = observerSeat_;
        if (aorBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            aor_ = java.util.Collections.unmodifiableList(aor_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.aor_ = aor_;
        } else {
          result.aor_ = aorBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.countPoint_ = countPoint_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes other) {
        if (other == com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes.getDefaultInstance()) return this;
        if (other.hasObserverSeat()) {
          setObserverSeat(other.getObserverSeat());
        }
        if (aorBuilder_ == null) {
          if (!other.aor_.isEmpty()) {
            if (aor_.isEmpty()) {
              aor_ = other.aor_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureAorIsMutable();
              aor_.addAll(other.aor_);
            }
            onChanged();
          }
        } else {
          if (!other.aor_.isEmpty()) {
            if (aorBuilder_.isEmpty()) {
              aorBuilder_.dispose();
              aorBuilder_ = null;
              aor_ = other.aor_;
              bitField0_ = (bitField0_ & ~0x00000002);
              aorBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAorFieldBuilder() : null;
            } else {
              aorBuilder_.addAllMessages(other.aor_);
            }
          }
        }
        if (other.hasCountPoint()) {
          setCountPoint(other.getCountPoint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.PlayCardResMsg.CqxzMjScoreboardRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 observerSeat = 1;
      private int observerSeat_ ;
      /**
       * <code>optional int32 observerSeat = 1;</code>
       *
       * <pre>
       *查看人座位号
       * </pre>
       */
      public boolean hasObserverSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 observerSeat = 1;</code>
       *
       * <pre>
       *查看人座位号
       * </pre>
       */
      public int getObserverSeat() {
        return observerSeat_;
      }
      /**
       * <code>optional int32 observerSeat = 1;</code>
       *
       * <pre>
       *查看人座位号
       * </pre>
       */
      public Builder setObserverSeat(int value) {
        bitField0_ |= 0x00000001;
        observerSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 observerSeat = 1;</code>
       *
       * <pre>
       *查看人座位号
       * </pre>
       */
      public Builder clearObserverSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        observerSeat_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;
      private java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes> aor_ =
        java.util.Collections.emptyList();
      private void ensureAorIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          aor_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes>(aor_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorResOrBuilder> aorBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes> getAorList() {
        if (aorBuilder_ == null) {
          return java.util.Collections.unmodifiableList(aor_);
        } else {
          return aorBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public int getAorCount() {
        if (aorBuilder_ == null) {
          return aor_.size();
        } else {
          return aorBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes getAor(int index) {
        if (aorBuilder_ == null) {
          return aor_.get(index);
        } else {
          return aorBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public Builder setAor(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes value) {
        if (aorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAorIsMutable();
          aor_.set(index, value);
          onChanged();
        } else {
          aorBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public Builder setAor(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder builderForValue) {
        if (aorBuilder_ == null) {
          ensureAorIsMutable();
          aor_.set(index, builderForValue.build());
          onChanged();
        } else {
          aorBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public Builder addAor(com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes value) {
        if (aorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAorIsMutable();
          aor_.add(value);
          onChanged();
        } else {
          aorBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public Builder addAor(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes value) {
        if (aorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAorIsMutable();
          aor_.add(index, value);
          onChanged();
        } else {
          aorBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public Builder addAor(
          com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder builderForValue) {
        if (aorBuilder_ == null) {
          ensureAorIsMutable();
          aor_.add(builderForValue.build());
          onChanged();
        } else {
          aorBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public Builder addAor(
          int index, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder builderForValue) {
        if (aorBuilder_ == null) {
          ensureAorIsMutable();
          aor_.add(index, builderForValue.build());
          onChanged();
        } else {
          aorBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public Builder addAllAor(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes> values) {
        if (aorBuilder_ == null) {
          ensureAorIsMutable();
          super.addAll(values, aor_);
          onChanged();
        } else {
          aorBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public Builder clearAor() {
        if (aorBuilder_ == null) {
          aor_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          aorBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public Builder removeAor(int index) {
        if (aorBuilder_ == null) {
          ensureAorIsMutable();
          aor_.remove(index);
          onChanged();
        } else {
          aorBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder getAorBuilder(
          int index) {
        return getAorFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorResOrBuilder getAorOrBuilder(
          int index) {
        if (aorBuilder_ == null) {
          return aor_.get(index);  } else {
          return aorBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorResOrBuilder> 
           getAorOrBuilderList() {
        if (aorBuilder_ != null) {
          return aorBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(aor_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder addAorBuilder() {
        return getAorFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder addAorBuilder(
          int index) {
        return getAorFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ActOperatorRes aor = 2;</code>
       *
       * <pre>
       *每一条积分明细
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder> 
           getAorBuilderList() {
        return getAorFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorResOrBuilder> 
          getAorFieldBuilder() {
        if (aorBuilder_ == null) {
          aorBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorRes.Builder, com.sy599.game.msg.serverPacket.PlayCardResMsg.ActOperatorResOrBuilder>(
                  aor_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          aor_ = null;
        }
        return aorBuilder_;
      }

      // optional int32 countPoint = 3;
      private int countPoint_ ;
      /**
       * <code>optional int32 countPoint = 3;</code>
       *
       * <pre>
       *累计实时输赢
       * </pre>
       */
      public boolean hasCountPoint() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 countPoint = 3;</code>
       *
       * <pre>
       *累计实时输赢
       * </pre>
       */
      public int getCountPoint() {
        return countPoint_;
      }
      /**
       * <code>optional int32 countPoint = 3;</code>
       *
       * <pre>
       *累计实时输赢
       * </pre>
       */
      public Builder setCountPoint(int value) {
        bitField0_ |= 0x00000004;
        countPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 countPoint = 3;</code>
       *
       * <pre>
       *累计实时输赢
       * </pre>
       */
      public Builder clearCountPoint() {
        bitField0_ = (bitField0_ & ~0x00000004);
        countPoint_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.CqxzMjScoreboardRes)
    }

    static {
      defaultInstance = new CqxzMjScoreboardRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.CqxzMjScoreboardRes)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_PlayCardRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_PlayCardRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_PlayPaohuziRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_PlayPaohuziRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_PlayMajiangRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_PlayMajiangRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_MoMajiangRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_MoMajiangRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_BuFaMoMajiangRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_BuFaMoMajiangRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_GangMoMajiangRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_GangMoMajiangRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_GangPlayMajiangRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_GangPlayMajiangRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_TingPaiRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_TingPaiRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiInfo_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_ActOperatorRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_ActOperatorRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_CqxzMjScoreboardRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_CqxzMjScoreboardRes_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032files/PlayCardResMsg.proto\022\037com.sy599." +
      "game.msg.serverPacket\"\356\001\n\013PlayCardRes\022\016\n" +
      "\006userId\030\001 \002(\t\022\016\n\006isPlay\030\002 \002(\005\022\017\n\007cardIds" +
      "\030\003 \003(\005\022\020\n\010cardType\030\004 \001(\005\022\014\n\004isBt\030\005 \001(\005\022\014" +
      "\n\004seat\030\006 \001(\005\022\r\n\005isLet\030\007 \001(\005\022\020\n\010nextSeat\030" +
      "\010 \001(\005\022\020\n\010curScore\030\t \001(\005\022\022\n\nisFirstOut\030\n " +
      "\001(\005\022\021\n\tscoreCard\030\013 \003(\005\022\021\n\tleftCount\030\014 \001(" +
      "\005\022\023\n\013isClearDesk\030\r \001(\005\"\352\001\n\016PlayPaohuziRe" +
      "s\022\016\n\006userId\030\001 \002(\t\022\016\n\006phzIds\030\002 \003(\005\022\016\n\006act" +
      "ion\030\003 \001(\005\022\014\n\004seat\030\004 \001(\005\022\017\n\007selfAct\030\005 \003(\005",
      "\022\020\n\010fromSeat\030\006 \001(\005\022\017\n\007actType\030\007 \001(\005\022\016\n\006r" +
      "emain\030\010 \001(\005\022\020\n\010nextSeat\030\t \001(\005\022\014\n\004huxi\030\n " +
      "\001(\005\022\020\n\010isZaiPao\030\013 \001(\005\022\022\n\nisChongPao\030\014 \001(" +
      "\005\022\020\n\010timeSeat\030\r \001(\005\"\261\001\n\016PlayMajiangRes\022\016" +
      "\n\006userId\030\001 \002(\t\022\022\n\nmajiangIds\030\002 \003(\005\022\016\n\006ac" +
      "tion\030\003 \001(\005\022\014\n\004seat\030\004 \001(\005\022\017\n\007selfAct\030\005 \003(" +
      "\005\022\020\n\010fromSeat\030\006 \001(\005\022\014\n\004zimo\030\007 \001(\005\022\017\n\007huA" +
      "rray\030\010 \003(\005\022\016\n\006xiaohu\030\t \003(\005\022\013\n\003ext\030\n \003(\t\"" +
      "z\n\014MoMajiangRes\022\016\n\006userId\030\001 \002(\t\022\021\n\tmajia" +
      "ngId\030\002 \001(\005\022\014\n\004seat\030\003 \001(\005\022\017\n\007selfAct\030\004 \003(",
      "\005\022\016\n\006remain\030\005 \001(\005\022\030\n\020nextDisCardIndex\030\006 " +
      "\001(\005\"v\n\020BuFaMoMajiangRes\022\016\n\006userId\030\001 \002(\t\022" +
      "\021\n\tmajiangId\030\002 \003(\005\022\014\n\004seat\030\003 \001(\005\022\017\n\007self" +
      "Act\030\004 \003(\005\022\016\n\006remain\030\005 \001(\005\022\020\n\010huaCount\030\006 " +
      "\001(\005\"\377\001\n\020GangMoMajiangRes\022\016\n\006userId\030\001 \002(\t" +
      "\022\014\n\004name\030\002 \002(\t\022\014\n\004seat\030\003 \001(\005\022\016\n\006gangId\030\004" +
      " \002(\005\022E\n\010gangActs\030\005 \003(\01323.com.sy599.game." +
      "msg.serverPacket.GangPlayMajiangRes\022\021\n\tr" +
      "econnect\030\006 \001(\005\022\016\n\006remain\030\007 \001(\005\022\014\n\004dice\030\010" +
      " \001(\005\022\016\n\006hasAct\030\t \001(\005\022\r\n\005mjNum\030\n \001(\005\022\030\n\020n",
      "extDisCardIndex\030\013 \001(\005\"8\n\022GangPlayMajiang" +
      "Res\022\021\n\tmajiangId\030\001 \002(\005\022\017\n\007selfAct\030\002 \003(\005\"" +
      " \n\nTingPaiRes\022\022\n\nmajiangIds\030\001 \003(\005\"=\n\020DaP" +
      "aiTingPaiInfo\022\021\n\tmajiangId\030\001 \001(\005\022\026\n\016ting" +
      "MajiangIds\030\002 \003(\005\"R\n\017DaPaiTingPaiRes\022?\n\004i" +
      "nfo\030\001 \003(\01321.com.sy599.game.msg.serverPac" +
      "ket.DaPaiTingPaiInfo\"V\n\016ActOperatorRes\022\013" +
      "\n\003act\030\001 \001(\005\022\022\n\noperatorId\030\002 \001(\t\022\024\n\014opera" +
      "torSeat\030\003 \001(\005\022\r\n\005point\030\004 \001(\005\"}\n\023CqxzMjSc" +
      "oreboardRes\022\024\n\014observerSeat\030\001 \001(\005\022<\n\003aor",
      "\030\002 \003(\0132/.com.sy599.game.msg.serverPacket" +
      ".ActOperatorRes\022\022\n\ncountPoint\030\003 \001(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_sy599_game_msg_serverPacket_PlayCardRes_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_sy599_game_msg_serverPacket_PlayCardRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_PlayCardRes_descriptor,
              new java.lang.String[] { "UserId", "IsPlay", "CardIds", "CardType", "IsBt", "Seat", "IsLet", "NextSeat", "CurScore", "IsFirstOut", "ScoreCard", "LeftCount", "IsClearDesk", });
          internal_static_com_sy599_game_msg_serverPacket_PlayPaohuziRes_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_sy599_game_msg_serverPacket_PlayPaohuziRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_PlayPaohuziRes_descriptor,
              new java.lang.String[] { "UserId", "PhzIds", "Action", "Seat", "SelfAct", "FromSeat", "ActType", "Remain", "NextSeat", "Huxi", "IsZaiPao", "IsChongPao", "TimeSeat", });
          internal_static_com_sy599_game_msg_serverPacket_PlayMajiangRes_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_sy599_game_msg_serverPacket_PlayMajiangRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_PlayMajiangRes_descriptor,
              new java.lang.String[] { "UserId", "MajiangIds", "Action", "Seat", "SelfAct", "FromSeat", "Zimo", "HuArray", "Xiaohu", "Ext", });
          internal_static_com_sy599_game_msg_serverPacket_MoMajiangRes_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_sy599_game_msg_serverPacket_MoMajiangRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_MoMajiangRes_descriptor,
              new java.lang.String[] { "UserId", "MajiangId", "Seat", "SelfAct", "Remain", "NextDisCardIndex", });
          internal_static_com_sy599_game_msg_serverPacket_BuFaMoMajiangRes_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_sy599_game_msg_serverPacket_BuFaMoMajiangRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_BuFaMoMajiangRes_descriptor,
              new java.lang.String[] { "UserId", "MajiangId", "Seat", "SelfAct", "Remain", "HuaCount", });
          internal_static_com_sy599_game_msg_serverPacket_GangMoMajiangRes_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_sy599_game_msg_serverPacket_GangMoMajiangRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_GangMoMajiangRes_descriptor,
              new java.lang.String[] { "UserId", "Name", "Seat", "GangId", "GangActs", "Reconnect", "Remain", "Dice", "HasAct", "MjNum", "NextDisCardIndex", });
          internal_static_com_sy599_game_msg_serverPacket_GangPlayMajiangRes_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_sy599_game_msg_serverPacket_GangPlayMajiangRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_GangPlayMajiangRes_descriptor,
              new java.lang.String[] { "MajiangId", "SelfAct", });
          internal_static_com_sy599_game_msg_serverPacket_TingPaiRes_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_sy599_game_msg_serverPacket_TingPaiRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_TingPaiRes_descriptor,
              new java.lang.String[] { "MajiangIds", });
          internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiInfo_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiInfo_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiInfo_descriptor,
              new java.lang.String[] { "MajiangId", "TingMajiangIds", });
          internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiRes_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_DaPaiTingPaiRes_descriptor,
              new java.lang.String[] { "Info", });
          internal_static_com_sy599_game_msg_serverPacket_ActOperatorRes_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_sy599_game_msg_serverPacket_ActOperatorRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_ActOperatorRes_descriptor,
              new java.lang.String[] { "Act", "OperatorId", "OperatorSeat", "Point", });
          internal_static_com_sy599_game_msg_serverPacket_CqxzMjScoreboardRes_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_com_sy599_game_msg_serverPacket_CqxzMjScoreboardRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_CqxzMjScoreboardRes_descriptor,
              new java.lang.String[] { "ObserverSeat", "Aor", "CountPoint", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
