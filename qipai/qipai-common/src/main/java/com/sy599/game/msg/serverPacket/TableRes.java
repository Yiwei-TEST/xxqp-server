// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/files/TableRes.proto

package com.sy599.game.msg.serverPacket;

public final class TableRes {
  private TableRes() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface CreateTableResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string tableId = 1;
    /**
     * <code>required string tableId = 1;</code>
     *
     * <pre>
     *牌桌id
     * </pre>
     */
    boolean hasTableId();
    /**
     * <code>required string tableId = 1;</code>
     *
     * <pre>
     *牌桌id
     * </pre>
     */
    java.lang.String getTableId();
    /**
     * <code>required string tableId = 1;</code>
     *
     * <pre>
     *牌桌id
     * </pre>
     */
    com.google.protobuf.ByteString
        getTableIdBytes();

    // required int32 nowBurCount = 2;
    /**
     * <code>required int32 nowBurCount = 2;</code>
     *
     * <pre>
     *现在进行的局数
     * </pre>
     */
    boolean hasNowBurCount();
    /**
     * <code>required int32 nowBurCount = 2;</code>
     *
     * <pre>
     *现在进行的局数
     * </pre>
     */
    int getNowBurCount();

    // required int32 totalBurCount = 3;
    /**
     * <code>required int32 totalBurCount = 3;</code>
     *
     * <pre>
     *创建的总局数
     * </pre>
     */
    boolean hasTotalBurCount();
    /**
     * <code>required int32 totalBurCount = 3;</code>
     *
     * <pre>
     *创建的总局数
     * </pre>
     */
    int getTotalBurCount();

    // repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes> 
        getPlayersList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes getPlayers(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    int getPlayersCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder> 
        getPlayersOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder getPlayersOrBuilder(
        int index);

    // optional int32 nextSeat = 5;
    /**
     * <code>optional int32 nextSeat = 5;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    boolean hasNextSeat();
    /**
     * <code>optional int32 nextSeat = 5;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    int getNextSeat();

    // required int32 wanfa = 6;
    /**
     * <code>required int32 wanfa = 6;</code>
     */
    boolean hasWanfa();
    /**
     * <code>required int32 wanfa = 6;</code>
     */
    int getWanfa();

    // optional int32 remain = 7;
    /**
     * <code>optional int32 remain = 7;</code>
     */
    boolean hasRemain();
    /**
     * <code>optional int32 remain = 7;</code>
     */
    int getRemain();

    // repeated int32 ext = 8;
    /**
     * <code>repeated int32 ext = 8;</code>
     */
    java.util.List<java.lang.Integer> getExtList();
    /**
     * <code>repeated int32 ext = 8;</code>
     */
    int getExtCount();
    /**
     * <code>repeated int32 ext = 8;</code>
     */
    int getExt(int index);

    // optional string gotyeRoomId = 9;
    /**
     * <code>optional string gotyeRoomId = 9;</code>
     *
     * <pre>
     *聊天室id	
     * </pre>
     */
    boolean hasGotyeRoomId();
    /**
     * <code>optional string gotyeRoomId = 9;</code>
     *
     * <pre>
     *聊天室id	
     * </pre>
     */
    java.lang.String getGotyeRoomId();
    /**
     * <code>optional string gotyeRoomId = 9;</code>
     *
     * <pre>
     *聊天室id	
     * </pre>
     */
    com.google.protobuf.ByteString
        getGotyeRoomIdBytes();

    // repeated int32 matchExt = 10;
    /**
     * <code>repeated int32 matchExt = 10;</code>
     *
     * <pre>
     *比赛场扩展参数
     * </pre>
     */
    java.util.List<java.lang.Integer> getMatchExtList();
    /**
     * <code>repeated int32 matchExt = 10;</code>
     *
     * <pre>
     *比赛场扩展参数
     * </pre>
     */
    int getMatchExtCount();
    /**
     * <code>repeated int32 matchExt = 10;</code>
     *
     * <pre>
     *比赛场扩展参数
     * </pre>
     */
    int getMatchExt(int index);

    // optional int32 renshu = 11;
    /**
     * <code>optional int32 renshu = 11;</code>
     *
     * <pre>
     *人数
     * </pre>
     */
    boolean hasRenshu();
    /**
     * <code>optional int32 renshu = 11;</code>
     *
     * <pre>
     *人数
     * </pre>
     */
    int getRenshu();

    // optional int32 fromOverPop = 12;
    /**
     * <code>optional int32 fromOverPop = 12;</code>
     *
     * <pre>
     *是否是点了结算框的确定
     * </pre>
     */
    boolean hasFromOverPop();
    /**
     * <code>optional int32 fromOverPop = 12;</code>
     *
     * <pre>
     *是否是点了结算框的确定
     * </pre>
     */
    int getFromOverPop();

    // optional int32 showRenew = 13;
    /**
     * <code>optional int32 showRenew = 13;</code>
     *
     * <pre>
     *是否显示续费
     * </pre>
     */
    boolean hasShowRenew();
    /**
     * <code>optional int32 showRenew = 13;</code>
     *
     * <pre>
     *是否显示续费
     * </pre>
     */
    int getShowRenew();

    // optional int32 isDaiKai = 14;
    /**
     * <code>optional int32 isDaiKai = 14;</code>
     *
     * <pre>
     *是否是代开房间
     * </pre>
     */
    boolean hasIsDaiKai();
    /**
     * <code>optional int32 isDaiKai = 14;</code>
     *
     * <pre>
     *是否是代开房间
     * </pre>
     */
    int getIsDaiKai();

    // optional int32 tableType = 15;
    /**
     * <code>optional int32 tableType = 15;</code>
     *
     * <pre>
     *房间属性 0普通房间1军团2练习场
     * </pre>
     */
    boolean hasTableType();
    /**
     * <code>optional int32 tableType = 15;</code>
     *
     * <pre>
     *房间属性 0普通房间1军团2练习场
     * </pre>
     */
    int getTableType();

    // optional string groupProperty = 16;
    /**
     * <code>optional string groupProperty = 16;</code>
     *
     * <pre>
     *军团属性值
     * </pre>
     */
    boolean hasGroupProperty();
    /**
     * <code>optional string groupProperty = 16;</code>
     *
     * <pre>
     *军团属性值
     * </pre>
     */
    java.lang.String getGroupProperty();
    /**
     * <code>optional string groupProperty = 16;</code>
     *
     * <pre>
     *军团属性值
     * </pre>
     */
    com.google.protobuf.ByteString
        getGroupPropertyBytes();

    // repeated int32 timeOut = 17;
    /**
     * <code>repeated int32 timeOut = 17;</code>
     *
     * <pre>
     * 托管时间
     * </pre>
     */
    java.util.List<java.lang.Integer> getTimeOutList();
    /**
     * <code>repeated int32 timeOut = 17;</code>
     *
     * <pre>
     * 托管时间
     * </pre>
     */
    int getTimeOutCount();
    /**
     * <code>repeated int32 timeOut = 17;</code>
     *
     * <pre>
     * 托管时间
     * </pre>
     */
    int getTimeOut(int index);

    // repeated int32 scoreCard = 18;
    /**
     * <code>repeated int32 scoreCard = 18;</code>
     *
     * <pre>
     *本轮出的分牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getScoreCardList();
    /**
     * <code>repeated int32 scoreCard = 18;</code>
     *
     * <pre>
     *本轮出的分牌
     * </pre>
     */
    int getScoreCardCount();
    /**
     * <code>repeated int32 scoreCard = 18;</code>
     *
     * <pre>
     *本轮出的分牌
     * </pre>
     */
    int getScoreCard(int index);

    // repeated string extStr = 19;
    /**
     * <code>repeated string extStr = 19;</code>
     *
     * <pre>
     * 扩展字符串
     * </pre>
     */
    java.util.List<java.lang.String>
    getExtStrList();
    /**
     * <code>repeated string extStr = 19;</code>
     *
     * <pre>
     * 扩展字符串
     * </pre>
     */
    int getExtStrCount();
    /**
     * <code>repeated string extStr = 19;</code>
     *
     * <pre>
     * 扩展字符串
     * </pre>
     */
    java.lang.String getExtStr(int index);
    /**
     * <code>repeated string extStr = 19;</code>
     *
     * <pre>
     * 扩展字符串
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtStrBytes(int index);

    // optional int32 roundCardType = 20;
    /**
     * <code>optional int32 roundCardType = 20;</code>
     *
     * <pre>
     *本轮出的牌型
     * </pre>
     */
    boolean hasRoundCardType();
    /**
     * <code>optional int32 roundCardType = 20;</code>
     *
     * <pre>
     *本轮出的牌型
     * </pre>
     */
    int getRoundCardType();

    // optional string masterId = 21;
    /**
     * <code>optional string masterId = 21;</code>
     *
     * <pre>
     *房主id
     * </pre>
     */
    boolean hasMasterId();
    /**
     * <code>optional string masterId = 21;</code>
     *
     * <pre>
     *房主id
     * </pre>
     */
    java.lang.String getMasterId();
    /**
     * <code>optional string masterId = 21;</code>
     *
     * <pre>
     *房主id
     * </pre>
     */
    com.google.protobuf.ByteString
        getMasterIdBytes();

    // optional int32 lastWinSeat = 22;
    /**
     * <code>optional int32 lastWinSeat = 22;</code>
     *
     * <pre>
     *庄家座位号
     * </pre>
     */
    boolean hasLastWinSeat();
    /**
     * <code>optional int32 lastWinSeat = 22;</code>
     *
     * <pre>
     *庄家座位号
     * </pre>
     */
    int getLastWinSeat();

    // optional int64 creatorId = 23;
    /**
     * <code>optional int64 creatorId = 23;</code>
     *
     * <pre>
     *创房者id
     * </pre>
     */
    boolean hasCreatorId();
    /**
     * <code>optional int64 creatorId = 23;</code>
     *
     * <pre>
     *创房者id
     * </pre>
     */
    long getCreatorId();

    // optional int32 dealDice = 24;
    /**
     * <code>optional int32 dealDice = 24;</code>
     *
     * <pre>
     *骰子点数
     * </pre>
     */
    boolean hasDealDice();
    /**
     * <code>optional int32 dealDice = 24;</code>
     *
     * <pre>
     *骰子点数
     * </pre>
     */
    int getDealDice();

    // repeated string strExt = 25;
    /**
     * <code>repeated string strExt = 25;</code>
     *
     * <pre>
     *字符串扩展
     * </pre>
     */
    java.util.List<java.lang.String>
    getStrExtList();
    /**
     * <code>repeated string strExt = 25;</code>
     *
     * <pre>
     *字符串扩展
     * </pre>
     */
    int getStrExtCount();
    /**
     * <code>repeated string strExt = 25;</code>
     *
     * <pre>
     *字符串扩展
     * </pre>
     */
    java.lang.String getStrExt(int index);
    /**
     * <code>repeated string strExt = 25;</code>
     *
     * <pre>
     *字符串扩展
     * </pre>
     */
    com.google.protobuf.ByteString
        getStrExtBytes(int index);

    // repeated int64 creditConfig = 26;
    /**
     * <code>repeated int64 creditConfig = 26;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    java.util.List<java.lang.Long> getCreditConfigList();
    /**
     * <code>repeated int64 creditConfig = 26;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    int getCreditConfigCount();
    /**
     * <code>repeated int64 creditConfig = 26;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    long getCreditConfig(int index);

    // repeated int32 intParams = 27;
    /**
     * <code>repeated int32 intParams = 27;</code>
     *
     * <pre>
     * 创房int参数列表
     * </pre>
     */
    java.util.List<java.lang.Integer> getIntParamsList();
    /**
     * <code>repeated int32 intParams = 27;</code>
     *
     * <pre>
     * 创房int参数列表
     * </pre>
     */
    int getIntParamsCount();
    /**
     * <code>repeated int32 intParams = 27;</code>
     *
     * <pre>
     * 创房int参数列表
     * </pre>
     */
    int getIntParams(int index);

    // repeated string strParams = 28;
    /**
     * <code>repeated string strParams = 28;</code>
     *
     * <pre>
     * 创房str参数列表
     * </pre>
     */
    java.util.List<java.lang.String>
    getStrParamsList();
    /**
     * <code>repeated string strParams = 28;</code>
     *
     * <pre>
     * 创房str参数列表
     * </pre>
     */
    int getStrParamsCount();
    /**
     * <code>repeated string strParams = 28;</code>
     *
     * <pre>
     * 创房str参数列表
     * </pre>
     */
    java.lang.String getStrParams(int index);
    /**
     * <code>repeated string strParams = 28;</code>
     *
     * <pre>
     * 创房str参数列表
     * </pre>
     */
    com.google.protobuf.ByteString
        getStrParamsBytes(int index);

    // optional string roomName = 29;
    /**
     * <code>optional string roomName = 29;</code>
     *
     * <pre>
     * 包间名字
     * </pre>
     */
    boolean hasRoomName();
    /**
     * <code>optional string roomName = 29;</code>
     *
     * <pre>
     * 包间名字
     * </pre>
     */
    java.lang.String getRoomName();
    /**
     * <code>optional string roomName = 29;</code>
     *
     * <pre>
     * 包间名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getRoomNameBytes();

    // repeated string generalExt = 30;
    /**
     * <code>repeated string generalExt = 30;</code>
     *
     * <pre>
     * 通用扩展
     * </pre>
     */
    java.util.List<java.lang.String>
    getGeneralExtList();
    /**
     * <code>repeated string generalExt = 30;</code>
     *
     * <pre>
     * 通用扩展
     * </pre>
     */
    int getGeneralExtCount();
    /**
     * <code>repeated string generalExt = 30;</code>
     *
     * <pre>
     * 通用扩展
     * </pre>
     */
    java.lang.String getGeneralExt(int index);
    /**
     * <code>repeated string generalExt = 30;</code>
     *
     * <pre>
     * 通用扩展
     * </pre>
     */
    com.google.protobuf.ByteString
        getGeneralExtBytes(int index);

    // repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
     *
     * <pre>
     * 棋盘
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TableRes.QiZi> 
        getQiPanList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
     *
     * <pre>
     * 棋盘
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.QiZi getQiPan(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
     *
     * <pre>
     * 棋盘
     * </pre>
     */
    int getQiPanCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
     *
     * <pre>
     * 棋盘
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.QiZiOrBuilder> 
        getQiPanOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
     *
     * <pre>
     * 棋盘
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.QiZiOrBuilder getQiPanOrBuilder(
        int index);

    // optional string goldMsg = 32;
    /**
     * <code>optional string goldMsg = 32;</code>
     *
     * <pre>
     * 金币场信息
     * </pre>
     */
    boolean hasGoldMsg();
    /**
     * <code>optional string goldMsg = 32;</code>
     *
     * <pre>
     * 金币场信息
     * </pre>
     */
    java.lang.String getGoldMsg();
    /**
     * <code>optional string goldMsg = 32;</code>
     *
     * <pre>
     * 金币场信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getGoldMsgBytes();

    // optional int64 goldRoomConfigId = 33;
    /**
     * <code>optional int64 goldRoomConfigId = 33;</code>
     *
     * <pre>
     * 金币场配置id
     * </pre>
     */
    boolean hasGoldRoomConfigId();
    /**
     * <code>optional int64 goldRoomConfigId = 33;</code>
     *
     * <pre>
     * 金币场配置id
     * </pre>
     */
    long getGoldRoomConfigId();

    // optional string groupTableGoldMsg = 34;
    /**
     * <code>optional string groupTableGoldMsg = 34;</code>
     *
     * <pre>
     * 亲友圈金币房信息
     * </pre>
     */
    boolean hasGroupTableGoldMsg();
    /**
     * <code>optional string groupTableGoldMsg = 34;</code>
     *
     * <pre>
     * 亲友圈金币房信息
     * </pre>
     */
    java.lang.String getGroupTableGoldMsg();
    /**
     * <code>optional string groupTableGoldMsg = 34;</code>
     *
     * <pre>
     * 亲友圈金币房信息
     * </pre>
     */
    com.google.protobuf.ByteString
        getGroupTableGoldMsgBytes();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.CreateTableRes}
   *
   * <pre>
   *创建一个牌桌
   * </pre>
   */
  public static final class CreateTableRes extends
      com.google.protobuf.GeneratedMessage
      implements CreateTableResOrBuilder {
    // Use CreateTableRes.newBuilder() to construct.
    private CreateTableRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CreateTableRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CreateTableRes defaultInstance;
    public static CreateTableRes getDefaultInstance() {
      return defaultInstance;
    }

    public CreateTableRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CreateTableRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              tableId_ = input.readBytes();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nowBurCount_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              totalBurCount_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                players_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes>();
                mutable_bitField0_ |= 0x00000008;
              }
              players_.add(input.readMessage(com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.PARSER, extensionRegistry));
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              nextSeat_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              wanfa_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              remain_ = input.readInt32();
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                ext_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              ext_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                ext_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                ext_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 74: {
              bitField0_ |= 0x00000040;
              gotyeRoomId_ = input.readBytes();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                matchExt_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              matchExt_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                matchExt_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                matchExt_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              renshu_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              fromOverPop_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000200;
              showRenew_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000400;
              isDaiKai_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000800;
              tableType_ = input.readInt32();
              break;
            }
            case 130: {
              bitField0_ |= 0x00001000;
              groupProperty_ = input.readBytes();
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                timeOut_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              timeOut_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                timeOut_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                timeOut_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                scoreCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              scoreCard_.add(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                scoreCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                scoreCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 154: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                extStr_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00040000;
              }
              extStr_.add(input.readBytes());
              break;
            }
            case 160: {
              bitField0_ |= 0x00002000;
              roundCardType_ = input.readInt32();
              break;
            }
            case 170: {
              bitField0_ |= 0x00004000;
              masterId_ = input.readBytes();
              break;
            }
            case 176: {
              bitField0_ |= 0x00008000;
              lastWinSeat_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00010000;
              creatorId_ = input.readInt64();
              break;
            }
            case 192: {
              bitField0_ |= 0x00020000;
              dealDice_ = input.readInt32();
              break;
            }
            case 202: {
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
                strExt_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x01000000;
              }
              strExt_.add(input.readBytes());
              break;
            }
            case 208: {
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                creditConfig_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x02000000;
              }
              creditConfig_.add(input.readInt64());
              break;
            }
            case 210: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000) && input.getBytesUntilLimit() > 0) {
                creditConfig_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x02000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                creditConfig_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 216: {
              if (!((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
                intParams_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x04000000;
              }
              intParams_.add(input.readInt32());
              break;
            }
            case 218: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x04000000) == 0x04000000) && input.getBytesUntilLimit() > 0) {
                intParams_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x04000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                intParams_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 226: {
              if (!((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
                strParams_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x08000000;
              }
              strParams_.add(input.readBytes());
              break;
            }
            case 234: {
              bitField0_ |= 0x00040000;
              roomName_ = input.readBytes();
              break;
            }
            case 242: {
              if (!((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
                generalExt_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x20000000;
              }
              generalExt_.add(input.readBytes());
              break;
            }
            case 250: {
              if (!((mutable_bitField0_ & 0x40000000) == 0x40000000)) {
                qiPan_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.QiZi>();
                mutable_bitField0_ |= 0x40000000;
              }
              qiPan_.add(input.readMessage(com.sy599.game.msg.serverPacket.TableRes.QiZi.PARSER, extensionRegistry));
              break;
            }
            case 258: {
              bitField0_ |= 0x00080000;
              goldMsg_ = input.readBytes();
              break;
            }
            case 264: {
              bitField0_ |= 0x00100000;
              goldRoomConfigId_ = input.readInt64();
              break;
            }
            case 274: {
              bitField0_ |= 0x00200000;
              groupTableGoldMsg_ = input.readBytes();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          players_ = java.util.Collections.unmodifiableList(players_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          ext_ = java.util.Collections.unmodifiableList(ext_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          matchExt_ = java.util.Collections.unmodifiableList(matchExt_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          timeOut_ = java.util.Collections.unmodifiableList(timeOut_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          scoreCard_ = java.util.Collections.unmodifiableList(scoreCard_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          extStr_ = new com.google.protobuf.UnmodifiableLazyStringList(extStr_);
        }
        if (((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
          strExt_ = new com.google.protobuf.UnmodifiableLazyStringList(strExt_);
        }
        if (((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
          creditConfig_ = java.util.Collections.unmodifiableList(creditConfig_);
        }
        if (((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
          intParams_ = java.util.Collections.unmodifiableList(intParams_);
        }
        if (((mutable_bitField0_ & 0x08000000) == 0x08000000)) {
          strParams_ = new com.google.protobuf.UnmodifiableLazyStringList(strParams_);
        }
        if (((mutable_bitField0_ & 0x20000000) == 0x20000000)) {
          generalExt_ = new com.google.protobuf.UnmodifiableLazyStringList(generalExt_);
        }
        if (((mutable_bitField0_ & 0x40000000) == 0x40000000)) {
          qiPan_ = java.util.Collections.unmodifiableList(qiPan_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_CreateTableRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_CreateTableRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.CreateTableRes.class, com.sy599.game.msg.serverPacket.TableRes.CreateTableRes.Builder.class);
    }

    public static com.google.protobuf.Parser<CreateTableRes> PARSER =
        new com.google.protobuf.AbstractParser<CreateTableRes>() {
      public CreateTableRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CreateTableRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CreateTableRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string tableId = 1;
    public static final int TABLEID_FIELD_NUMBER = 1;
    private java.lang.Object tableId_;
    /**
     * <code>required string tableId = 1;</code>
     *
     * <pre>
     *牌桌id
     * </pre>
     */
    public boolean hasTableId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string tableId = 1;</code>
     *
     * <pre>
     *牌桌id
     * </pre>
     */
    public java.lang.String getTableId() {
      java.lang.Object ref = tableId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tableId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string tableId = 1;</code>
     *
     * <pre>
     *牌桌id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTableIdBytes() {
      java.lang.Object ref = tableId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tableId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 nowBurCount = 2;
    public static final int NOWBURCOUNT_FIELD_NUMBER = 2;
    private int nowBurCount_;
    /**
     * <code>required int32 nowBurCount = 2;</code>
     *
     * <pre>
     *现在进行的局数
     * </pre>
     */
    public boolean hasNowBurCount() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 nowBurCount = 2;</code>
     *
     * <pre>
     *现在进行的局数
     * </pre>
     */
    public int getNowBurCount() {
      return nowBurCount_;
    }

    // required int32 totalBurCount = 3;
    public static final int TOTALBURCOUNT_FIELD_NUMBER = 3;
    private int totalBurCount_;
    /**
     * <code>required int32 totalBurCount = 3;</code>
     *
     * <pre>
     *创建的总局数
     * </pre>
     */
    public boolean hasTotalBurCount() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 totalBurCount = 3;</code>
     *
     * <pre>
     *创建的总局数
     * </pre>
     */
    public int getTotalBurCount() {
      return totalBurCount_;
    }

    // repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;
    public static final int PLAYERS_FIELD_NUMBER = 4;
    private java.util.List<com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes> players_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes> getPlayersList() {
      return players_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder> 
        getPlayersOrBuilderList() {
      return players_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public int getPlayersCount() {
      return players_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes getPlayers(int index) {
      return players_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
     *
     * <pre>
     *玩家信息
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder getPlayersOrBuilder(
        int index) {
      return players_.get(index);
    }

    // optional int32 nextSeat = 5;
    public static final int NEXTSEAT_FIELD_NUMBER = 5;
    private int nextSeat_;
    /**
     * <code>optional int32 nextSeat = 5;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    public boolean hasNextSeat() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 nextSeat = 5;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    public int getNextSeat() {
      return nextSeat_;
    }

    // required int32 wanfa = 6;
    public static final int WANFA_FIELD_NUMBER = 6;
    private int wanfa_;
    /**
     * <code>required int32 wanfa = 6;</code>
     */
    public boolean hasWanfa() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 wanfa = 6;</code>
     */
    public int getWanfa() {
      return wanfa_;
    }

    // optional int32 remain = 7;
    public static final int REMAIN_FIELD_NUMBER = 7;
    private int remain_;
    /**
     * <code>optional int32 remain = 7;</code>
     */
    public boolean hasRemain() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 remain = 7;</code>
     */
    public int getRemain() {
      return remain_;
    }

    // repeated int32 ext = 8;
    public static final int EXT_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> ext_;
    /**
     * <code>repeated int32 ext = 8;</code>
     */
    public java.util.List<java.lang.Integer>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated int32 ext = 8;</code>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated int32 ext = 8;</code>
     */
    public int getExt(int index) {
      return ext_.get(index);
    }

    // optional string gotyeRoomId = 9;
    public static final int GOTYEROOMID_FIELD_NUMBER = 9;
    private java.lang.Object gotyeRoomId_;
    /**
     * <code>optional string gotyeRoomId = 9;</code>
     *
     * <pre>
     *聊天室id	
     * </pre>
     */
    public boolean hasGotyeRoomId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string gotyeRoomId = 9;</code>
     *
     * <pre>
     *聊天室id	
     * </pre>
     */
    public java.lang.String getGotyeRoomId() {
      java.lang.Object ref = gotyeRoomId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gotyeRoomId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gotyeRoomId = 9;</code>
     *
     * <pre>
     *聊天室id	
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGotyeRoomIdBytes() {
      java.lang.Object ref = gotyeRoomId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gotyeRoomId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 matchExt = 10;
    public static final int MATCHEXT_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> matchExt_;
    /**
     * <code>repeated int32 matchExt = 10;</code>
     *
     * <pre>
     *比赛场扩展参数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMatchExtList() {
      return matchExt_;
    }
    /**
     * <code>repeated int32 matchExt = 10;</code>
     *
     * <pre>
     *比赛场扩展参数
     * </pre>
     */
    public int getMatchExtCount() {
      return matchExt_.size();
    }
    /**
     * <code>repeated int32 matchExt = 10;</code>
     *
     * <pre>
     *比赛场扩展参数
     * </pre>
     */
    public int getMatchExt(int index) {
      return matchExt_.get(index);
    }

    // optional int32 renshu = 11;
    public static final int RENSHU_FIELD_NUMBER = 11;
    private int renshu_;
    /**
     * <code>optional int32 renshu = 11;</code>
     *
     * <pre>
     *人数
     * </pre>
     */
    public boolean hasRenshu() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 renshu = 11;</code>
     *
     * <pre>
     *人数
     * </pre>
     */
    public int getRenshu() {
      return renshu_;
    }

    // optional int32 fromOverPop = 12;
    public static final int FROMOVERPOP_FIELD_NUMBER = 12;
    private int fromOverPop_;
    /**
     * <code>optional int32 fromOverPop = 12;</code>
     *
     * <pre>
     *是否是点了结算框的确定
     * </pre>
     */
    public boolean hasFromOverPop() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 fromOverPop = 12;</code>
     *
     * <pre>
     *是否是点了结算框的确定
     * </pre>
     */
    public int getFromOverPop() {
      return fromOverPop_;
    }

    // optional int32 showRenew = 13;
    public static final int SHOWRENEW_FIELD_NUMBER = 13;
    private int showRenew_;
    /**
     * <code>optional int32 showRenew = 13;</code>
     *
     * <pre>
     *是否显示续费
     * </pre>
     */
    public boolean hasShowRenew() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 showRenew = 13;</code>
     *
     * <pre>
     *是否显示续费
     * </pre>
     */
    public int getShowRenew() {
      return showRenew_;
    }

    // optional int32 isDaiKai = 14;
    public static final int ISDAIKAI_FIELD_NUMBER = 14;
    private int isDaiKai_;
    /**
     * <code>optional int32 isDaiKai = 14;</code>
     *
     * <pre>
     *是否是代开房间
     * </pre>
     */
    public boolean hasIsDaiKai() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 isDaiKai = 14;</code>
     *
     * <pre>
     *是否是代开房间
     * </pre>
     */
    public int getIsDaiKai() {
      return isDaiKai_;
    }

    // optional int32 tableType = 15;
    public static final int TABLETYPE_FIELD_NUMBER = 15;
    private int tableType_;
    /**
     * <code>optional int32 tableType = 15;</code>
     *
     * <pre>
     *房间属性 0普通房间1军团2练习场
     * </pre>
     */
    public boolean hasTableType() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 tableType = 15;</code>
     *
     * <pre>
     *房间属性 0普通房间1军团2练习场
     * </pre>
     */
    public int getTableType() {
      return tableType_;
    }

    // optional string groupProperty = 16;
    public static final int GROUPPROPERTY_FIELD_NUMBER = 16;
    private java.lang.Object groupProperty_;
    /**
     * <code>optional string groupProperty = 16;</code>
     *
     * <pre>
     *军团属性值
     * </pre>
     */
    public boolean hasGroupProperty() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string groupProperty = 16;</code>
     *
     * <pre>
     *军团属性值
     * </pre>
     */
    public java.lang.String getGroupProperty() {
      java.lang.Object ref = groupProperty_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          groupProperty_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string groupProperty = 16;</code>
     *
     * <pre>
     *军团属性值
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGroupPropertyBytes() {
      java.lang.Object ref = groupProperty_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupProperty_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 timeOut = 17;
    public static final int TIMEOUT_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> timeOut_;
    /**
     * <code>repeated int32 timeOut = 17;</code>
     *
     * <pre>
     * 托管时间
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getTimeOutList() {
      return timeOut_;
    }
    /**
     * <code>repeated int32 timeOut = 17;</code>
     *
     * <pre>
     * 托管时间
     * </pre>
     */
    public int getTimeOutCount() {
      return timeOut_.size();
    }
    /**
     * <code>repeated int32 timeOut = 17;</code>
     *
     * <pre>
     * 托管时间
     * </pre>
     */
    public int getTimeOut(int index) {
      return timeOut_.get(index);
    }

    // repeated int32 scoreCard = 18;
    public static final int SCORECARD_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> scoreCard_;
    /**
     * <code>repeated int32 scoreCard = 18;</code>
     *
     * <pre>
     *本轮出的分牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getScoreCardList() {
      return scoreCard_;
    }
    /**
     * <code>repeated int32 scoreCard = 18;</code>
     *
     * <pre>
     *本轮出的分牌
     * </pre>
     */
    public int getScoreCardCount() {
      return scoreCard_.size();
    }
    /**
     * <code>repeated int32 scoreCard = 18;</code>
     *
     * <pre>
     *本轮出的分牌
     * </pre>
     */
    public int getScoreCard(int index) {
      return scoreCard_.get(index);
    }

    // repeated string extStr = 19;
    public static final int EXTSTR_FIELD_NUMBER = 19;
    private com.google.protobuf.LazyStringList extStr_;
    /**
     * <code>repeated string extStr = 19;</code>
     *
     * <pre>
     * 扩展字符串
     * </pre>
     */
    public java.util.List<java.lang.String>
        getExtStrList() {
      return extStr_;
    }
    /**
     * <code>repeated string extStr = 19;</code>
     *
     * <pre>
     * 扩展字符串
     * </pre>
     */
    public int getExtStrCount() {
      return extStr_.size();
    }
    /**
     * <code>repeated string extStr = 19;</code>
     *
     * <pre>
     * 扩展字符串
     * </pre>
     */
    public java.lang.String getExtStr(int index) {
      return extStr_.get(index);
    }
    /**
     * <code>repeated string extStr = 19;</code>
     *
     * <pre>
     * 扩展字符串
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtStrBytes(int index) {
      return extStr_.getByteString(index);
    }

    // optional int32 roundCardType = 20;
    public static final int ROUNDCARDTYPE_FIELD_NUMBER = 20;
    private int roundCardType_;
    /**
     * <code>optional int32 roundCardType = 20;</code>
     *
     * <pre>
     *本轮出的牌型
     * </pre>
     */
    public boolean hasRoundCardType() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 roundCardType = 20;</code>
     *
     * <pre>
     *本轮出的牌型
     * </pre>
     */
    public int getRoundCardType() {
      return roundCardType_;
    }

    // optional string masterId = 21;
    public static final int MASTERID_FIELD_NUMBER = 21;
    private java.lang.Object masterId_;
    /**
     * <code>optional string masterId = 21;</code>
     *
     * <pre>
     *房主id
     * </pre>
     */
    public boolean hasMasterId() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string masterId = 21;</code>
     *
     * <pre>
     *房主id
     * </pre>
     */
    public java.lang.String getMasterId() {
      java.lang.Object ref = masterId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          masterId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string masterId = 21;</code>
     *
     * <pre>
     *房主id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMasterIdBytes() {
      java.lang.Object ref = masterId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        masterId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 lastWinSeat = 22;
    public static final int LASTWINSEAT_FIELD_NUMBER = 22;
    private int lastWinSeat_;
    /**
     * <code>optional int32 lastWinSeat = 22;</code>
     *
     * <pre>
     *庄家座位号
     * </pre>
     */
    public boolean hasLastWinSeat() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 lastWinSeat = 22;</code>
     *
     * <pre>
     *庄家座位号
     * </pre>
     */
    public int getLastWinSeat() {
      return lastWinSeat_;
    }

    // optional int64 creatorId = 23;
    public static final int CREATORID_FIELD_NUMBER = 23;
    private long creatorId_;
    /**
     * <code>optional int64 creatorId = 23;</code>
     *
     * <pre>
     *创房者id
     * </pre>
     */
    public boolean hasCreatorId() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 creatorId = 23;</code>
     *
     * <pre>
     *创房者id
     * </pre>
     */
    public long getCreatorId() {
      return creatorId_;
    }

    // optional int32 dealDice = 24;
    public static final int DEALDICE_FIELD_NUMBER = 24;
    private int dealDice_;
    /**
     * <code>optional int32 dealDice = 24;</code>
     *
     * <pre>
     *骰子点数
     * </pre>
     */
    public boolean hasDealDice() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 dealDice = 24;</code>
     *
     * <pre>
     *骰子点数
     * </pre>
     */
    public int getDealDice() {
      return dealDice_;
    }

    // repeated string strExt = 25;
    public static final int STREXT_FIELD_NUMBER = 25;
    private com.google.protobuf.LazyStringList strExt_;
    /**
     * <code>repeated string strExt = 25;</code>
     *
     * <pre>
     *字符串扩展
     * </pre>
     */
    public java.util.List<java.lang.String>
        getStrExtList() {
      return strExt_;
    }
    /**
     * <code>repeated string strExt = 25;</code>
     *
     * <pre>
     *字符串扩展
     * </pre>
     */
    public int getStrExtCount() {
      return strExt_.size();
    }
    /**
     * <code>repeated string strExt = 25;</code>
     *
     * <pre>
     *字符串扩展
     * </pre>
     */
    public java.lang.String getStrExt(int index) {
      return strExt_.get(index);
    }
    /**
     * <code>repeated string strExt = 25;</code>
     *
     * <pre>
     *字符串扩展
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStrExtBytes(int index) {
      return strExt_.getByteString(index);
    }

    // repeated int64 creditConfig = 26;
    public static final int CREDITCONFIG_FIELD_NUMBER = 26;
    private java.util.List<java.lang.Long> creditConfig_;
    /**
     * <code>repeated int64 creditConfig = 26;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getCreditConfigList() {
      return creditConfig_;
    }
    /**
     * <code>repeated int64 creditConfig = 26;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    public int getCreditConfigCount() {
      return creditConfig_.size();
    }
    /**
     * <code>repeated int64 creditConfig = 26;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    public long getCreditConfig(int index) {
      return creditConfig_.get(index);
    }

    // repeated int32 intParams = 27;
    public static final int INTPARAMS_FIELD_NUMBER = 27;
    private java.util.List<java.lang.Integer> intParams_;
    /**
     * <code>repeated int32 intParams = 27;</code>
     *
     * <pre>
     * 创房int参数列表
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIntParamsList() {
      return intParams_;
    }
    /**
     * <code>repeated int32 intParams = 27;</code>
     *
     * <pre>
     * 创房int参数列表
     * </pre>
     */
    public int getIntParamsCount() {
      return intParams_.size();
    }
    /**
     * <code>repeated int32 intParams = 27;</code>
     *
     * <pre>
     * 创房int参数列表
     * </pre>
     */
    public int getIntParams(int index) {
      return intParams_.get(index);
    }

    // repeated string strParams = 28;
    public static final int STRPARAMS_FIELD_NUMBER = 28;
    private com.google.protobuf.LazyStringList strParams_;
    /**
     * <code>repeated string strParams = 28;</code>
     *
     * <pre>
     * 创房str参数列表
     * </pre>
     */
    public java.util.List<java.lang.String>
        getStrParamsList() {
      return strParams_;
    }
    /**
     * <code>repeated string strParams = 28;</code>
     *
     * <pre>
     * 创房str参数列表
     * </pre>
     */
    public int getStrParamsCount() {
      return strParams_.size();
    }
    /**
     * <code>repeated string strParams = 28;</code>
     *
     * <pre>
     * 创房str参数列表
     * </pre>
     */
    public java.lang.String getStrParams(int index) {
      return strParams_.get(index);
    }
    /**
     * <code>repeated string strParams = 28;</code>
     *
     * <pre>
     * 创房str参数列表
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStrParamsBytes(int index) {
      return strParams_.getByteString(index);
    }

    // optional string roomName = 29;
    public static final int ROOMNAME_FIELD_NUMBER = 29;
    private java.lang.Object roomName_;
    /**
     * <code>optional string roomName = 29;</code>
     *
     * <pre>
     * 包间名字
     * </pre>
     */
    public boolean hasRoomName() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional string roomName = 29;</code>
     *
     * <pre>
     * 包间名字
     * </pre>
     */
    public java.lang.String getRoomName() {
      java.lang.Object ref = roomName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          roomName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string roomName = 29;</code>
     *
     * <pre>
     * 包间名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRoomNameBytes() {
      java.lang.Object ref = roomName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        roomName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated string generalExt = 30;
    public static final int GENERALEXT_FIELD_NUMBER = 30;
    private com.google.protobuf.LazyStringList generalExt_;
    /**
     * <code>repeated string generalExt = 30;</code>
     *
     * <pre>
     * 通用扩展
     * </pre>
     */
    public java.util.List<java.lang.String>
        getGeneralExtList() {
      return generalExt_;
    }
    /**
     * <code>repeated string generalExt = 30;</code>
     *
     * <pre>
     * 通用扩展
     * </pre>
     */
    public int getGeneralExtCount() {
      return generalExt_.size();
    }
    /**
     * <code>repeated string generalExt = 30;</code>
     *
     * <pre>
     * 通用扩展
     * </pre>
     */
    public java.lang.String getGeneralExt(int index) {
      return generalExt_.get(index);
    }
    /**
     * <code>repeated string generalExt = 30;</code>
     *
     * <pre>
     * 通用扩展
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGeneralExtBytes(int index) {
      return generalExt_.getByteString(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;
    public static final int QIPAN_FIELD_NUMBER = 31;
    private java.util.List<com.sy599.game.msg.serverPacket.TableRes.QiZi> qiPan_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
     *
     * <pre>
     * 棋盘
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TableRes.QiZi> getQiPanList() {
      return qiPan_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
     *
     * <pre>
     * 棋盘
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.QiZiOrBuilder> 
        getQiPanOrBuilderList() {
      return qiPan_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
     *
     * <pre>
     * 棋盘
     * </pre>
     */
    public int getQiPanCount() {
      return qiPan_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
     *
     * <pre>
     * 棋盘
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.QiZi getQiPan(int index) {
      return qiPan_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
     *
     * <pre>
     * 棋盘
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.QiZiOrBuilder getQiPanOrBuilder(
        int index) {
      return qiPan_.get(index);
    }

    // optional string goldMsg = 32;
    public static final int GOLDMSG_FIELD_NUMBER = 32;
    private java.lang.Object goldMsg_;
    /**
     * <code>optional string goldMsg = 32;</code>
     *
     * <pre>
     * 金币场信息
     * </pre>
     */
    public boolean hasGoldMsg() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional string goldMsg = 32;</code>
     *
     * <pre>
     * 金币场信息
     * </pre>
     */
    public java.lang.String getGoldMsg() {
      java.lang.Object ref = goldMsg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          goldMsg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string goldMsg = 32;</code>
     *
     * <pre>
     * 金币场信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGoldMsgBytes() {
      java.lang.Object ref = goldMsg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        goldMsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 goldRoomConfigId = 33;
    public static final int GOLDROOMCONFIGID_FIELD_NUMBER = 33;
    private long goldRoomConfigId_;
    /**
     * <code>optional int64 goldRoomConfigId = 33;</code>
     *
     * <pre>
     * 金币场配置id
     * </pre>
     */
    public boolean hasGoldRoomConfigId() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 goldRoomConfigId = 33;</code>
     *
     * <pre>
     * 金币场配置id
     * </pre>
     */
    public long getGoldRoomConfigId() {
      return goldRoomConfigId_;
    }

    // optional string groupTableGoldMsg = 34;
    public static final int GROUPTABLEGOLDMSG_FIELD_NUMBER = 34;
    private java.lang.Object groupTableGoldMsg_;
    /**
     * <code>optional string groupTableGoldMsg = 34;</code>
     *
     * <pre>
     * 亲友圈金币房信息
     * </pre>
     */
    public boolean hasGroupTableGoldMsg() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional string groupTableGoldMsg = 34;</code>
     *
     * <pre>
     * 亲友圈金币房信息
     * </pre>
     */
    public java.lang.String getGroupTableGoldMsg() {
      java.lang.Object ref = groupTableGoldMsg_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          groupTableGoldMsg_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string groupTableGoldMsg = 34;</code>
     *
     * <pre>
     * 亲友圈金币房信息
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGroupTableGoldMsgBytes() {
      java.lang.Object ref = groupTableGoldMsg_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        groupTableGoldMsg_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      tableId_ = "";
      nowBurCount_ = 0;
      totalBurCount_ = 0;
      players_ = java.util.Collections.emptyList();
      nextSeat_ = 0;
      wanfa_ = 0;
      remain_ = 0;
      ext_ = java.util.Collections.emptyList();
      gotyeRoomId_ = "";
      matchExt_ = java.util.Collections.emptyList();
      renshu_ = 0;
      fromOverPop_ = 0;
      showRenew_ = 0;
      isDaiKai_ = 0;
      tableType_ = 0;
      groupProperty_ = "";
      timeOut_ = java.util.Collections.emptyList();
      scoreCard_ = java.util.Collections.emptyList();
      extStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      roundCardType_ = 0;
      masterId_ = "";
      lastWinSeat_ = 0;
      creatorId_ = 0L;
      dealDice_ = 0;
      strExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      creditConfig_ = java.util.Collections.emptyList();
      intParams_ = java.util.Collections.emptyList();
      strParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      roomName_ = "";
      generalExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      qiPan_ = java.util.Collections.emptyList();
      goldMsg_ = "";
      goldRoomConfigId_ = 0L;
      groupTableGoldMsg_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasTableId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNowBurCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTotalBurCount()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWanfa()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPlayersCount(); i++) {
        if (!getPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTableIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, nowBurCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, totalBurCount_);
      }
      for (int i = 0; i < players_.size(); i++) {
        output.writeMessage(4, players_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(5, nextSeat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(6, wanfa_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(7, remain_);
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeInt32(8, ext_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(9, getGotyeRoomIdBytes());
      }
      for (int i = 0; i < matchExt_.size(); i++) {
        output.writeInt32(10, matchExt_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(11, renshu_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(12, fromOverPop_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(13, showRenew_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(14, isDaiKai_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(15, tableType_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(16, getGroupPropertyBytes());
      }
      for (int i = 0; i < timeOut_.size(); i++) {
        output.writeInt32(17, timeOut_.get(i));
      }
      for (int i = 0; i < scoreCard_.size(); i++) {
        output.writeInt32(18, scoreCard_.get(i));
      }
      for (int i = 0; i < extStr_.size(); i++) {
        output.writeBytes(19, extStr_.getByteString(i));
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(20, roundCardType_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(21, getMasterIdBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(22, lastWinSeat_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(23, creatorId_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(24, dealDice_);
      }
      for (int i = 0; i < strExt_.size(); i++) {
        output.writeBytes(25, strExt_.getByteString(i));
      }
      for (int i = 0; i < creditConfig_.size(); i++) {
        output.writeInt64(26, creditConfig_.get(i));
      }
      for (int i = 0; i < intParams_.size(); i++) {
        output.writeInt32(27, intParams_.get(i));
      }
      for (int i = 0; i < strParams_.size(); i++) {
        output.writeBytes(28, strParams_.getByteString(i));
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBytes(29, getRoomNameBytes());
      }
      for (int i = 0; i < generalExt_.size(); i++) {
        output.writeBytes(30, generalExt_.getByteString(i));
      }
      for (int i = 0; i < qiPan_.size(); i++) {
        output.writeMessage(31, qiPan_.get(i));
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBytes(32, getGoldMsgBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(33, goldRoomConfigId_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBytes(34, getGroupTableGoldMsgBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTableIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nowBurCount_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, totalBurCount_);
      }
      for (int i = 0; i < players_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, players_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, nextSeat_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, wanfa_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, remain_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(ext_.get(i));
        }
        size += dataSize;
        size += 1 * getExtList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getGotyeRoomIdBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < matchExt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(matchExt_.get(i));
        }
        size += dataSize;
        size += 1 * getMatchExtList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, renshu_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, fromOverPop_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, showRenew_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, isDaiKai_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, tableType_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getGroupPropertyBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < timeOut_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(timeOut_.get(i));
        }
        size += dataSize;
        size += 2 * getTimeOutList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scoreCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(scoreCard_.get(i));
        }
        size += dataSize;
        size += 2 * getScoreCardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < extStr_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(extStr_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getExtStrList().size();
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, roundCardType_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(21, getMasterIdBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, lastWinSeat_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(23, creatorId_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, dealDice_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strExt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strExt_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getStrExtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < creditConfig_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(creditConfig_.get(i));
        }
        size += dataSize;
        size += 2 * getCreditConfigList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intParams_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(intParams_.get(i));
        }
        size += dataSize;
        size += 2 * getIntParamsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strParams_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strParams_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getStrParamsList().size();
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(29, getRoomNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < generalExt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(generalExt_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getGeneralExtList().size();
      }
      for (int i = 0; i < qiPan_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, qiPan_.get(i));
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(32, getGoldMsgBytes());
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(33, goldRoomConfigId_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(34, getGroupTableGoldMsgBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.CreateTableRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.CreateTableRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.CreateTableRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.CreateTableRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.CreateTableRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.CreateTableRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.CreateTableRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.CreateTableRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.CreateTableRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.CreateTableRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.CreateTableRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.CreateTableRes}
     *
     * <pre>
     *创建一个牌桌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.CreateTableResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_CreateTableRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_CreateTableRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.CreateTableRes.class, com.sy599.game.msg.serverPacket.TableRes.CreateTableRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.CreateTableRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayersFieldBuilder();
          getQiPanFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tableId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        nowBurCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        totalBurCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
        } else {
          playersBuilder_.clear();
        }
        nextSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        wanfa_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        remain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        ext_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        gotyeRoomId_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        matchExt_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        renshu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        fromOverPop_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        showRenew_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        isDaiKai_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        tableType_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        groupProperty_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        timeOut_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        scoreCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        extStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00040000);
        roundCardType_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        masterId_ = "";
        bitField0_ = (bitField0_ & ~0x00100000);
        lastWinSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        creatorId_ = 0L;
        bitField0_ = (bitField0_ & ~0x00400000);
        dealDice_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        strExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x01000000);
        creditConfig_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        intParams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x04000000);
        strParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x08000000);
        roomName_ = "";
        bitField0_ = (bitField0_ & ~0x10000000);
        generalExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x20000000);
        if (qiPanBuilder_ == null) {
          qiPan_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x40000000);
        } else {
          qiPanBuilder_.clear();
        }
        goldMsg_ = "";
        bitField0_ = (bitField0_ & ~0x80000000);
        goldRoomConfigId_ = 0L;
        bitField1_ = (bitField1_ & ~0x00000001);
        groupTableGoldMsg_ = "";
        bitField1_ = (bitField1_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_CreateTableRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.CreateTableRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.CreateTableRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.CreateTableRes build() {
        com.sy599.game.msg.serverPacket.TableRes.CreateTableRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.CreateTableRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.CreateTableRes result = new com.sy599.game.msg.serverPacket.TableRes.CreateTableRes(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tableId_ = tableId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nowBurCount_ = nowBurCount_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.totalBurCount_ = totalBurCount_;
        if (playersBuilder_ == null) {
          if (((bitField0_ & 0x00000008) == 0x00000008)) {
            players_ = java.util.Collections.unmodifiableList(players_);
            bitField0_ = (bitField0_ & ~0x00000008);
          }
          result.players_ = players_;
        } else {
          result.players_ = playersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.nextSeat_ = nextSeat_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.wanfa_ = wanfa_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        result.remain_ = remain_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          ext_ = java.util.Collections.unmodifiableList(ext_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.ext_ = ext_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.gotyeRoomId_ = gotyeRoomId_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          matchExt_ = java.util.Collections.unmodifiableList(matchExt_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.matchExt_ = matchExt_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.renshu_ = renshu_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        result.fromOverPop_ = fromOverPop_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.showRenew_ = showRenew_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.isDaiKai_ = isDaiKai_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.tableType_ = tableType_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.groupProperty_ = groupProperty_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          timeOut_ = java.util.Collections.unmodifiableList(timeOut_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.timeOut_ = timeOut_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          scoreCard_ = java.util.Collections.unmodifiableList(scoreCard_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.scoreCard_ = scoreCard_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          extStr_ = new com.google.protobuf.UnmodifiableLazyStringList(
              extStr_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.extStr_ = extStr_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.roundCardType_ = roundCardType_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.masterId_ = masterId_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.lastWinSeat_ = lastWinSeat_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.creatorId_ = creatorId_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.dealDice_ = dealDice_;
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          strExt_ = new com.google.protobuf.UnmodifiableLazyStringList(
              strExt_);
          bitField0_ = (bitField0_ & ~0x01000000);
        }
        result.strExt_ = strExt_;
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          creditConfig_ = java.util.Collections.unmodifiableList(creditConfig_);
          bitField0_ = (bitField0_ & ~0x02000000);
        }
        result.creditConfig_ = creditConfig_;
        if (((bitField0_ & 0x04000000) == 0x04000000)) {
          intParams_ = java.util.Collections.unmodifiableList(intParams_);
          bitField0_ = (bitField0_ & ~0x04000000);
        }
        result.intParams_ = intParams_;
        if (((bitField0_ & 0x08000000) == 0x08000000)) {
          strParams_ = new com.google.protobuf.UnmodifiableLazyStringList(
              strParams_);
          bitField0_ = (bitField0_ & ~0x08000000);
        }
        result.strParams_ = strParams_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.roomName_ = roomName_;
        if (((bitField0_ & 0x20000000) == 0x20000000)) {
          generalExt_ = new com.google.protobuf.UnmodifiableLazyStringList(
              generalExt_);
          bitField0_ = (bitField0_ & ~0x20000000);
        }
        result.generalExt_ = generalExt_;
        if (qiPanBuilder_ == null) {
          if (((bitField0_ & 0x40000000) == 0x40000000)) {
            qiPan_ = java.util.Collections.unmodifiableList(qiPan_);
            bitField0_ = (bitField0_ & ~0x40000000);
          }
          result.qiPan_ = qiPan_;
        } else {
          result.qiPan_ = qiPanBuilder_.build();
        }
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.goldMsg_ = goldMsg_;
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00100000;
        }
        result.goldRoomConfigId_ = goldRoomConfigId_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00200000;
        }
        result.groupTableGoldMsg_ = groupTableGoldMsg_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.CreateTableRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.CreateTableRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.CreateTableRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.CreateTableRes.getDefaultInstance()) return this;
        if (other.hasTableId()) {
          bitField0_ |= 0x00000001;
          tableId_ = other.tableId_;
          onChanged();
        }
        if (other.hasNowBurCount()) {
          setNowBurCount(other.getNowBurCount());
        }
        if (other.hasTotalBurCount()) {
          setTotalBurCount(other.getTotalBurCount());
        }
        if (playersBuilder_ == null) {
          if (!other.players_.isEmpty()) {
            if (players_.isEmpty()) {
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000008);
            } else {
              ensurePlayersIsMutable();
              players_.addAll(other.players_);
            }
            onChanged();
          }
        } else {
          if (!other.players_.isEmpty()) {
            if (playersBuilder_.isEmpty()) {
              playersBuilder_.dispose();
              playersBuilder_ = null;
              players_ = other.players_;
              bitField0_ = (bitField0_ & ~0x00000008);
              playersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPlayersFieldBuilder() : null;
            } else {
              playersBuilder_.addAllMessages(other.players_);
            }
          }
        }
        if (other.hasNextSeat()) {
          setNextSeat(other.getNextSeat());
        }
        if (other.hasWanfa()) {
          setWanfa(other.getWanfa());
        }
        if (other.hasRemain()) {
          setRemain(other.getRemain());
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        if (other.hasGotyeRoomId()) {
          bitField0_ |= 0x00000100;
          gotyeRoomId_ = other.gotyeRoomId_;
          onChanged();
        }
        if (!other.matchExt_.isEmpty()) {
          if (matchExt_.isEmpty()) {
            matchExt_ = other.matchExt_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureMatchExtIsMutable();
            matchExt_.addAll(other.matchExt_);
          }
          onChanged();
        }
        if (other.hasRenshu()) {
          setRenshu(other.getRenshu());
        }
        if (other.hasFromOverPop()) {
          setFromOverPop(other.getFromOverPop());
        }
        if (other.hasShowRenew()) {
          setShowRenew(other.getShowRenew());
        }
        if (other.hasIsDaiKai()) {
          setIsDaiKai(other.getIsDaiKai());
        }
        if (other.hasTableType()) {
          setTableType(other.getTableType());
        }
        if (other.hasGroupProperty()) {
          bitField0_ |= 0x00008000;
          groupProperty_ = other.groupProperty_;
          onChanged();
        }
        if (!other.timeOut_.isEmpty()) {
          if (timeOut_.isEmpty()) {
            timeOut_ = other.timeOut_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureTimeOutIsMutable();
            timeOut_.addAll(other.timeOut_);
          }
          onChanged();
        }
        if (!other.scoreCard_.isEmpty()) {
          if (scoreCard_.isEmpty()) {
            scoreCard_ = other.scoreCard_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureScoreCardIsMutable();
            scoreCard_.addAll(other.scoreCard_);
          }
          onChanged();
        }
        if (!other.extStr_.isEmpty()) {
          if (extStr_.isEmpty()) {
            extStr_ = other.extStr_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureExtStrIsMutable();
            extStr_.addAll(other.extStr_);
          }
          onChanged();
        }
        if (other.hasRoundCardType()) {
          setRoundCardType(other.getRoundCardType());
        }
        if (other.hasMasterId()) {
          bitField0_ |= 0x00100000;
          masterId_ = other.masterId_;
          onChanged();
        }
        if (other.hasLastWinSeat()) {
          setLastWinSeat(other.getLastWinSeat());
        }
        if (other.hasCreatorId()) {
          setCreatorId(other.getCreatorId());
        }
        if (other.hasDealDice()) {
          setDealDice(other.getDealDice());
        }
        if (!other.strExt_.isEmpty()) {
          if (strExt_.isEmpty()) {
            strExt_ = other.strExt_;
            bitField0_ = (bitField0_ & ~0x01000000);
          } else {
            ensureStrExtIsMutable();
            strExt_.addAll(other.strExt_);
          }
          onChanged();
        }
        if (!other.creditConfig_.isEmpty()) {
          if (creditConfig_.isEmpty()) {
            creditConfig_ = other.creditConfig_;
            bitField0_ = (bitField0_ & ~0x02000000);
          } else {
            ensureCreditConfigIsMutable();
            creditConfig_.addAll(other.creditConfig_);
          }
          onChanged();
        }
        if (!other.intParams_.isEmpty()) {
          if (intParams_.isEmpty()) {
            intParams_ = other.intParams_;
            bitField0_ = (bitField0_ & ~0x04000000);
          } else {
            ensureIntParamsIsMutable();
            intParams_.addAll(other.intParams_);
          }
          onChanged();
        }
        if (!other.strParams_.isEmpty()) {
          if (strParams_.isEmpty()) {
            strParams_ = other.strParams_;
            bitField0_ = (bitField0_ & ~0x08000000);
          } else {
            ensureStrParamsIsMutable();
            strParams_.addAll(other.strParams_);
          }
          onChanged();
        }
        if (other.hasRoomName()) {
          bitField0_ |= 0x10000000;
          roomName_ = other.roomName_;
          onChanged();
        }
        if (!other.generalExt_.isEmpty()) {
          if (generalExt_.isEmpty()) {
            generalExt_ = other.generalExt_;
            bitField0_ = (bitField0_ & ~0x20000000);
          } else {
            ensureGeneralExtIsMutable();
            generalExt_.addAll(other.generalExt_);
          }
          onChanged();
        }
        if (qiPanBuilder_ == null) {
          if (!other.qiPan_.isEmpty()) {
            if (qiPan_.isEmpty()) {
              qiPan_ = other.qiPan_;
              bitField0_ = (bitField0_ & ~0x40000000);
            } else {
              ensureQiPanIsMutable();
              qiPan_.addAll(other.qiPan_);
            }
            onChanged();
          }
        } else {
          if (!other.qiPan_.isEmpty()) {
            if (qiPanBuilder_.isEmpty()) {
              qiPanBuilder_.dispose();
              qiPanBuilder_ = null;
              qiPan_ = other.qiPan_;
              bitField0_ = (bitField0_ & ~0x40000000);
              qiPanBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getQiPanFieldBuilder() : null;
            } else {
              qiPanBuilder_.addAllMessages(other.qiPan_);
            }
          }
        }
        if (other.hasGoldMsg()) {
          bitField0_ |= 0x80000000;
          goldMsg_ = other.goldMsg_;
          onChanged();
        }
        if (other.hasGoldRoomConfigId()) {
          setGoldRoomConfigId(other.getGoldRoomConfigId());
        }
        if (other.hasGroupTableGoldMsg()) {
          bitField1_ |= 0x00000002;
          groupTableGoldMsg_ = other.groupTableGoldMsg_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTableId()) {
          
          return false;
        }
        if (!hasNowBurCount()) {
          
          return false;
        }
        if (!hasTotalBurCount()) {
          
          return false;
        }
        if (!hasWanfa()) {
          
          return false;
        }
        for (int i = 0; i < getPlayersCount(); i++) {
          if (!getPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.CreateTableRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.CreateTableRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      // required string tableId = 1;
      private java.lang.Object tableId_ = "";
      /**
       * <code>required string tableId = 1;</code>
       *
       * <pre>
       *牌桌id
       * </pre>
       */
      public boolean hasTableId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string tableId = 1;</code>
       *
       * <pre>
       *牌桌id
       * </pre>
       */
      public java.lang.String getTableId() {
        java.lang.Object ref = tableId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          tableId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string tableId = 1;</code>
       *
       * <pre>
       *牌桌id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTableIdBytes() {
        java.lang.Object ref = tableId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tableId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string tableId = 1;</code>
       *
       * <pre>
       *牌桌id
       * </pre>
       */
      public Builder setTableId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tableId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string tableId = 1;</code>
       *
       * <pre>
       *牌桌id
       * </pre>
       */
      public Builder clearTableId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        tableId_ = getDefaultInstance().getTableId();
        onChanged();
        return this;
      }
      /**
       * <code>required string tableId = 1;</code>
       *
       * <pre>
       *牌桌id
       * </pre>
       */
      public Builder setTableIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        tableId_ = value;
        onChanged();
        return this;
      }

      // required int32 nowBurCount = 2;
      private int nowBurCount_ ;
      /**
       * <code>required int32 nowBurCount = 2;</code>
       *
       * <pre>
       *现在进行的局数
       * </pre>
       */
      public boolean hasNowBurCount() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 nowBurCount = 2;</code>
       *
       * <pre>
       *现在进行的局数
       * </pre>
       */
      public int getNowBurCount() {
        return nowBurCount_;
      }
      /**
       * <code>required int32 nowBurCount = 2;</code>
       *
       * <pre>
       *现在进行的局数
       * </pre>
       */
      public Builder setNowBurCount(int value) {
        bitField0_ |= 0x00000002;
        nowBurCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 nowBurCount = 2;</code>
       *
       * <pre>
       *现在进行的局数
       * </pre>
       */
      public Builder clearNowBurCount() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nowBurCount_ = 0;
        onChanged();
        return this;
      }

      // required int32 totalBurCount = 3;
      private int totalBurCount_ ;
      /**
       * <code>required int32 totalBurCount = 3;</code>
       *
       * <pre>
       *创建的总局数
       * </pre>
       */
      public boolean hasTotalBurCount() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 totalBurCount = 3;</code>
       *
       * <pre>
       *创建的总局数
       * </pre>
       */
      public int getTotalBurCount() {
        return totalBurCount_;
      }
      /**
       * <code>required int32 totalBurCount = 3;</code>
       *
       * <pre>
       *创建的总局数
       * </pre>
       */
      public Builder setTotalBurCount(int value) {
        bitField0_ |= 0x00000004;
        totalBurCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 totalBurCount = 3;</code>
       *
       * <pre>
       *创建的总局数
       * </pre>
       */
      public Builder clearTotalBurCount() {
        bitField0_ = (bitField0_ & ~0x00000004);
        totalBurCount_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;
      private java.util.List<com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes> players_ =
        java.util.Collections.emptyList();
      private void ensurePlayersIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          players_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes>(players_);
          bitField0_ |= 0x00000008;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder> playersBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes> getPlayersList() {
        if (playersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(players_);
        } else {
          return playersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public int getPlayersCount() {
        if (playersBuilder_ == null) {
          return players_.size();
        } else {
          return playersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes getPlayers(int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);
        } else {
          return playersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder setPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.set(index, value);
          onChanged();
        } else {
          playersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder setPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.set(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder addPlayers(com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(value);
          onChanged();
        } else {
          playersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder addPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes value) {
        if (playersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePlayersIsMutable();
          players_.add(index, value);
          onChanged();
        } else {
          playersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder addPlayers(
          com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder addPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder builderForValue) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.add(index, builderForValue.build());
          onChanged();
        } else {
          playersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder addAllPlayers(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes> values) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          super.addAll(values, players_);
          onChanged();
        } else {
          playersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder clearPlayers() {
        if (playersBuilder_ == null) {
          players_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000008);
          onChanged();
        } else {
          playersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public Builder removePlayers(int index) {
        if (playersBuilder_ == null) {
          ensurePlayersIsMutable();
          players_.remove(index);
          onChanged();
        } else {
          playersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder getPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder getPlayersOrBuilder(
          int index) {
        if (playersBuilder_ == null) {
          return players_.get(index);  } else {
          return playersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder> 
           getPlayersOrBuilderList() {
        if (playersBuilder_ != null) {
          return playersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(players_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder addPlayersBuilder() {
        return getPlayersFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder addPlayersBuilder(
          int index) {
        return getPlayersFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PlayerInTableRes players = 4;</code>
       *
       * <pre>
       *玩家信息
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder> 
           getPlayersBuilderList() {
        return getPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder> 
          getPlayersFieldBuilder() {
        if (playersBuilder_ == null) {
          playersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder>(
                  players_,
                  ((bitField0_ & 0x00000008) == 0x00000008),
                  getParentForChildren(),
                  isClean());
          players_ = null;
        }
        return playersBuilder_;
      }

      // optional int32 nextSeat = 5;
      private int nextSeat_ ;
      /**
       * <code>optional int32 nextSeat = 5;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public boolean hasNextSeat() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 nextSeat = 5;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public int getNextSeat() {
        return nextSeat_;
      }
      /**
       * <code>optional int32 nextSeat = 5;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public Builder setNextSeat(int value) {
        bitField0_ |= 0x00000010;
        nextSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nextSeat = 5;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public Builder clearNextSeat() {
        bitField0_ = (bitField0_ & ~0x00000010);
        nextSeat_ = 0;
        onChanged();
        return this;
      }

      // required int32 wanfa = 6;
      private int wanfa_ ;
      /**
       * <code>required int32 wanfa = 6;</code>
       */
      public boolean hasWanfa() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 wanfa = 6;</code>
       */
      public int getWanfa() {
        return wanfa_;
      }
      /**
       * <code>required int32 wanfa = 6;</code>
       */
      public Builder setWanfa(int value) {
        bitField0_ |= 0x00000020;
        wanfa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 wanfa = 6;</code>
       */
      public Builder clearWanfa() {
        bitField0_ = (bitField0_ & ~0x00000020);
        wanfa_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remain = 7;
      private int remain_ ;
      /**
       * <code>optional int32 remain = 7;</code>
       */
      public boolean hasRemain() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 remain = 7;</code>
       */
      public int getRemain() {
        return remain_;
      }
      /**
       * <code>optional int32 remain = 7;</code>
       */
      public Builder setRemain(int value) {
        bitField0_ |= 0x00000040;
        remain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remain = 7;</code>
       */
      public Builder clearRemain() {
        bitField0_ = (bitField0_ & ~0x00000040);
        remain_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 ext = 8;
      private java.util.List<java.lang.Integer> ext_ = java.util.Collections.emptyList();
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          ext_ = new java.util.ArrayList<java.lang.Integer>(ext_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 ext = 8;</code>
       */
      public java.util.List<java.lang.Integer>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated int32 ext = 8;</code>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated int32 ext = 8;</code>
       */
      public int getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated int32 ext = 8;</code>
       */
      public Builder setExt(
          int index, int value) {
        ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 8;</code>
       */
      public Builder addExt(int value) {
        ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 8;</code>
       */
      public Builder addAllExt(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 8;</code>
       */
      public Builder clearExt() {
        ext_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional string gotyeRoomId = 9;
      private java.lang.Object gotyeRoomId_ = "";
      /**
       * <code>optional string gotyeRoomId = 9;</code>
       *
       * <pre>
       *聊天室id	
       * </pre>
       */
      public boolean hasGotyeRoomId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string gotyeRoomId = 9;</code>
       *
       * <pre>
       *聊天室id	
       * </pre>
       */
      public java.lang.String getGotyeRoomId() {
        java.lang.Object ref = gotyeRoomId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gotyeRoomId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gotyeRoomId = 9;</code>
       *
       * <pre>
       *聊天室id	
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGotyeRoomIdBytes() {
        java.lang.Object ref = gotyeRoomId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gotyeRoomId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gotyeRoomId = 9;</code>
       *
       * <pre>
       *聊天室id	
       * </pre>
       */
      public Builder setGotyeRoomId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        gotyeRoomId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gotyeRoomId = 9;</code>
       *
       * <pre>
       *聊天室id	
       * </pre>
       */
      public Builder clearGotyeRoomId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        gotyeRoomId_ = getDefaultInstance().getGotyeRoomId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gotyeRoomId = 9;</code>
       *
       * <pre>
       *聊天室id	
       * </pre>
       */
      public Builder setGotyeRoomIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        gotyeRoomId_ = value;
        onChanged();
        return this;
      }

      // repeated int32 matchExt = 10;
      private java.util.List<java.lang.Integer> matchExt_ = java.util.Collections.emptyList();
      private void ensureMatchExtIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          matchExt_ = new java.util.ArrayList<java.lang.Integer>(matchExt_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 matchExt = 10;</code>
       *
       * <pre>
       *比赛场扩展参数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMatchExtList() {
        return java.util.Collections.unmodifiableList(matchExt_);
      }
      /**
       * <code>repeated int32 matchExt = 10;</code>
       *
       * <pre>
       *比赛场扩展参数
       * </pre>
       */
      public int getMatchExtCount() {
        return matchExt_.size();
      }
      /**
       * <code>repeated int32 matchExt = 10;</code>
       *
       * <pre>
       *比赛场扩展参数
       * </pre>
       */
      public int getMatchExt(int index) {
        return matchExt_.get(index);
      }
      /**
       * <code>repeated int32 matchExt = 10;</code>
       *
       * <pre>
       *比赛场扩展参数
       * </pre>
       */
      public Builder setMatchExt(
          int index, int value) {
        ensureMatchExtIsMutable();
        matchExt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 matchExt = 10;</code>
       *
       * <pre>
       *比赛场扩展参数
       * </pre>
       */
      public Builder addMatchExt(int value) {
        ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 matchExt = 10;</code>
       *
       * <pre>
       *比赛场扩展参数
       * </pre>
       */
      public Builder addAllMatchExt(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMatchExtIsMutable();
        super.addAll(values, matchExt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 matchExt = 10;</code>
       *
       * <pre>
       *比赛场扩展参数
       * </pre>
       */
      public Builder clearMatchExt() {
        matchExt_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional int32 renshu = 11;
      private int renshu_ ;
      /**
       * <code>optional int32 renshu = 11;</code>
       *
       * <pre>
       *人数
       * </pre>
       */
      public boolean hasRenshu() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 renshu = 11;</code>
       *
       * <pre>
       *人数
       * </pre>
       */
      public int getRenshu() {
        return renshu_;
      }
      /**
       * <code>optional int32 renshu = 11;</code>
       *
       * <pre>
       *人数
       * </pre>
       */
      public Builder setRenshu(int value) {
        bitField0_ |= 0x00000400;
        renshu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 renshu = 11;</code>
       *
       * <pre>
       *人数
       * </pre>
       */
      public Builder clearRenshu() {
        bitField0_ = (bitField0_ & ~0x00000400);
        renshu_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fromOverPop = 12;
      private int fromOverPop_ ;
      /**
       * <code>optional int32 fromOverPop = 12;</code>
       *
       * <pre>
       *是否是点了结算框的确定
       * </pre>
       */
      public boolean hasFromOverPop() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 fromOverPop = 12;</code>
       *
       * <pre>
       *是否是点了结算框的确定
       * </pre>
       */
      public int getFromOverPop() {
        return fromOverPop_;
      }
      /**
       * <code>optional int32 fromOverPop = 12;</code>
       *
       * <pre>
       *是否是点了结算框的确定
       * </pre>
       */
      public Builder setFromOverPop(int value) {
        bitField0_ |= 0x00000800;
        fromOverPop_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fromOverPop = 12;</code>
       *
       * <pre>
       *是否是点了结算框的确定
       * </pre>
       */
      public Builder clearFromOverPop() {
        bitField0_ = (bitField0_ & ~0x00000800);
        fromOverPop_ = 0;
        onChanged();
        return this;
      }

      // optional int32 showRenew = 13;
      private int showRenew_ ;
      /**
       * <code>optional int32 showRenew = 13;</code>
       *
       * <pre>
       *是否显示续费
       * </pre>
       */
      public boolean hasShowRenew() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 showRenew = 13;</code>
       *
       * <pre>
       *是否显示续费
       * </pre>
       */
      public int getShowRenew() {
        return showRenew_;
      }
      /**
       * <code>optional int32 showRenew = 13;</code>
       *
       * <pre>
       *是否显示续费
       * </pre>
       */
      public Builder setShowRenew(int value) {
        bitField0_ |= 0x00001000;
        showRenew_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 showRenew = 13;</code>
       *
       * <pre>
       *是否显示续费
       * </pre>
       */
      public Builder clearShowRenew() {
        bitField0_ = (bitField0_ & ~0x00001000);
        showRenew_ = 0;
        onChanged();
        return this;
      }

      // optional int32 isDaiKai = 14;
      private int isDaiKai_ ;
      /**
       * <code>optional int32 isDaiKai = 14;</code>
       *
       * <pre>
       *是否是代开房间
       * </pre>
       */
      public boolean hasIsDaiKai() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 isDaiKai = 14;</code>
       *
       * <pre>
       *是否是代开房间
       * </pre>
       */
      public int getIsDaiKai() {
        return isDaiKai_;
      }
      /**
       * <code>optional int32 isDaiKai = 14;</code>
       *
       * <pre>
       *是否是代开房间
       * </pre>
       */
      public Builder setIsDaiKai(int value) {
        bitField0_ |= 0x00002000;
        isDaiKai_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isDaiKai = 14;</code>
       *
       * <pre>
       *是否是代开房间
       * </pre>
       */
      public Builder clearIsDaiKai() {
        bitField0_ = (bitField0_ & ~0x00002000);
        isDaiKai_ = 0;
        onChanged();
        return this;
      }

      // optional int32 tableType = 15;
      private int tableType_ ;
      /**
       * <code>optional int32 tableType = 15;</code>
       *
       * <pre>
       *房间属性 0普通房间1军团2练习场
       * </pre>
       */
      public boolean hasTableType() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 tableType = 15;</code>
       *
       * <pre>
       *房间属性 0普通房间1军团2练习场
       * </pre>
       */
      public int getTableType() {
        return tableType_;
      }
      /**
       * <code>optional int32 tableType = 15;</code>
       *
       * <pre>
       *房间属性 0普通房间1军团2练习场
       * </pre>
       */
      public Builder setTableType(int value) {
        bitField0_ |= 0x00004000;
        tableType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tableType = 15;</code>
       *
       * <pre>
       *房间属性 0普通房间1军团2练习场
       * </pre>
       */
      public Builder clearTableType() {
        bitField0_ = (bitField0_ & ~0x00004000);
        tableType_ = 0;
        onChanged();
        return this;
      }

      // optional string groupProperty = 16;
      private java.lang.Object groupProperty_ = "";
      /**
       * <code>optional string groupProperty = 16;</code>
       *
       * <pre>
       *军团属性值
       * </pre>
       */
      public boolean hasGroupProperty() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string groupProperty = 16;</code>
       *
       * <pre>
       *军团属性值
       * </pre>
       */
      public java.lang.String getGroupProperty() {
        java.lang.Object ref = groupProperty_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          groupProperty_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string groupProperty = 16;</code>
       *
       * <pre>
       *军团属性值
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGroupPropertyBytes() {
        java.lang.Object ref = groupProperty_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          groupProperty_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string groupProperty = 16;</code>
       *
       * <pre>
       *军团属性值
       * </pre>
       */
      public Builder setGroupProperty(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        groupProperty_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string groupProperty = 16;</code>
       *
       * <pre>
       *军团属性值
       * </pre>
       */
      public Builder clearGroupProperty() {
        bitField0_ = (bitField0_ & ~0x00008000);
        groupProperty_ = getDefaultInstance().getGroupProperty();
        onChanged();
        return this;
      }
      /**
       * <code>optional string groupProperty = 16;</code>
       *
       * <pre>
       *军团属性值
       * </pre>
       */
      public Builder setGroupPropertyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        groupProperty_ = value;
        onChanged();
        return this;
      }

      // repeated int32 timeOut = 17;
      private java.util.List<java.lang.Integer> timeOut_ = java.util.Collections.emptyList();
      private void ensureTimeOutIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          timeOut_ = new java.util.ArrayList<java.lang.Integer>(timeOut_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 timeOut = 17;</code>
       *
       * <pre>
       * 托管时间
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getTimeOutList() {
        return java.util.Collections.unmodifiableList(timeOut_);
      }
      /**
       * <code>repeated int32 timeOut = 17;</code>
       *
       * <pre>
       * 托管时间
       * </pre>
       */
      public int getTimeOutCount() {
        return timeOut_.size();
      }
      /**
       * <code>repeated int32 timeOut = 17;</code>
       *
       * <pre>
       * 托管时间
       * </pre>
       */
      public int getTimeOut(int index) {
        return timeOut_.get(index);
      }
      /**
       * <code>repeated int32 timeOut = 17;</code>
       *
       * <pre>
       * 托管时间
       * </pre>
       */
      public Builder setTimeOut(
          int index, int value) {
        ensureTimeOutIsMutable();
        timeOut_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 timeOut = 17;</code>
       *
       * <pre>
       * 托管时间
       * </pre>
       */
      public Builder addTimeOut(int value) {
        ensureTimeOutIsMutable();
        timeOut_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 timeOut = 17;</code>
       *
       * <pre>
       * 托管时间
       * </pre>
       */
      public Builder addAllTimeOut(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTimeOutIsMutable();
        super.addAll(values, timeOut_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 timeOut = 17;</code>
       *
       * <pre>
       * 托管时间
       * </pre>
       */
      public Builder clearTimeOut() {
        timeOut_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // repeated int32 scoreCard = 18;
      private java.util.List<java.lang.Integer> scoreCard_ = java.util.Collections.emptyList();
      private void ensureScoreCardIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          scoreCard_ = new java.util.ArrayList<java.lang.Integer>(scoreCard_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 scoreCard = 18;</code>
       *
       * <pre>
       *本轮出的分牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getScoreCardList() {
        return java.util.Collections.unmodifiableList(scoreCard_);
      }
      /**
       * <code>repeated int32 scoreCard = 18;</code>
       *
       * <pre>
       *本轮出的分牌
       * </pre>
       */
      public int getScoreCardCount() {
        return scoreCard_.size();
      }
      /**
       * <code>repeated int32 scoreCard = 18;</code>
       *
       * <pre>
       *本轮出的分牌
       * </pre>
       */
      public int getScoreCard(int index) {
        return scoreCard_.get(index);
      }
      /**
       * <code>repeated int32 scoreCard = 18;</code>
       *
       * <pre>
       *本轮出的分牌
       * </pre>
       */
      public Builder setScoreCard(
          int index, int value) {
        ensureScoreCardIsMutable();
        scoreCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scoreCard = 18;</code>
       *
       * <pre>
       *本轮出的分牌
       * </pre>
       */
      public Builder addScoreCard(int value) {
        ensureScoreCardIsMutable();
        scoreCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scoreCard = 18;</code>
       *
       * <pre>
       *本轮出的分牌
       * </pre>
       */
      public Builder addAllScoreCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureScoreCardIsMutable();
        super.addAll(values, scoreCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scoreCard = 18;</code>
       *
       * <pre>
       *本轮出的分牌
       * </pre>
       */
      public Builder clearScoreCard() {
        scoreCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // repeated string extStr = 19;
      private com.google.protobuf.LazyStringList extStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExtStrIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          extStr_ = new com.google.protobuf.LazyStringArrayList(extStr_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated string extStr = 19;</code>
       *
       * <pre>
       * 扩展字符串
       * </pre>
       */
      public java.util.List<java.lang.String>
          getExtStrList() {
        return java.util.Collections.unmodifiableList(extStr_);
      }
      /**
       * <code>repeated string extStr = 19;</code>
       *
       * <pre>
       * 扩展字符串
       * </pre>
       */
      public int getExtStrCount() {
        return extStr_.size();
      }
      /**
       * <code>repeated string extStr = 19;</code>
       *
       * <pre>
       * 扩展字符串
       * </pre>
       */
      public java.lang.String getExtStr(int index) {
        return extStr_.get(index);
      }
      /**
       * <code>repeated string extStr = 19;</code>
       *
       * <pre>
       * 扩展字符串
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtStrBytes(int index) {
        return extStr_.getByteString(index);
      }
      /**
       * <code>repeated string extStr = 19;</code>
       *
       * <pre>
       * 扩展字符串
       * </pre>
       */
      public Builder setExtStr(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtStrIsMutable();
        extStr_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string extStr = 19;</code>
       *
       * <pre>
       * 扩展字符串
       * </pre>
       */
      public Builder addExtStr(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtStrIsMutable();
        extStr_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string extStr = 19;</code>
       *
       * <pre>
       * 扩展字符串
       * </pre>
       */
      public Builder addAllExtStr(
          java.lang.Iterable<java.lang.String> values) {
        ensureExtStrIsMutable();
        super.addAll(values, extStr_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string extStr = 19;</code>
       *
       * <pre>
       * 扩展字符串
       * </pre>
       */
      public Builder clearExtStr() {
        extStr_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string extStr = 19;</code>
       *
       * <pre>
       * 扩展字符串
       * </pre>
       */
      public Builder addExtStrBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtStrIsMutable();
        extStr_.add(value);
        onChanged();
        return this;
      }

      // optional int32 roundCardType = 20;
      private int roundCardType_ ;
      /**
       * <code>optional int32 roundCardType = 20;</code>
       *
       * <pre>
       *本轮出的牌型
       * </pre>
       */
      public boolean hasRoundCardType() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 roundCardType = 20;</code>
       *
       * <pre>
       *本轮出的牌型
       * </pre>
       */
      public int getRoundCardType() {
        return roundCardType_;
      }
      /**
       * <code>optional int32 roundCardType = 20;</code>
       *
       * <pre>
       *本轮出的牌型
       * </pre>
       */
      public Builder setRoundCardType(int value) {
        bitField0_ |= 0x00080000;
        roundCardType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 roundCardType = 20;</code>
       *
       * <pre>
       *本轮出的牌型
       * </pre>
       */
      public Builder clearRoundCardType() {
        bitField0_ = (bitField0_ & ~0x00080000);
        roundCardType_ = 0;
        onChanged();
        return this;
      }

      // optional string masterId = 21;
      private java.lang.Object masterId_ = "";
      /**
       * <code>optional string masterId = 21;</code>
       *
       * <pre>
       *房主id
       * </pre>
       */
      public boolean hasMasterId() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional string masterId = 21;</code>
       *
       * <pre>
       *房主id
       * </pre>
       */
      public java.lang.String getMasterId() {
        java.lang.Object ref = masterId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          masterId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string masterId = 21;</code>
       *
       * <pre>
       *房主id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMasterIdBytes() {
        java.lang.Object ref = masterId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          masterId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string masterId = 21;</code>
       *
       * <pre>
       *房主id
       * </pre>
       */
      public Builder setMasterId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
        masterId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string masterId = 21;</code>
       *
       * <pre>
       *房主id
       * </pre>
       */
      public Builder clearMasterId() {
        bitField0_ = (bitField0_ & ~0x00100000);
        masterId_ = getDefaultInstance().getMasterId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string masterId = 21;</code>
       *
       * <pre>
       *房主id
       * </pre>
       */
      public Builder setMasterIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00100000;
        masterId_ = value;
        onChanged();
        return this;
      }

      // optional int32 lastWinSeat = 22;
      private int lastWinSeat_ ;
      /**
       * <code>optional int32 lastWinSeat = 22;</code>
       *
       * <pre>
       *庄家座位号
       * </pre>
       */
      public boolean hasLastWinSeat() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 lastWinSeat = 22;</code>
       *
       * <pre>
       *庄家座位号
       * </pre>
       */
      public int getLastWinSeat() {
        return lastWinSeat_;
      }
      /**
       * <code>optional int32 lastWinSeat = 22;</code>
       *
       * <pre>
       *庄家座位号
       * </pre>
       */
      public Builder setLastWinSeat(int value) {
        bitField0_ |= 0x00200000;
        lastWinSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lastWinSeat = 22;</code>
       *
       * <pre>
       *庄家座位号
       * </pre>
       */
      public Builder clearLastWinSeat() {
        bitField0_ = (bitField0_ & ~0x00200000);
        lastWinSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int64 creatorId = 23;
      private long creatorId_ ;
      /**
       * <code>optional int64 creatorId = 23;</code>
       *
       * <pre>
       *创房者id
       * </pre>
       */
      public boolean hasCreatorId() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int64 creatorId = 23;</code>
       *
       * <pre>
       *创房者id
       * </pre>
       */
      public long getCreatorId() {
        return creatorId_;
      }
      /**
       * <code>optional int64 creatorId = 23;</code>
       *
       * <pre>
       *创房者id
       * </pre>
       */
      public Builder setCreatorId(long value) {
        bitField0_ |= 0x00400000;
        creatorId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 creatorId = 23;</code>
       *
       * <pre>
       *创房者id
       * </pre>
       */
      public Builder clearCreatorId() {
        bitField0_ = (bitField0_ & ~0x00400000);
        creatorId_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 dealDice = 24;
      private int dealDice_ ;
      /**
       * <code>optional int32 dealDice = 24;</code>
       *
       * <pre>
       *骰子点数
       * </pre>
       */
      public boolean hasDealDice() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 dealDice = 24;</code>
       *
       * <pre>
       *骰子点数
       * </pre>
       */
      public int getDealDice() {
        return dealDice_;
      }
      /**
       * <code>optional int32 dealDice = 24;</code>
       *
       * <pre>
       *骰子点数
       * </pre>
       */
      public Builder setDealDice(int value) {
        bitField0_ |= 0x00800000;
        dealDice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dealDice = 24;</code>
       *
       * <pre>
       *骰子点数
       * </pre>
       */
      public Builder clearDealDice() {
        bitField0_ = (bitField0_ & ~0x00800000);
        dealDice_ = 0;
        onChanged();
        return this;
      }

      // repeated string strExt = 25;
      private com.google.protobuf.LazyStringList strExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrExtIsMutable() {
        if (!((bitField0_ & 0x01000000) == 0x01000000)) {
          strExt_ = new com.google.protobuf.LazyStringArrayList(strExt_);
          bitField0_ |= 0x01000000;
         }
      }
      /**
       * <code>repeated string strExt = 25;</code>
       *
       * <pre>
       *字符串扩展
       * </pre>
       */
      public java.util.List<java.lang.String>
          getStrExtList() {
        return java.util.Collections.unmodifiableList(strExt_);
      }
      /**
       * <code>repeated string strExt = 25;</code>
       *
       * <pre>
       *字符串扩展
       * </pre>
       */
      public int getStrExtCount() {
        return strExt_.size();
      }
      /**
       * <code>repeated string strExt = 25;</code>
       *
       * <pre>
       *字符串扩展
       * </pre>
       */
      public java.lang.String getStrExt(int index) {
        return strExt_.get(index);
      }
      /**
       * <code>repeated string strExt = 25;</code>
       *
       * <pre>
       *字符串扩展
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStrExtBytes(int index) {
        return strExt_.getByteString(index);
      }
      /**
       * <code>repeated string strExt = 25;</code>
       *
       * <pre>
       *字符串扩展
       * </pre>
       */
      public Builder setStrExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrExtIsMutable();
        strExt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExt = 25;</code>
       *
       * <pre>
       *字符串扩展
       * </pre>
       */
      public Builder addStrExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrExtIsMutable();
        strExt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExt = 25;</code>
       *
       * <pre>
       *字符串扩展
       * </pre>
       */
      public Builder addAllStrExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrExtIsMutable();
        super.addAll(values, strExt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExt = 25;</code>
       *
       * <pre>
       *字符串扩展
       * </pre>
       */
      public Builder clearStrExt() {
        strExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x01000000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExt = 25;</code>
       *
       * <pre>
       *字符串扩展
       * </pre>
       */
      public Builder addStrExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrExtIsMutable();
        strExt_.add(value);
        onChanged();
        return this;
      }

      // repeated int64 creditConfig = 26;
      private java.util.List<java.lang.Long> creditConfig_ = java.util.Collections.emptyList();
      private void ensureCreditConfigIsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          creditConfig_ = new java.util.ArrayList<java.lang.Long>(creditConfig_);
          bitField0_ |= 0x02000000;
         }
      }
      /**
       * <code>repeated int64 creditConfig = 26;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getCreditConfigList() {
        return java.util.Collections.unmodifiableList(creditConfig_);
      }
      /**
       * <code>repeated int64 creditConfig = 26;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public int getCreditConfigCount() {
        return creditConfig_.size();
      }
      /**
       * <code>repeated int64 creditConfig = 26;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public long getCreditConfig(int index) {
        return creditConfig_.get(index);
      }
      /**
       * <code>repeated int64 creditConfig = 26;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder setCreditConfig(
          int index, long value) {
        ensureCreditConfigIsMutable();
        creditConfig_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creditConfig = 26;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder addCreditConfig(long value) {
        ensureCreditConfigIsMutable();
        creditConfig_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creditConfig = 26;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder addAllCreditConfig(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCreditConfigIsMutable();
        super.addAll(values, creditConfig_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creditConfig = 26;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder clearCreditConfig() {
        creditConfig_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        onChanged();
        return this;
      }

      // repeated int32 intParams = 27;
      private java.util.List<java.lang.Integer> intParams_ = java.util.Collections.emptyList();
      private void ensureIntParamsIsMutable() {
        if (!((bitField0_ & 0x04000000) == 0x04000000)) {
          intParams_ = new java.util.ArrayList<java.lang.Integer>(intParams_);
          bitField0_ |= 0x04000000;
         }
      }
      /**
       * <code>repeated int32 intParams = 27;</code>
       *
       * <pre>
       * 创房int参数列表
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIntParamsList() {
        return java.util.Collections.unmodifiableList(intParams_);
      }
      /**
       * <code>repeated int32 intParams = 27;</code>
       *
       * <pre>
       * 创房int参数列表
       * </pre>
       */
      public int getIntParamsCount() {
        return intParams_.size();
      }
      /**
       * <code>repeated int32 intParams = 27;</code>
       *
       * <pre>
       * 创房int参数列表
       * </pre>
       */
      public int getIntParams(int index) {
        return intParams_.get(index);
      }
      /**
       * <code>repeated int32 intParams = 27;</code>
       *
       * <pre>
       * 创房int参数列表
       * </pre>
       */
      public Builder setIntParams(
          int index, int value) {
        ensureIntParamsIsMutable();
        intParams_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 27;</code>
       *
       * <pre>
       * 创房int参数列表
       * </pre>
       */
      public Builder addIntParams(int value) {
        ensureIntParamsIsMutable();
        intParams_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 27;</code>
       *
       * <pre>
       * 创房int参数列表
       * </pre>
       */
      public Builder addAllIntParams(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntParamsIsMutable();
        super.addAll(values, intParams_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 27;</code>
       *
       * <pre>
       * 创房int参数列表
       * </pre>
       */
      public Builder clearIntParams() {
        intParams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x04000000);
        onChanged();
        return this;
      }

      // repeated string strParams = 28;
      private com.google.protobuf.LazyStringList strParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrParamsIsMutable() {
        if (!((bitField0_ & 0x08000000) == 0x08000000)) {
          strParams_ = new com.google.protobuf.LazyStringArrayList(strParams_);
          bitField0_ |= 0x08000000;
         }
      }
      /**
       * <code>repeated string strParams = 28;</code>
       *
       * <pre>
       * 创房str参数列表
       * </pre>
       */
      public java.util.List<java.lang.String>
          getStrParamsList() {
        return java.util.Collections.unmodifiableList(strParams_);
      }
      /**
       * <code>repeated string strParams = 28;</code>
       *
       * <pre>
       * 创房str参数列表
       * </pre>
       */
      public int getStrParamsCount() {
        return strParams_.size();
      }
      /**
       * <code>repeated string strParams = 28;</code>
       *
       * <pre>
       * 创房str参数列表
       * </pre>
       */
      public java.lang.String getStrParams(int index) {
        return strParams_.get(index);
      }
      /**
       * <code>repeated string strParams = 28;</code>
       *
       * <pre>
       * 创房str参数列表
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStrParamsBytes(int index) {
        return strParams_.getByteString(index);
      }
      /**
       * <code>repeated string strParams = 28;</code>
       *
       * <pre>
       * 创房str参数列表
       * </pre>
       */
      public Builder setStrParams(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrParamsIsMutable();
        strParams_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strParams = 28;</code>
       *
       * <pre>
       * 创房str参数列表
       * </pre>
       */
      public Builder addStrParams(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrParamsIsMutable();
        strParams_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strParams = 28;</code>
       *
       * <pre>
       * 创房str参数列表
       * </pre>
       */
      public Builder addAllStrParams(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrParamsIsMutable();
        super.addAll(values, strParams_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strParams = 28;</code>
       *
       * <pre>
       * 创房str参数列表
       * </pre>
       */
      public Builder clearStrParams() {
        strParams_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x08000000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strParams = 28;</code>
       *
       * <pre>
       * 创房str参数列表
       * </pre>
       */
      public Builder addStrParamsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrParamsIsMutable();
        strParams_.add(value);
        onChanged();
        return this;
      }

      // optional string roomName = 29;
      private java.lang.Object roomName_ = "";
      /**
       * <code>optional string roomName = 29;</code>
       *
       * <pre>
       * 包间名字
       * </pre>
       */
      public boolean hasRoomName() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional string roomName = 29;</code>
       *
       * <pre>
       * 包间名字
       * </pre>
       */
      public java.lang.String getRoomName() {
        java.lang.Object ref = roomName_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          roomName_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string roomName = 29;</code>
       *
       * <pre>
       * 包间名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRoomNameBytes() {
        java.lang.Object ref = roomName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          roomName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string roomName = 29;</code>
       *
       * <pre>
       * 包间名字
       * </pre>
       */
      public Builder setRoomName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x10000000;
        roomName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string roomName = 29;</code>
       *
       * <pre>
       * 包间名字
       * </pre>
       */
      public Builder clearRoomName() {
        bitField0_ = (bitField0_ & ~0x10000000);
        roomName_ = getDefaultInstance().getRoomName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string roomName = 29;</code>
       *
       * <pre>
       * 包间名字
       * </pre>
       */
      public Builder setRoomNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x10000000;
        roomName_ = value;
        onChanged();
        return this;
      }

      // repeated string generalExt = 30;
      private com.google.protobuf.LazyStringList generalExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureGeneralExtIsMutable() {
        if (!((bitField0_ & 0x20000000) == 0x20000000)) {
          generalExt_ = new com.google.protobuf.LazyStringArrayList(generalExt_);
          bitField0_ |= 0x20000000;
         }
      }
      /**
       * <code>repeated string generalExt = 30;</code>
       *
       * <pre>
       * 通用扩展
       * </pre>
       */
      public java.util.List<java.lang.String>
          getGeneralExtList() {
        return java.util.Collections.unmodifiableList(generalExt_);
      }
      /**
       * <code>repeated string generalExt = 30;</code>
       *
       * <pre>
       * 通用扩展
       * </pre>
       */
      public int getGeneralExtCount() {
        return generalExt_.size();
      }
      /**
       * <code>repeated string generalExt = 30;</code>
       *
       * <pre>
       * 通用扩展
       * </pre>
       */
      public java.lang.String getGeneralExt(int index) {
        return generalExt_.get(index);
      }
      /**
       * <code>repeated string generalExt = 30;</code>
       *
       * <pre>
       * 通用扩展
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGeneralExtBytes(int index) {
        return generalExt_.getByteString(index);
      }
      /**
       * <code>repeated string generalExt = 30;</code>
       *
       * <pre>
       * 通用扩展
       * </pre>
       */
      public Builder setGeneralExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGeneralExtIsMutable();
        generalExt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string generalExt = 30;</code>
       *
       * <pre>
       * 通用扩展
       * </pre>
       */
      public Builder addGeneralExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGeneralExtIsMutable();
        generalExt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string generalExt = 30;</code>
       *
       * <pre>
       * 通用扩展
       * </pre>
       */
      public Builder addAllGeneralExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureGeneralExtIsMutable();
        super.addAll(values, generalExt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string generalExt = 30;</code>
       *
       * <pre>
       * 通用扩展
       * </pre>
       */
      public Builder clearGeneralExt() {
        generalExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x20000000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string generalExt = 30;</code>
       *
       * <pre>
       * 通用扩展
       * </pre>
       */
      public Builder addGeneralExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureGeneralExtIsMutable();
        generalExt_.add(value);
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;
      private java.util.List<com.sy599.game.msg.serverPacket.TableRes.QiZi> qiPan_ =
        java.util.Collections.emptyList();
      private void ensureQiPanIsMutable() {
        if (!((bitField0_ & 0x40000000) == 0x40000000)) {
          qiPan_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.QiZi>(qiPan_);
          bitField0_ |= 0x40000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.QiZi, com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder, com.sy599.game.msg.serverPacket.TableRes.QiZiOrBuilder> qiPanBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.QiZi> getQiPanList() {
        if (qiPanBuilder_ == null) {
          return java.util.Collections.unmodifiableList(qiPan_);
        } else {
          return qiPanBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public int getQiPanCount() {
        if (qiPanBuilder_ == null) {
          return qiPan_.size();
        } else {
          return qiPanBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.QiZi getQiPan(int index) {
        if (qiPanBuilder_ == null) {
          return qiPan_.get(index);
        } else {
          return qiPanBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public Builder setQiPan(
          int index, com.sy599.game.msg.serverPacket.TableRes.QiZi value) {
        if (qiPanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQiPanIsMutable();
          qiPan_.set(index, value);
          onChanged();
        } else {
          qiPanBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public Builder setQiPan(
          int index, com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder builderForValue) {
        if (qiPanBuilder_ == null) {
          ensureQiPanIsMutable();
          qiPan_.set(index, builderForValue.build());
          onChanged();
        } else {
          qiPanBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public Builder addQiPan(com.sy599.game.msg.serverPacket.TableRes.QiZi value) {
        if (qiPanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQiPanIsMutable();
          qiPan_.add(value);
          onChanged();
        } else {
          qiPanBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public Builder addQiPan(
          int index, com.sy599.game.msg.serverPacket.TableRes.QiZi value) {
        if (qiPanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQiPanIsMutable();
          qiPan_.add(index, value);
          onChanged();
        } else {
          qiPanBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public Builder addQiPan(
          com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder builderForValue) {
        if (qiPanBuilder_ == null) {
          ensureQiPanIsMutable();
          qiPan_.add(builderForValue.build());
          onChanged();
        } else {
          qiPanBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public Builder addQiPan(
          int index, com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder builderForValue) {
        if (qiPanBuilder_ == null) {
          ensureQiPanIsMutable();
          qiPan_.add(index, builderForValue.build());
          onChanged();
        } else {
          qiPanBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public Builder addAllQiPan(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TableRes.QiZi> values) {
        if (qiPanBuilder_ == null) {
          ensureQiPanIsMutable();
          super.addAll(values, qiPan_);
          onChanged();
        } else {
          qiPanBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public Builder clearQiPan() {
        if (qiPanBuilder_ == null) {
          qiPan_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x40000000);
          onChanged();
        } else {
          qiPanBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public Builder removeQiPan(int index) {
        if (qiPanBuilder_ == null) {
          ensureQiPanIsMutable();
          qiPan_.remove(index);
          onChanged();
        } else {
          qiPanBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder getQiPanBuilder(
          int index) {
        return getQiPanFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.QiZiOrBuilder getQiPanOrBuilder(
          int index) {
        if (qiPanBuilder_ == null) {
          return qiPan_.get(index);  } else {
          return qiPanBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.QiZiOrBuilder> 
           getQiPanOrBuilderList() {
        if (qiPanBuilder_ != null) {
          return qiPanBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(qiPan_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder addQiPanBuilder() {
        return getQiPanFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TableRes.QiZi.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder addQiPanBuilder(
          int index) {
        return getQiPanFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TableRes.QiZi.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.QiZi qiPan = 31;</code>
       *
       * <pre>
       * 棋盘
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder> 
           getQiPanBuilderList() {
        return getQiPanFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.QiZi, com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder, com.sy599.game.msg.serverPacket.TableRes.QiZiOrBuilder> 
          getQiPanFieldBuilder() {
        if (qiPanBuilder_ == null) {
          qiPanBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TableRes.QiZi, com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder, com.sy599.game.msg.serverPacket.TableRes.QiZiOrBuilder>(
                  qiPan_,
                  ((bitField0_ & 0x40000000) == 0x40000000),
                  getParentForChildren(),
                  isClean());
          qiPan_ = null;
        }
        return qiPanBuilder_;
      }

      // optional string goldMsg = 32;
      private java.lang.Object goldMsg_ = "";
      /**
       * <code>optional string goldMsg = 32;</code>
       *
       * <pre>
       * 金币场信息
       * </pre>
       */
      public boolean hasGoldMsg() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional string goldMsg = 32;</code>
       *
       * <pre>
       * 金币场信息
       * </pre>
       */
      public java.lang.String getGoldMsg() {
        java.lang.Object ref = goldMsg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          goldMsg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string goldMsg = 32;</code>
       *
       * <pre>
       * 金币场信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGoldMsgBytes() {
        java.lang.Object ref = goldMsg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          goldMsg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string goldMsg = 32;</code>
       *
       * <pre>
       * 金币场信息
       * </pre>
       */
      public Builder setGoldMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x80000000;
        goldMsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string goldMsg = 32;</code>
       *
       * <pre>
       * 金币场信息
       * </pre>
       */
      public Builder clearGoldMsg() {
        bitField0_ = (bitField0_ & ~0x80000000);
        goldMsg_ = getDefaultInstance().getGoldMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string goldMsg = 32;</code>
       *
       * <pre>
       * 金币场信息
       * </pre>
       */
      public Builder setGoldMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x80000000;
        goldMsg_ = value;
        onChanged();
        return this;
      }

      // optional int64 goldRoomConfigId = 33;
      private long goldRoomConfigId_ ;
      /**
       * <code>optional int64 goldRoomConfigId = 33;</code>
       *
       * <pre>
       * 金币场配置id
       * </pre>
       */
      public boolean hasGoldRoomConfigId() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int64 goldRoomConfigId = 33;</code>
       *
       * <pre>
       * 金币场配置id
       * </pre>
       */
      public long getGoldRoomConfigId() {
        return goldRoomConfigId_;
      }
      /**
       * <code>optional int64 goldRoomConfigId = 33;</code>
       *
       * <pre>
       * 金币场配置id
       * </pre>
       */
      public Builder setGoldRoomConfigId(long value) {
        bitField1_ |= 0x00000001;
        goldRoomConfigId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 goldRoomConfigId = 33;</code>
       *
       * <pre>
       * 金币场配置id
       * </pre>
       */
      public Builder clearGoldRoomConfigId() {
        bitField1_ = (bitField1_ & ~0x00000001);
        goldRoomConfigId_ = 0L;
        onChanged();
        return this;
      }

      // optional string groupTableGoldMsg = 34;
      private java.lang.Object groupTableGoldMsg_ = "";
      /**
       * <code>optional string groupTableGoldMsg = 34;</code>
       *
       * <pre>
       * 亲友圈金币房信息
       * </pre>
       */
      public boolean hasGroupTableGoldMsg() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string groupTableGoldMsg = 34;</code>
       *
       * <pre>
       * 亲友圈金币房信息
       * </pre>
       */
      public java.lang.String getGroupTableGoldMsg() {
        java.lang.Object ref = groupTableGoldMsg_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          groupTableGoldMsg_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string groupTableGoldMsg = 34;</code>
       *
       * <pre>
       * 亲友圈金币房信息
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGroupTableGoldMsgBytes() {
        java.lang.Object ref = groupTableGoldMsg_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          groupTableGoldMsg_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string groupTableGoldMsg = 34;</code>
       *
       * <pre>
       * 亲友圈金币房信息
       * </pre>
       */
      public Builder setGroupTableGoldMsg(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000002;
        groupTableGoldMsg_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string groupTableGoldMsg = 34;</code>
       *
       * <pre>
       * 亲友圈金币房信息
       * </pre>
       */
      public Builder clearGroupTableGoldMsg() {
        bitField1_ = (bitField1_ & ~0x00000002);
        groupTableGoldMsg_ = getDefaultInstance().getGroupTableGoldMsg();
        onChanged();
        return this;
      }
      /**
       * <code>optional string groupTableGoldMsg = 34;</code>
       *
       * <pre>
       * 亲友圈金币房信息
       * </pre>
       */
      public Builder setGroupTableGoldMsgBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000002;
        groupTableGoldMsg_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.CreateTableRes)
    }

    static {
      defaultInstance = new CreateTableRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.CreateTableRes)
  }

  public interface JoinTableResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;
    /**
     * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
     *
     * <pre>
     *加入的玩家信息
     * </pre>
     */
    boolean hasPlayer();
    /**
     * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
     *
     * <pre>
     *加入的玩家信息
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes getPlayer();
    /**
     * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
     *
     * <pre>
     *加入的玩家信息
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder getPlayerOrBuilder();

    // optional int32 nextSeat = 2;
    /**
     * <code>optional int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    boolean hasNextSeat();
    /**
     * <code>optional int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    int getNextSeat();

    // required int32 wanfa = 3;
    /**
     * <code>required int32 wanfa = 3;</code>
     */
    boolean hasWanfa();
    /**
     * <code>required int32 wanfa = 3;</code>
     */
    int getWanfa();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.JoinTableRes}
   *
   * <pre>
   *加入牌桌
   * </pre>
   */
  public static final class JoinTableRes extends
      com.google.protobuf.GeneratedMessage
      implements JoinTableResOrBuilder {
    // Use JoinTableRes.newBuilder() to construct.
    private JoinTableRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private JoinTableRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final JoinTableRes defaultInstance;
    public static JoinTableRes getDefaultInstance() {
      return defaultInstance;
    }

    public JoinTableRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private JoinTableRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder subBuilder = null;
              if (((bitField0_ & 0x00000001) == 0x00000001)) {
                subBuilder = player_.toBuilder();
              }
              player_ = input.readMessage(com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(player_);
                player_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000001;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              nextSeat_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              wanfa_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_JoinTableRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_JoinTableRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.JoinTableRes.class, com.sy599.game.msg.serverPacket.TableRes.JoinTableRes.Builder.class);
    }

    public static com.google.protobuf.Parser<JoinTableRes> PARSER =
        new com.google.protobuf.AbstractParser<JoinTableRes>() {
      public JoinTableRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new JoinTableRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<JoinTableRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;
    public static final int PLAYER_FIELD_NUMBER = 1;
    private com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes player_;
    /**
     * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
     *
     * <pre>
     *加入的玩家信息
     * </pre>
     */
    public boolean hasPlayer() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
     *
     * <pre>
     *加入的玩家信息
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes getPlayer() {
      return player_;
    }
    /**
     * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
     *
     * <pre>
     *加入的玩家信息
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder getPlayerOrBuilder() {
      return player_;
    }

    // optional int32 nextSeat = 2;
    public static final int NEXTSEAT_FIELD_NUMBER = 2;
    private int nextSeat_;
    /**
     * <code>optional int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    public boolean hasNextSeat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    public int getNextSeat() {
      return nextSeat_;
    }

    // required int32 wanfa = 3;
    public static final int WANFA_FIELD_NUMBER = 3;
    private int wanfa_;
    /**
     * <code>required int32 wanfa = 3;</code>
     */
    public boolean hasWanfa() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 wanfa = 3;</code>
     */
    public int getWanfa() {
      return wanfa_;
    }

    private void initFields() {
      player_ = com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.getDefaultInstance();
      nextSeat_ = 0;
      wanfa_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasPlayer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasWanfa()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!getPlayer().isInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, nextSeat_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, wanfa_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, player_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nextSeat_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, wanfa_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.JoinTableRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.JoinTableRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.JoinTableRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.JoinTableRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.JoinTableRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.JoinTableRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.JoinTableRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.JoinTableRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.JoinTableRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.JoinTableRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.JoinTableRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.JoinTableRes}
     *
     * <pre>
     *加入牌桌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.JoinTableResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_JoinTableRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_JoinTableRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.JoinTableRes.class, com.sy599.game.msg.serverPacket.TableRes.JoinTableRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.JoinTableRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPlayerFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (playerBuilder_ == null) {
          player_ = com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.getDefaultInstance();
        } else {
          playerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        nextSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        wanfa_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_JoinTableRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.JoinTableRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.JoinTableRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.JoinTableRes build() {
        com.sy599.game.msg.serverPacket.TableRes.JoinTableRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.JoinTableRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.JoinTableRes result = new com.sy599.game.msg.serverPacket.TableRes.JoinTableRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        if (playerBuilder_ == null) {
          result.player_ = player_;
        } else {
          result.player_ = playerBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.nextSeat_ = nextSeat_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.wanfa_ = wanfa_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.JoinTableRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.JoinTableRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.JoinTableRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.JoinTableRes.getDefaultInstance()) return this;
        if (other.hasPlayer()) {
          mergePlayer(other.getPlayer());
        }
        if (other.hasNextSeat()) {
          setNextSeat(other.getNextSeat());
        }
        if (other.hasWanfa()) {
          setWanfa(other.getWanfa());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasPlayer()) {
          
          return false;
        }
        if (!hasWanfa()) {
          
          return false;
        }
        if (!getPlayer().isInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.JoinTableRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.JoinTableRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;
      private com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes player_ = com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder> playerBuilder_;
      /**
       * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
       *
       * <pre>
       *加入的玩家信息
       * </pre>
       */
      public boolean hasPlayer() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
       *
       * <pre>
       *加入的玩家信息
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes getPlayer() {
        if (playerBuilder_ == null) {
          return player_;
        } else {
          return playerBuilder_.getMessage();
        }
      }
      /**
       * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
       *
       * <pre>
       *加入的玩家信息
       * </pre>
       */
      public Builder setPlayer(com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes value) {
        if (playerBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          player_ = value;
          onChanged();
        } else {
          playerBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
       *
       * <pre>
       *加入的玩家信息
       * </pre>
       */
      public Builder setPlayer(
          com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder builderForValue) {
        if (playerBuilder_ == null) {
          player_ = builderForValue.build();
          onChanged();
        } else {
          playerBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
       *
       * <pre>
       *加入的玩家信息
       * </pre>
       */
      public Builder mergePlayer(com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes value) {
        if (playerBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001) &&
              player_ != com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.getDefaultInstance()) {
            player_ =
              com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.newBuilder(player_).mergeFrom(value).buildPartial();
          } else {
            player_ = value;
          }
          onChanged();
        } else {
          playerBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000001;
        return this;
      }
      /**
       * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
       *
       * <pre>
       *加入的玩家信息
       * </pre>
       */
      public Builder clearPlayer() {
        if (playerBuilder_ == null) {
          player_ = com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.getDefaultInstance();
          onChanged();
        } else {
          playerBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }
      /**
       * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
       *
       * <pre>
       *加入的玩家信息
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder getPlayerBuilder() {
        bitField0_ |= 0x00000001;
        onChanged();
        return getPlayerFieldBuilder().getBuilder();
      }
      /**
       * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
       *
       * <pre>
       *加入的玩家信息
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder getPlayerOrBuilder() {
        if (playerBuilder_ != null) {
          return playerBuilder_.getMessageOrBuilder();
        } else {
          return player_;
        }
      }
      /**
       * <code>required .com.sy599.game.msg.serverPacket.PlayerInTableRes player = 1;</code>
       *
       * <pre>
       *加入的玩家信息
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder> 
          getPlayerFieldBuilder() {
        if (playerBuilder_ == null) {
          playerBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder>(
                  player_,
                  getParentForChildren(),
                  isClean());
          player_ = null;
        }
        return playerBuilder_;
      }

      // optional int32 nextSeat = 2;
      private int nextSeat_ ;
      /**
       * <code>optional int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public boolean hasNextSeat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public int getNextSeat() {
        return nextSeat_;
      }
      /**
       * <code>optional int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public Builder setNextSeat(int value) {
        bitField0_ |= 0x00000002;
        nextSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public Builder clearNextSeat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nextSeat_ = 0;
        onChanged();
        return this;
      }

      // required int32 wanfa = 3;
      private int wanfa_ ;
      /**
       * <code>required int32 wanfa = 3;</code>
       */
      public boolean hasWanfa() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 wanfa = 3;</code>
       */
      public int getWanfa() {
        return wanfa_;
      }
      /**
       * <code>required int32 wanfa = 3;</code>
       */
      public Builder setWanfa(int value) {
        bitField0_ |= 0x00000004;
        wanfa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 wanfa = 3;</code>
       */
      public Builder clearWanfa() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wanfa_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.JoinTableRes)
    }

    static {
      defaultInstance = new JoinTableRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.JoinTableRes)
  }

  public interface PlayerInTableResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required string userId = 1;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // required string name = 2;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 seat = 3;
    /**
     * <code>required int32 seat = 3;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>required int32 seat = 3;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    int getSeat();

    // required int32 sex = 4;
    /**
     * <code>required int32 sex = 4;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    boolean hasSex();
    /**
     * <code>required int32 sex = 4;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    int getSex();

    // required string icon = 5;
    /**
     * <code>required string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    boolean hasIcon();
    /**
     * <code>required string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    java.lang.String getIcon();
    /**
     * <code>required string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    // required int32 point = 6;
    /**
     * <code>required int32 point = 6;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    boolean hasPoint();
    /**
     * <code>required int32 point = 6;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    int getPoint();

    // repeated int32 handCardIds = 7;
    /**
     * <code>repeated int32 handCardIds = 7;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardIdsList();
    /**
     * <code>repeated int32 handCardIds = 7;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    int getHandCardIdsCount();
    /**
     * <code>repeated int32 handCardIds = 7;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    int getHandCardIds(int index);

    // repeated int32 outCardIds = 8;
    /**
     * <code>repeated int32 outCardIds = 8;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getOutCardIdsList();
    /**
     * <code>repeated int32 outCardIds = 8;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    int getOutCardIdsCount();
    /**
     * <code>repeated int32 outCardIds = 8;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    int getOutCardIds(int index);

    // optional int32 status = 9;
    /**
     * <code>optional int32 status = 9;</code>
     *
     * <pre>
     *状态 1准备 2离线
     * </pre>
     */
    boolean hasStatus();
    /**
     * <code>optional int32 status = 9;</code>
     *
     * <pre>
     *状态 1准备 2离线
     * </pre>
     */
    int getStatus();

    // repeated int32 recover = 10;
    /**
     * <code>repeated int32 recover = 10;</code>
     *
     * <pre>
     *牌局恢复
     * </pre>
     */
    java.util.List<java.lang.Integer> getRecoverList();
    /**
     * <code>repeated int32 recover = 10;</code>
     *
     * <pre>
     *牌局恢复
     * </pre>
     */
    int getRecoverCount();
    /**
     * <code>repeated int32 recover = 10;</code>
     *
     * <pre>
     *牌局恢复
     * </pre>
     */
    int getRecover(int index);

    // optional string ip = 11;
    /**
     * <code>optional string ip = 11;</code>
     */
    boolean hasIp();
    /**
     * <code>optional string ip = 11;</code>
     */
    java.lang.String getIp();
    /**
     * <code>optional string ip = 11;</code>
     */
    com.google.protobuf.ByteString
        getIpBytes();

    // repeated int32 outedIds = 12;
    /**
     * <code>repeated int32 outedIds = 12;</code>
     *
     * <pre>
     *麻将已经出了的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getOutedIdsList();
    /**
     * <code>repeated int32 outedIds = 12;</code>
     *
     * <pre>
     *麻将已经出了的牌
     * </pre>
     */
    int getOutedIdsCount();
    /**
     * <code>repeated int32 outedIds = 12;</code>
     *
     * <pre>
     *麻将已经出了的牌
     * </pre>
     */
    int getOutedIds(int index);

    // repeated int32 moldIds = 13;
    /**
     * <code>repeated int32 moldIds = 13;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getMoldIdsList();
    /**
     * <code>repeated int32 moldIds = 13;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    int getMoldIdsCount();
    /**
     * <code>repeated int32 moldIds = 13;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    int getMoldIds(int index);

    // repeated int32 angangIds = 14;
    /**
     * <code>repeated int32 angangIds = 14;</code>
     *
     * <pre>
     *暗杠的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getAngangIdsList();
    /**
     * <code>repeated int32 angangIds = 14;</code>
     *
     * <pre>
     *暗杠的牌
     * </pre>
     */
    int getAngangIdsCount();
    /**
     * <code>repeated int32 angangIds = 14;</code>
     *
     * <pre>
     *暗杠的牌
     * </pre>
     */
    int getAngangIds(int index);

    // repeated int32 ext = 15;
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *附加参数
     * </pre>
     */
    java.util.List<java.lang.Integer> getExtList();
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *附加参数
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *附加参数
     * </pre>
     */
    int getExt(int index);

    // optional int32 gameSiteRank = 16;
    /**
     * <code>optional int32 gameSiteRank = 16;</code>
     *
     * <pre>
     * 比赛场排名
     * </pre>
     */
    boolean hasGameSiteRank();
    /**
     * <code>optional int32 gameSiteRank = 16;</code>
     *
     * <pre>
     * 比赛场排名
     * </pre>
     */
    int getGameSiteRank();

    // repeated int32 matchExt = 17;
    /**
     * <code>repeated int32 matchExt = 17;</code>
     *
     * <pre>
     * 比赛场附加参数
     * </pre>
     */
    java.util.List<java.lang.Integer> getMatchExtList();
    /**
     * <code>repeated int32 matchExt = 17;</code>
     *
     * <pre>
     * 比赛场附加参数
     * </pre>
     */
    int getMatchExtCount();
    /**
     * <code>repeated int32 matchExt = 17;</code>
     *
     * <pre>
     * 比赛场附加参数
     * </pre>
     */
    int getMatchExt(int index);

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> 
        getMoldCardsList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMoldCards(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    int getMoldCardsCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMoldCardsOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMoldCardsOrBuilder(
        int index);

    // optional string gps = 19;
    /**
     * <code>optional string gps = 19;</code>
     *
     * <pre>
     *经纬度
     * </pre>
     */
    boolean hasGps();
    /**
     * <code>optional string gps = 19;</code>
     *
     * <pre>
     *经纬度
     * </pre>
     */
    java.lang.String getGps();
    /**
     * <code>optional string gps = 19;</code>
     *
     * <pre>
     *经纬度
     * </pre>
     */
    com.google.protobuf.ByteString
        getGpsBytes();

    // optional int32 userSate = 20;
    /**
     * <code>optional int32 userSate = 20;</code>
     *
     * <pre>
     *玩家状态：0禁止登陆，1正常，2红名
     * </pre>
     */
    boolean hasUserSate();
    /**
     * <code>optional int32 userSate = 20;</code>
     *
     * <pre>
     *玩家状态：0禁止登陆，1正常，2红名
     * </pre>
     */
    int getUserSate();

    // optional int32 designation = 21;
    /**
     * <code>optional int32 designation = 21;</code>
     *
     * <pre>
     *玩家称号：0草民,1县令,2知府,3尚书,4宰相,5皇帝
     * </pre>
     */
    boolean hasDesignation();
    /**
     * <code>optional int32 designation = 21;</code>
     *
     * <pre>
     *玩家称号：0草民,1县令,2知府,3尚书,4宰相,5皇帝
     * </pre>
     */
    int getDesignation();

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
     *
     * <pre>
     *甘肃麻将胡过了的牌
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> 
        getHuCardsList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
     *
     * <pre>
     *甘肃麻将胡过了的牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getHuCards(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
     *
     * <pre>
     *甘肃麻将胡过了的牌
     * </pre>
     */
    int getHuCardsCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
     *
     * <pre>
     *甘肃麻将胡过了的牌
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getHuCardsOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
     *
     * <pre>
     *甘肃麻将胡过了的牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getHuCardsOrBuilder(
        int index);

    // optional string gold = 23;
    /**
     * <code>optional string gold = 23;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional string gold = 23;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    java.lang.String getGold();
    /**
     * <code>optional string gold = 23;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    com.google.protobuf.ByteString
        getGoldBytes();

    // optional int64 credit = 24;
    /**
     * <code>optional int64 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    boolean hasCredit();
    /**
     * <code>optional int64 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    long getCredit();

    // repeated int32 scoreCard = 25;
    /**
     * <code>repeated int32 scoreCard = 25;</code>
     *
     * <pre>
     *玩家身上捡的分牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getScoreCardList();
    /**
     * <code>repeated int32 scoreCard = 25;</code>
     *
     * <pre>
     *玩家身上捡的分牌
     * </pre>
     */
    int getScoreCardCount();
    /**
     * <code>repeated int32 scoreCard = 25;</code>
     *
     * <pre>
     *玩家身上捡的分牌
     * </pre>
     */
    int getScoreCard(int index);

    // repeated int32 intExts = 26;
    /**
     * <code>repeated int32 intExts = 26;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    java.util.List<java.lang.Integer> getIntExtsList();
    /**
     * <code>repeated int32 intExts = 26;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    int getIntExtsCount();
    /**
     * <code>repeated int32 intExts = 26;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    int getIntExts(int index);

    // repeated string strExts = 27;
    /**
     * <code>repeated string strExts = 27;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    java.util.List<java.lang.String>
    getStrExtsList();
    /**
     * <code>repeated string strExts = 27;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    int getStrExtsCount();
    /**
     * <code>repeated string strExts = 27;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    java.lang.String getStrExts(int index);
    /**
     * <code>repeated string strExts = 27;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    com.google.protobuf.ByteString
        getStrExtsBytes(int index);

    // optional int32 shiZhongCard = 28;
    /**
     * <code>optional int32 shiZhongCard = 28;</code>
     *
     * <pre>
     *起手示众牌
     * </pre>
     */
    boolean hasShiZhongCard();
    /**
     * <code>optional int32 shiZhongCard = 28;</code>
     *
     * <pre>
     *起手示众牌
     * </pre>
     */
    int getShiZhongCard();

    // optional int64 coin = 29;
    /**
     * <code>optional int64 coin = 29;</code>
     *
     * <pre>
     * 新的金币
     * </pre>
     */
    boolean hasCoin();
    /**
     * <code>optional int64 coin = 29;</code>
     *
     * <pre>
     * 新的金币
     * </pre>
     */
    long getCoin();

    // optional int32 frameId = 30;
    /**
     * <code>optional int32 frameId = 30;</code>
     *
     * <pre>
     * 头像框id
     * </pre>
     */
    boolean hasFrameId();
    /**
     * <code>optional int32 frameId = 30;</code>
     *
     * <pre>
     * 头像框id
     * </pre>
     */
    int getFrameId();

    // optional int64 score = 31;
    /**
     * <code>optional int64 score = 31;</code>
     *
     * <pre>
     * 棋分
     * </pre>
     */
    boolean hasScore();
    /**
     * <code>optional int64 score = 31;</code>
     *
     * <pre>
     * 棋分
     * </pre>
     */
    long getScore();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.PlayerInTableRes}
   *
   * <pre>
   *牌桌上玩家信息
   * </pre>
   */
  public static final class PlayerInTableRes extends
      com.google.protobuf.GeneratedMessage
      implements PlayerInTableResOrBuilder {
    // Use PlayerInTableRes.newBuilder() to construct.
    private PlayerInTableRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerInTableRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerInTableRes defaultInstance;
    public static PlayerInTableRes getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerInTableRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerInTableRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              seat_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              sex_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              icon_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              point_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                handCardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              handCardIds_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                handCardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                outCardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              outCardIds_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                outCardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                outCardIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000040;
              status_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                recover_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              recover_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                recover_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                recover_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 90: {
              bitField0_ |= 0x00000080;
              ip_ = input.readBytes();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                outedIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              outedIds_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                outedIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                outedIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                moldIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              moldIds_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                moldIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                moldIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                angangIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              angangIds_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                angangIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                angangIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                ext_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              ext_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                ext_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                ext_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              bitField0_ |= 0x00000100;
              gameSiteRank_ = input.readInt32();
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                matchExt_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              matchExt_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                matchExt_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                matchExt_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                moldCards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>();
                mutable_bitField0_ |= 0x00020000;
              }
              moldCards_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.PARSER, extensionRegistry));
              break;
            }
            case 154: {
              bitField0_ |= 0x00000200;
              gps_ = input.readBytes();
              break;
            }
            case 160: {
              bitField0_ |= 0x00000400;
              userSate_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00000800;
              designation_ = input.readInt32();
              break;
            }
            case 178: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                huCards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>();
                mutable_bitField0_ |= 0x00200000;
              }
              huCards_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.PARSER, extensionRegistry));
              break;
            }
            case 186: {
              bitField0_ |= 0x00001000;
              gold_ = input.readBytes();
              break;
            }
            case 192: {
              bitField0_ |= 0x00002000;
              credit_ = input.readInt64();
              break;
            }
            case 200: {
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
                scoreCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x01000000;
              }
              scoreCard_.add(input.readInt32());
              break;
            }
            case 202: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000) && input.getBytesUntilLimit() > 0) {
                scoreCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x01000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                scoreCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 208: {
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                intExts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x02000000;
              }
              intExts_.add(input.readInt32());
              break;
            }
            case 210: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000) && input.getBytesUntilLimit() > 0) {
                intExts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x02000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                intExts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 218: {
              if (!((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
                strExts_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x04000000;
              }
              strExts_.add(input.readBytes());
              break;
            }
            case 224: {
              bitField0_ |= 0x00004000;
              shiZhongCard_ = input.readInt32();
              break;
            }
            case 232: {
              bitField0_ |= 0x00008000;
              coin_ = input.readInt64();
              break;
            }
            case 240: {
              bitField0_ |= 0x00010000;
              frameId_ = input.readInt32();
              break;
            }
            case 248: {
              bitField0_ |= 0x00020000;
              score_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          handCardIds_ = java.util.Collections.unmodifiableList(handCardIds_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          outCardIds_ = java.util.Collections.unmodifiableList(outCardIds_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          recover_ = java.util.Collections.unmodifiableList(recover_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          outedIds_ = java.util.Collections.unmodifiableList(outedIds_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          moldIds_ = java.util.Collections.unmodifiableList(moldIds_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          angangIds_ = java.util.Collections.unmodifiableList(angangIds_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          ext_ = java.util.Collections.unmodifiableList(ext_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          matchExt_ = java.util.Collections.unmodifiableList(matchExt_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          moldCards_ = java.util.Collections.unmodifiableList(moldCards_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          huCards_ = java.util.Collections.unmodifiableList(huCards_);
        }
        if (((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
          scoreCard_ = java.util.Collections.unmodifiableList(scoreCard_);
        }
        if (((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
          intExts_ = java.util.Collections.unmodifiableList(intExts_);
        }
        if (((mutable_bitField0_ & 0x04000000) == 0x04000000)) {
          strExts_ = new com.google.protobuf.UnmodifiableLazyStringList(strExts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_PlayerInTableRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_PlayerInTableRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.class, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerInTableRes> PARSER =
        new com.google.protobuf.AbstractParser<PlayerInTableRes>() {
      public PlayerInTableRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerInTableRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerInTableRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string userId = 1;</code>
     *
     * <pre>
     *用户id
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 seat = 3;
    public static final int SEAT_FIELD_NUMBER = 3;
    private int seat_;
    /**
     * <code>required int32 seat = 3;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 seat = 3;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // required int32 sex = 4;
    public static final int SEX_FIELD_NUMBER = 4;
    private int sex_;
    /**
     * <code>required int32 sex = 4;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 sex = 4;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    public int getSex() {
      return sex_;
    }

    // required string icon = 5;
    public static final int ICON_FIELD_NUMBER = 5;
    private java.lang.Object icon_;
    /**
     * <code>required string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    public boolean hasIcon() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          icon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 point = 6;
    public static final int POINT_FIELD_NUMBER = 6;
    private int point_;
    /**
     * <code>required int32 point = 6;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public boolean hasPoint() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 point = 6;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public int getPoint() {
      return point_;
    }

    // repeated int32 handCardIds = 7;
    public static final int HANDCARDIDS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> handCardIds_;
    /**
     * <code>repeated int32 handCardIds = 7;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardIdsList() {
      return handCardIds_;
    }
    /**
     * <code>repeated int32 handCardIds = 7;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public int getHandCardIdsCount() {
      return handCardIds_.size();
    }
    /**
     * <code>repeated int32 handCardIds = 7;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public int getHandCardIds(int index) {
      return handCardIds_.get(index);
    }

    // repeated int32 outCardIds = 8;
    public static final int OUTCARDIDS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> outCardIds_;
    /**
     * <code>repeated int32 outCardIds = 8;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOutCardIdsList() {
      return outCardIds_;
    }
    /**
     * <code>repeated int32 outCardIds = 8;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    public int getOutCardIdsCount() {
      return outCardIds_.size();
    }
    /**
     * <code>repeated int32 outCardIds = 8;</code>
     *
     * <pre>
     *出牌
     * </pre>
     */
    public int getOutCardIds(int index) {
      return outCardIds_.get(index);
    }

    // optional int32 status = 9;
    public static final int STATUS_FIELD_NUMBER = 9;
    private int status_;
    /**
     * <code>optional int32 status = 9;</code>
     *
     * <pre>
     *状态 1准备 2离线
     * </pre>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 status = 9;</code>
     *
     * <pre>
     *状态 1准备 2离线
     * </pre>
     */
    public int getStatus() {
      return status_;
    }

    // repeated int32 recover = 10;
    public static final int RECOVER_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> recover_;
    /**
     * <code>repeated int32 recover = 10;</code>
     *
     * <pre>
     *牌局恢复
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRecoverList() {
      return recover_;
    }
    /**
     * <code>repeated int32 recover = 10;</code>
     *
     * <pre>
     *牌局恢复
     * </pre>
     */
    public int getRecoverCount() {
      return recover_.size();
    }
    /**
     * <code>repeated int32 recover = 10;</code>
     *
     * <pre>
     *牌局恢复
     * </pre>
     */
    public int getRecover(int index) {
      return recover_.get(index);
    }

    // optional string ip = 11;
    public static final int IP_FIELD_NUMBER = 11;
    private java.lang.Object ip_;
    /**
     * <code>optional string ip = 11;</code>
     */
    public boolean hasIp() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string ip = 11;</code>
     */
    public java.lang.String getIp() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ip_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ip = 11;</code>
     */
    public com.google.protobuf.ByteString
        getIpBytes() {
      java.lang.Object ref = ip_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ip_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 outedIds = 12;
    public static final int OUTEDIDS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> outedIds_;
    /**
     * <code>repeated int32 outedIds = 12;</code>
     *
     * <pre>
     *麻将已经出了的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOutedIdsList() {
      return outedIds_;
    }
    /**
     * <code>repeated int32 outedIds = 12;</code>
     *
     * <pre>
     *麻将已经出了的牌
     * </pre>
     */
    public int getOutedIdsCount() {
      return outedIds_.size();
    }
    /**
     * <code>repeated int32 outedIds = 12;</code>
     *
     * <pre>
     *麻将已经出了的牌
     * </pre>
     */
    public int getOutedIds(int index) {
      return outedIds_.get(index);
    }

    // repeated int32 moldIds = 13;
    public static final int MOLDIDS_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> moldIds_;
    /**
     * <code>repeated int32 moldIds = 13;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMoldIdsList() {
      return moldIds_;
    }
    /**
     * <code>repeated int32 moldIds = 13;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    public int getMoldIdsCount() {
      return moldIds_.size();
    }
    /**
     * <code>repeated int32 moldIds = 13;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    public int getMoldIds(int index) {
      return moldIds_.get(index);
    }

    // repeated int32 angangIds = 14;
    public static final int ANGANGIDS_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> angangIds_;
    /**
     * <code>repeated int32 angangIds = 14;</code>
     *
     * <pre>
     *暗杠的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getAngangIdsList() {
      return angangIds_;
    }
    /**
     * <code>repeated int32 angangIds = 14;</code>
     *
     * <pre>
     *暗杠的牌
     * </pre>
     */
    public int getAngangIdsCount() {
      return angangIds_.size();
    }
    /**
     * <code>repeated int32 angangIds = 14;</code>
     *
     * <pre>
     *暗杠的牌
     * </pre>
     */
    public int getAngangIds(int index) {
      return angangIds_.get(index);
    }

    // repeated int32 ext = 15;
    public static final int EXT_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> ext_;
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *附加参数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *附加参数
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *附加参数
     * </pre>
     */
    public int getExt(int index) {
      return ext_.get(index);
    }

    // optional int32 gameSiteRank = 16;
    public static final int GAMESITERANK_FIELD_NUMBER = 16;
    private int gameSiteRank_;
    /**
     * <code>optional int32 gameSiteRank = 16;</code>
     *
     * <pre>
     * 比赛场排名
     * </pre>
     */
    public boolean hasGameSiteRank() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 gameSiteRank = 16;</code>
     *
     * <pre>
     * 比赛场排名
     * </pre>
     */
    public int getGameSiteRank() {
      return gameSiteRank_;
    }

    // repeated int32 matchExt = 17;
    public static final int MATCHEXT_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> matchExt_;
    /**
     * <code>repeated int32 matchExt = 17;</code>
     *
     * <pre>
     * 比赛场附加参数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getMatchExtList() {
      return matchExt_;
    }
    /**
     * <code>repeated int32 matchExt = 17;</code>
     *
     * <pre>
     * 比赛场附加参数
     * </pre>
     */
    public int getMatchExtCount() {
      return matchExt_.size();
    }
    /**
     * <code>repeated int32 matchExt = 17;</code>
     *
     * <pre>
     * 比赛场附加参数
     * </pre>
     */
    public int getMatchExt(int index) {
      return matchExt_.get(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;
    public static final int MOLDCARDS_FIELD_NUMBER = 18;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> moldCards_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMoldCardsList() {
      return moldCards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMoldCardsOrBuilderList() {
      return moldCards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    public int getMoldCardsCount() {
      return moldCards_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMoldCards(int index) {
      return moldCards_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
     *
     * <pre>
     *杠了碰了的牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMoldCardsOrBuilder(
        int index) {
      return moldCards_.get(index);
    }

    // optional string gps = 19;
    public static final int GPS_FIELD_NUMBER = 19;
    private java.lang.Object gps_;
    /**
     * <code>optional string gps = 19;</code>
     *
     * <pre>
     *经纬度
     * </pre>
     */
    public boolean hasGps() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string gps = 19;</code>
     *
     * <pre>
     *经纬度
     * </pre>
     */
    public java.lang.String getGps() {
      java.lang.Object ref = gps_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gps_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gps = 19;</code>
     *
     * <pre>
     *经纬度
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGpsBytes() {
      java.lang.Object ref = gps_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gps_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 userSate = 20;
    public static final int USERSATE_FIELD_NUMBER = 20;
    private int userSate_;
    /**
     * <code>optional int32 userSate = 20;</code>
     *
     * <pre>
     *玩家状态：0禁止登陆，1正常，2红名
     * </pre>
     */
    public boolean hasUserSate() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 userSate = 20;</code>
     *
     * <pre>
     *玩家状态：0禁止登陆，1正常，2红名
     * </pre>
     */
    public int getUserSate() {
      return userSate_;
    }

    // optional int32 designation = 21;
    public static final int DESIGNATION_FIELD_NUMBER = 21;
    private int designation_;
    /**
     * <code>optional int32 designation = 21;</code>
     *
     * <pre>
     *玩家称号：0草民,1县令,2知府,3尚书,4宰相,5皇帝
     * </pre>
     */
    public boolean hasDesignation() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 designation = 21;</code>
     *
     * <pre>
     *玩家称号：0草民,1县令,2知府,3尚书,4宰相,5皇帝
     * </pre>
     */
    public int getDesignation() {
      return designation_;
    }

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;
    public static final int HUCARDS_FIELD_NUMBER = 22;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> huCards_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
     *
     * <pre>
     *甘肃麻将胡过了的牌
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getHuCardsList() {
      return huCards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
     *
     * <pre>
     *甘肃麻将胡过了的牌
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getHuCardsOrBuilderList() {
      return huCards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
     *
     * <pre>
     *甘肃麻将胡过了的牌
     * </pre>
     */
    public int getHuCardsCount() {
      return huCards_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
     *
     * <pre>
     *甘肃麻将胡过了的牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getHuCards(int index) {
      return huCards_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
     *
     * <pre>
     *甘肃麻将胡过了的牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getHuCardsOrBuilder(
        int index) {
      return huCards_.get(index);
    }

    // optional string gold = 23;
    public static final int GOLD_FIELD_NUMBER = 23;
    private java.lang.Object gold_;
    /**
     * <code>optional string gold = 23;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string gold = 23;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    public java.lang.String getGold() {
      java.lang.Object ref = gold_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gold_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gold = 23;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGoldBytes() {
      java.lang.Object ref = gold_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gold_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int64 credit = 24;
    public static final int CREDIT_FIELD_NUMBER = 24;
    private long credit_;
    /**
     * <code>optional int64 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    public boolean hasCredit() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    public long getCredit() {
      return credit_;
    }

    // repeated int32 scoreCard = 25;
    public static final int SCORECARD_FIELD_NUMBER = 25;
    private java.util.List<java.lang.Integer> scoreCard_;
    /**
     * <code>repeated int32 scoreCard = 25;</code>
     *
     * <pre>
     *玩家身上捡的分牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getScoreCardList() {
      return scoreCard_;
    }
    /**
     * <code>repeated int32 scoreCard = 25;</code>
     *
     * <pre>
     *玩家身上捡的分牌
     * </pre>
     */
    public int getScoreCardCount() {
      return scoreCard_.size();
    }
    /**
     * <code>repeated int32 scoreCard = 25;</code>
     *
     * <pre>
     *玩家身上捡的分牌
     * </pre>
     */
    public int getScoreCard(int index) {
      return scoreCard_.get(index);
    }

    // repeated int32 intExts = 26;
    public static final int INTEXTS_FIELD_NUMBER = 26;
    private java.util.List<java.lang.Integer> intExts_;
    /**
     * <code>repeated int32 intExts = 26;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIntExtsList() {
      return intExts_;
    }
    /**
     * <code>repeated int32 intExts = 26;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    public int getIntExtsCount() {
      return intExts_.size();
    }
    /**
     * <code>repeated int32 intExts = 26;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    public int getIntExts(int index) {
      return intExts_.get(index);
    }

    // repeated string strExts = 27;
    public static final int STREXTS_FIELD_NUMBER = 27;
    private com.google.protobuf.LazyStringList strExts_;
    /**
     * <code>repeated string strExts = 27;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    public java.util.List<java.lang.String>
        getStrExtsList() {
      return strExts_;
    }
    /**
     * <code>repeated string strExts = 27;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    public int getStrExtsCount() {
      return strExts_.size();
    }
    /**
     * <code>repeated string strExts = 27;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    public java.lang.String getStrExts(int index) {
      return strExts_.get(index);
    }
    /**
     * <code>repeated string strExts = 27;</code>
     *
     * <pre>
     *额外参数字符串数组
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStrExtsBytes(int index) {
      return strExts_.getByteString(index);
    }

    // optional int32 shiZhongCard = 28;
    public static final int SHIZHONGCARD_FIELD_NUMBER = 28;
    private int shiZhongCard_;
    /**
     * <code>optional int32 shiZhongCard = 28;</code>
     *
     * <pre>
     *起手示众牌
     * </pre>
     */
    public boolean hasShiZhongCard() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 shiZhongCard = 28;</code>
     *
     * <pre>
     *起手示众牌
     * </pre>
     */
    public int getShiZhongCard() {
      return shiZhongCard_;
    }

    // optional int64 coin = 29;
    public static final int COIN_FIELD_NUMBER = 29;
    private long coin_;
    /**
     * <code>optional int64 coin = 29;</code>
     *
     * <pre>
     * 新的金币
     * </pre>
     */
    public boolean hasCoin() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int64 coin = 29;</code>
     *
     * <pre>
     * 新的金币
     * </pre>
     */
    public long getCoin() {
      return coin_;
    }

    // optional int32 frameId = 30;
    public static final int FRAMEID_FIELD_NUMBER = 30;
    private int frameId_;
    /**
     * <code>optional int32 frameId = 30;</code>
     *
     * <pre>
     * 头像框id
     * </pre>
     */
    public boolean hasFrameId() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 frameId = 30;</code>
     *
     * <pre>
     * 头像框id
     * </pre>
     */
    public int getFrameId() {
      return frameId_;
    }

    // optional int64 score = 31;
    public static final int SCORE_FIELD_NUMBER = 31;
    private long score_;
    /**
     * <code>optional int64 score = 31;</code>
     *
     * <pre>
     * 棋分
     * </pre>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 score = 31;</code>
     *
     * <pre>
     * 棋分
     * </pre>
     */
    public long getScore() {
      return score_;
    }

    private void initFields() {
      userId_ = "";
      name_ = "";
      seat_ = 0;
      sex_ = 0;
      icon_ = "";
      point_ = 0;
      handCardIds_ = java.util.Collections.emptyList();
      outCardIds_ = java.util.Collections.emptyList();
      status_ = 0;
      recover_ = java.util.Collections.emptyList();
      ip_ = "";
      outedIds_ = java.util.Collections.emptyList();
      moldIds_ = java.util.Collections.emptyList();
      angangIds_ = java.util.Collections.emptyList();
      ext_ = java.util.Collections.emptyList();
      gameSiteRank_ = 0;
      matchExt_ = java.util.Collections.emptyList();
      moldCards_ = java.util.Collections.emptyList();
      gps_ = "";
      userSate_ = 0;
      designation_ = 0;
      huCards_ = java.util.Collections.emptyList();
      gold_ = "";
      credit_ = 0L;
      scoreCard_ = java.util.Collections.emptyList();
      intExts_ = java.util.Collections.emptyList();
      strExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      shiZhongCard_ = 0;
      coin_ = 0L;
      frameId_ = 0;
      score_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasUserId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSex()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasIcon()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasPoint()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMoldCardsCount(); i++) {
        if (!getMoldCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getHuCardsCount(); i++) {
        if (!getHuCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, seat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, sex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIconBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, point_);
      }
      for (int i = 0; i < handCardIds_.size(); i++) {
        output.writeInt32(7, handCardIds_.get(i));
      }
      for (int i = 0; i < outCardIds_.size(); i++) {
        output.writeInt32(8, outCardIds_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(9, status_);
      }
      for (int i = 0; i < recover_.size(); i++) {
        output.writeInt32(10, recover_.get(i));
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(11, getIpBytes());
      }
      for (int i = 0; i < outedIds_.size(); i++) {
        output.writeInt32(12, outedIds_.get(i));
      }
      for (int i = 0; i < moldIds_.size(); i++) {
        output.writeInt32(13, moldIds_.get(i));
      }
      for (int i = 0; i < angangIds_.size(); i++) {
        output.writeInt32(14, angangIds_.get(i));
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeInt32(15, ext_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(16, gameSiteRank_);
      }
      for (int i = 0; i < matchExt_.size(); i++) {
        output.writeInt32(17, matchExt_.get(i));
      }
      for (int i = 0; i < moldCards_.size(); i++) {
        output.writeMessage(18, moldCards_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(19, getGpsBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(20, userSate_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(21, designation_);
      }
      for (int i = 0; i < huCards_.size(); i++) {
        output.writeMessage(22, huCards_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(23, getGoldBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(24, credit_);
      }
      for (int i = 0; i < scoreCard_.size(); i++) {
        output.writeInt32(25, scoreCard_.get(i));
      }
      for (int i = 0; i < intExts_.size(); i++) {
        output.writeInt32(26, intExts_.get(i));
      }
      for (int i = 0; i < strExts_.size(); i++) {
        output.writeBytes(27, strExts_.getByteString(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(28, shiZhongCard_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt64(29, coin_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(30, frameId_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(31, score_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, seat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIconBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, point_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handCardIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardIds_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outCardIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outCardIds_.get(i));
        }
        size += dataSize;
        size += 1 * getOutCardIdsList().size();
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, status_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < recover_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(recover_.get(i));
        }
        size += dataSize;
        size += 1 * getRecoverList().size();
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getIpBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outedIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outedIds_.get(i));
        }
        size += dataSize;
        size += 1 * getOutedIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < moldIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(moldIds_.get(i));
        }
        size += dataSize;
        size += 1 * getMoldIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < angangIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(angangIds_.get(i));
        }
        size += dataSize;
        size += 1 * getAngangIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(ext_.get(i));
        }
        size += dataSize;
        size += 1 * getExtList().size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, gameSiteRank_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < matchExt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(matchExt_.get(i));
        }
        size += dataSize;
        size += 2 * getMatchExtList().size();
      }
      for (int i = 0; i < moldCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, moldCards_.get(i));
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(19, getGpsBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, userSate_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, designation_);
      }
      for (int i = 0; i < huCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, huCards_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(23, getGoldBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(24, credit_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < scoreCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(scoreCard_.get(i));
        }
        size += dataSize;
        size += 2 * getScoreCardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intExts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(intExts_.get(i));
        }
        size += dataSize;
        size += 2 * getIntExtsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strExts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strExts_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getStrExtsList().size();
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, shiZhongCard_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(29, coin_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(30, frameId_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(31, score_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.PlayerInTableRes}
     *
     * <pre>
     *牌桌上玩家信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.PlayerInTableResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_PlayerInTableRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_PlayerInTableRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.class, com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMoldCardsFieldBuilder();
          getHuCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        icon_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        point_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        handCardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        outCardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        status_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        recover_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        ip_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        outedIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        moldIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        angangIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        ext_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        gameSiteRank_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        matchExt_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        if (moldCardsBuilder_ == null) {
          moldCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          moldCardsBuilder_.clear();
        }
        gps_ = "";
        bitField0_ = (bitField0_ & ~0x00040000);
        userSate_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        designation_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        if (huCardsBuilder_ == null) {
          huCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
        } else {
          huCardsBuilder_.clear();
        }
        gold_ = "";
        bitField0_ = (bitField0_ & ~0x00400000);
        credit_ = 0L;
        bitField0_ = (bitField0_ & ~0x00800000);
        scoreCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x01000000);
        intExts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        strExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x04000000);
        shiZhongCard_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        coin_ = 0L;
        bitField0_ = (bitField0_ & ~0x10000000);
        frameId_ = 0;
        bitField0_ = (bitField0_ & ~0x20000000);
        score_ = 0L;
        bitField0_ = (bitField0_ & ~0x40000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_PlayerInTableRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes build() {
        com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes result = new com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.icon_ = icon_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.point_ = point_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          handCardIds_ = java.util.Collections.unmodifiableList(handCardIds_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.handCardIds_ = handCardIds_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          outCardIds_ = java.util.Collections.unmodifiableList(outCardIds_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.outCardIds_ = outCardIds_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000040;
        }
        result.status_ = status_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          recover_ = java.util.Collections.unmodifiableList(recover_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.recover_ = recover_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.ip_ = ip_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          outedIds_ = java.util.Collections.unmodifiableList(outedIds_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.outedIds_ = outedIds_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          moldIds_ = java.util.Collections.unmodifiableList(moldIds_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.moldIds_ = moldIds_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          angangIds_ = java.util.Collections.unmodifiableList(angangIds_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.angangIds_ = angangIds_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          ext_ = java.util.Collections.unmodifiableList(ext_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.ext_ = ext_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.gameSiteRank_ = gameSiteRank_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          matchExt_ = java.util.Collections.unmodifiableList(matchExt_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.matchExt_ = matchExt_;
        if (moldCardsBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            moldCards_ = java.util.Collections.unmodifiableList(moldCards_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.moldCards_ = moldCards_;
        } else {
          result.moldCards_ = moldCardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.gps_ = gps_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.userSate_ = userSate_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.designation_ = designation_;
        if (huCardsBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000)) {
            huCards_ = java.util.Collections.unmodifiableList(huCards_);
            bitField0_ = (bitField0_ & ~0x00200000);
          }
          result.huCards_ = huCards_;
        } else {
          result.huCards_ = huCardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.credit_ = credit_;
        if (((bitField0_ & 0x01000000) == 0x01000000)) {
          scoreCard_ = java.util.Collections.unmodifiableList(scoreCard_);
          bitField0_ = (bitField0_ & ~0x01000000);
        }
        result.scoreCard_ = scoreCard_;
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          intExts_ = java.util.Collections.unmodifiableList(intExts_);
          bitField0_ = (bitField0_ & ~0x02000000);
        }
        result.intExts_ = intExts_;
        if (((bitField0_ & 0x04000000) == 0x04000000)) {
          strExts_ = new com.google.protobuf.UnmodifiableLazyStringList(
              strExts_);
          bitField0_ = (bitField0_ & ~0x04000000);
        }
        result.strExts_ = strExts_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.shiZhongCard_ = shiZhongCard_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.coin_ = coin_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.frameId_ = frameId_;
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasIcon()) {
          bitField0_ |= 0x00000010;
          icon_ = other.icon_;
          onChanged();
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        if (!other.handCardIds_.isEmpty()) {
          if (handCardIds_.isEmpty()) {
            handCardIds_ = other.handCardIds_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureHandCardIdsIsMutable();
            handCardIds_.addAll(other.handCardIds_);
          }
          onChanged();
        }
        if (!other.outCardIds_.isEmpty()) {
          if (outCardIds_.isEmpty()) {
            outCardIds_ = other.outCardIds_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureOutCardIdsIsMutable();
            outCardIds_.addAll(other.outCardIds_);
          }
          onChanged();
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (!other.recover_.isEmpty()) {
          if (recover_.isEmpty()) {
            recover_ = other.recover_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureRecoverIsMutable();
            recover_.addAll(other.recover_);
          }
          onChanged();
        }
        if (other.hasIp()) {
          bitField0_ |= 0x00000400;
          ip_ = other.ip_;
          onChanged();
        }
        if (!other.outedIds_.isEmpty()) {
          if (outedIds_.isEmpty()) {
            outedIds_ = other.outedIds_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureOutedIdsIsMutable();
            outedIds_.addAll(other.outedIds_);
          }
          onChanged();
        }
        if (!other.moldIds_.isEmpty()) {
          if (moldIds_.isEmpty()) {
            moldIds_ = other.moldIds_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureMoldIdsIsMutable();
            moldIds_.addAll(other.moldIds_);
          }
          onChanged();
        }
        if (!other.angangIds_.isEmpty()) {
          if (angangIds_.isEmpty()) {
            angangIds_ = other.angangIds_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureAngangIdsIsMutable();
            angangIds_.addAll(other.angangIds_);
          }
          onChanged();
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        if (other.hasGameSiteRank()) {
          setGameSiteRank(other.getGameSiteRank());
        }
        if (!other.matchExt_.isEmpty()) {
          if (matchExt_.isEmpty()) {
            matchExt_ = other.matchExt_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureMatchExtIsMutable();
            matchExt_.addAll(other.matchExt_);
          }
          onChanged();
        }
        if (moldCardsBuilder_ == null) {
          if (!other.moldCards_.isEmpty()) {
            if (moldCards_.isEmpty()) {
              moldCards_ = other.moldCards_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureMoldCardsIsMutable();
              moldCards_.addAll(other.moldCards_);
            }
            onChanged();
          }
        } else {
          if (!other.moldCards_.isEmpty()) {
            if (moldCardsBuilder_.isEmpty()) {
              moldCardsBuilder_.dispose();
              moldCardsBuilder_ = null;
              moldCards_ = other.moldCards_;
              bitField0_ = (bitField0_ & ~0x00020000);
              moldCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMoldCardsFieldBuilder() : null;
            } else {
              moldCardsBuilder_.addAllMessages(other.moldCards_);
            }
          }
        }
        if (other.hasGps()) {
          bitField0_ |= 0x00040000;
          gps_ = other.gps_;
          onChanged();
        }
        if (other.hasUserSate()) {
          setUserSate(other.getUserSate());
        }
        if (other.hasDesignation()) {
          setDesignation(other.getDesignation());
        }
        if (huCardsBuilder_ == null) {
          if (!other.huCards_.isEmpty()) {
            if (huCards_.isEmpty()) {
              huCards_ = other.huCards_;
              bitField0_ = (bitField0_ & ~0x00200000);
            } else {
              ensureHuCardsIsMutable();
              huCards_.addAll(other.huCards_);
            }
            onChanged();
          }
        } else {
          if (!other.huCards_.isEmpty()) {
            if (huCardsBuilder_.isEmpty()) {
              huCardsBuilder_.dispose();
              huCardsBuilder_ = null;
              huCards_ = other.huCards_;
              bitField0_ = (bitField0_ & ~0x00200000);
              huCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHuCardsFieldBuilder() : null;
            } else {
              huCardsBuilder_.addAllMessages(other.huCards_);
            }
          }
        }
        if (other.hasGold()) {
          bitField0_ |= 0x00400000;
          gold_ = other.gold_;
          onChanged();
        }
        if (other.hasCredit()) {
          setCredit(other.getCredit());
        }
        if (!other.scoreCard_.isEmpty()) {
          if (scoreCard_.isEmpty()) {
            scoreCard_ = other.scoreCard_;
            bitField0_ = (bitField0_ & ~0x01000000);
          } else {
            ensureScoreCardIsMutable();
            scoreCard_.addAll(other.scoreCard_);
          }
          onChanged();
        }
        if (!other.intExts_.isEmpty()) {
          if (intExts_.isEmpty()) {
            intExts_ = other.intExts_;
            bitField0_ = (bitField0_ & ~0x02000000);
          } else {
            ensureIntExtsIsMutable();
            intExts_.addAll(other.intExts_);
          }
          onChanged();
        }
        if (!other.strExts_.isEmpty()) {
          if (strExts_.isEmpty()) {
            strExts_ = other.strExts_;
            bitField0_ = (bitField0_ & ~0x04000000);
          } else {
            ensureStrExtsIsMutable();
            strExts_.addAll(other.strExts_);
          }
          onChanged();
        }
        if (other.hasShiZhongCard()) {
          setShiZhongCard(other.getShiZhongCard());
        }
        if (other.hasCoin()) {
          setCoin(other.getCoin());
        }
        if (other.hasFrameId()) {
          setFrameId(other.getFrameId());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasUserId()) {
          
          return false;
        }
        if (!hasName()) {
          
          return false;
        }
        if (!hasSeat()) {
          
          return false;
        }
        if (!hasSex()) {
          
          return false;
        }
        if (!hasIcon()) {
          
          return false;
        }
        if (!hasPoint()) {
          
          return false;
        }
        for (int i = 0; i < getMoldCardsCount(); i++) {
          if (!getMoldCards(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getHuCardsCount(); i++) {
          if (!getHuCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.PlayerInTableRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>required string userId = 1;</code>
       *
       * <pre>
       *用户id
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // required string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 seat = 3;
      private int seat_ ;
      /**
       * <code>required int32 seat = 3;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 seat = 3;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>required int32 seat = 3;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000004;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 seat = 3;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seat_ = 0;
        onChanged();
        return this;
      }

      // required int32 sex = 4;
      private int sex_ ;
      /**
       * <code>required int32 sex = 4;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 sex = 4;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>required int32 sex = 4;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000008;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 sex = 4;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sex_ = 0;
        onChanged();
        return this;
      }

      // required string icon = 5;
      private java.lang.Object icon_ = "";
      /**
       * <code>required string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public boolean hasIcon() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public Builder clearIcon() {
        bitField0_ = (bitField0_ & ~0x00000010);
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <code>required string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        icon_ = value;
        onChanged();
        return this;
      }

      // required int32 point = 6;
      private int point_ ;
      /**
       * <code>required int32 point = 6;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public boolean hasPoint() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 point = 6;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public int getPoint() {
        return point_;
      }
      /**
       * <code>required int32 point = 6;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder setPoint(int value) {
        bitField0_ |= 0x00000020;
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 point = 6;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder clearPoint() {
        bitField0_ = (bitField0_ & ~0x00000020);
        point_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 handCardIds = 7;
      private java.util.List<java.lang.Integer> handCardIds_ = java.util.Collections.emptyList();
      private void ensureHandCardIdsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          handCardIds_ = new java.util.ArrayList<java.lang.Integer>(handCardIds_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 handCardIds = 7;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardIdsList() {
        return java.util.Collections.unmodifiableList(handCardIds_);
      }
      /**
       * <code>repeated int32 handCardIds = 7;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public int getHandCardIdsCount() {
        return handCardIds_.size();
      }
      /**
       * <code>repeated int32 handCardIds = 7;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public int getHandCardIds(int index) {
        return handCardIds_.get(index);
      }
      /**
       * <code>repeated int32 handCardIds = 7;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder setHandCardIds(
          int index, int value) {
        ensureHandCardIdsIsMutable();
        handCardIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handCardIds = 7;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder addHandCardIds(int value) {
        ensureHandCardIdsIsMutable();
        handCardIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handCardIds = 7;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder addAllHandCardIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardIdsIsMutable();
        super.addAll(values, handCardIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handCardIds = 7;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder clearHandCardIds() {
        handCardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 outCardIds = 8;
      private java.util.List<java.lang.Integer> outCardIds_ = java.util.Collections.emptyList();
      private void ensureOutCardIdsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          outCardIds_ = new java.util.ArrayList<java.lang.Integer>(outCardIds_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 outCardIds = 8;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOutCardIdsList() {
        return java.util.Collections.unmodifiableList(outCardIds_);
      }
      /**
       * <code>repeated int32 outCardIds = 8;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public int getOutCardIdsCount() {
        return outCardIds_.size();
      }
      /**
       * <code>repeated int32 outCardIds = 8;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public int getOutCardIds(int index) {
        return outCardIds_.get(index);
      }
      /**
       * <code>repeated int32 outCardIds = 8;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public Builder setOutCardIds(
          int index, int value) {
        ensureOutCardIdsIsMutable();
        outCardIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 outCardIds = 8;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public Builder addOutCardIds(int value) {
        ensureOutCardIdsIsMutable();
        outCardIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 outCardIds = 8;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public Builder addAllOutCardIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutCardIdsIsMutable();
        super.addAll(values, outCardIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 outCardIds = 8;</code>
       *
       * <pre>
       *出牌
       * </pre>
       */
      public Builder clearOutCardIds() {
        outCardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional int32 status = 9;
      private int status_ ;
      /**
       * <code>optional int32 status = 9;</code>
       *
       * <pre>
       *状态 1准备 2离线
       * </pre>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 status = 9;</code>
       *
       * <pre>
       *状态 1准备 2离线
       * </pre>
       */
      public int getStatus() {
        return status_;
      }
      /**
       * <code>optional int32 status = 9;</code>
       *
       * <pre>
       *状态 1准备 2离线
       * </pre>
       */
      public Builder setStatus(int value) {
        bitField0_ |= 0x00000100;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 status = 9;</code>
       *
       * <pre>
       *状态 1准备 2离线
       * </pre>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000100);
        status_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 recover = 10;
      private java.util.List<java.lang.Integer> recover_ = java.util.Collections.emptyList();
      private void ensureRecoverIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          recover_ = new java.util.ArrayList<java.lang.Integer>(recover_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 recover = 10;</code>
       *
       * <pre>
       *牌局恢复
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRecoverList() {
        return java.util.Collections.unmodifiableList(recover_);
      }
      /**
       * <code>repeated int32 recover = 10;</code>
       *
       * <pre>
       *牌局恢复
       * </pre>
       */
      public int getRecoverCount() {
        return recover_.size();
      }
      /**
       * <code>repeated int32 recover = 10;</code>
       *
       * <pre>
       *牌局恢复
       * </pre>
       */
      public int getRecover(int index) {
        return recover_.get(index);
      }
      /**
       * <code>repeated int32 recover = 10;</code>
       *
       * <pre>
       *牌局恢复
       * </pre>
       */
      public Builder setRecover(
          int index, int value) {
        ensureRecoverIsMutable();
        recover_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 recover = 10;</code>
       *
       * <pre>
       *牌局恢复
       * </pre>
       */
      public Builder addRecover(int value) {
        ensureRecoverIsMutable();
        recover_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 recover = 10;</code>
       *
       * <pre>
       *牌局恢复
       * </pre>
       */
      public Builder addAllRecover(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRecoverIsMutable();
        super.addAll(values, recover_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 recover = 10;</code>
       *
       * <pre>
       *牌局恢复
       * </pre>
       */
      public Builder clearRecover() {
        recover_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional string ip = 11;
      private java.lang.Object ip_ = "";
      /**
       * <code>optional string ip = 11;</code>
       */
      public boolean hasIp() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string ip = 11;</code>
       */
      public java.lang.String getIp() {
        java.lang.Object ref = ip_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          ip_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ip = 11;</code>
       */
      public com.google.protobuf.ByteString
          getIpBytes() {
        java.lang.Object ref = ip_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ip_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ip = 11;</code>
       */
      public Builder setIp(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        ip_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 11;</code>
       */
      public Builder clearIp() {
        bitField0_ = (bitField0_ & ~0x00000400);
        ip_ = getDefaultInstance().getIp();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ip = 11;</code>
       */
      public Builder setIpBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        ip_ = value;
        onChanged();
        return this;
      }

      // repeated int32 outedIds = 12;
      private java.util.List<java.lang.Integer> outedIds_ = java.util.Collections.emptyList();
      private void ensureOutedIdsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          outedIds_ = new java.util.ArrayList<java.lang.Integer>(outedIds_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 outedIds = 12;</code>
       *
       * <pre>
       *麻将已经出了的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOutedIdsList() {
        return java.util.Collections.unmodifiableList(outedIds_);
      }
      /**
       * <code>repeated int32 outedIds = 12;</code>
       *
       * <pre>
       *麻将已经出了的牌
       * </pre>
       */
      public int getOutedIdsCount() {
        return outedIds_.size();
      }
      /**
       * <code>repeated int32 outedIds = 12;</code>
       *
       * <pre>
       *麻将已经出了的牌
       * </pre>
       */
      public int getOutedIds(int index) {
        return outedIds_.get(index);
      }
      /**
       * <code>repeated int32 outedIds = 12;</code>
       *
       * <pre>
       *麻将已经出了的牌
       * </pre>
       */
      public Builder setOutedIds(
          int index, int value) {
        ensureOutedIdsIsMutable();
        outedIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 outedIds = 12;</code>
       *
       * <pre>
       *麻将已经出了的牌
       * </pre>
       */
      public Builder addOutedIds(int value) {
        ensureOutedIdsIsMutable();
        outedIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 outedIds = 12;</code>
       *
       * <pre>
       *麻将已经出了的牌
       * </pre>
       */
      public Builder addAllOutedIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutedIdsIsMutable();
        super.addAll(values, outedIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 outedIds = 12;</code>
       *
       * <pre>
       *麻将已经出了的牌
       * </pre>
       */
      public Builder clearOutedIds() {
        outedIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated int32 moldIds = 13;
      private java.util.List<java.lang.Integer> moldIds_ = java.util.Collections.emptyList();
      private void ensureMoldIdsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          moldIds_ = new java.util.ArrayList<java.lang.Integer>(moldIds_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 moldIds = 13;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMoldIdsList() {
        return java.util.Collections.unmodifiableList(moldIds_);
      }
      /**
       * <code>repeated int32 moldIds = 13;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public int getMoldIdsCount() {
        return moldIds_.size();
      }
      /**
       * <code>repeated int32 moldIds = 13;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public int getMoldIds(int index) {
        return moldIds_.get(index);
      }
      /**
       * <code>repeated int32 moldIds = 13;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder setMoldIds(
          int index, int value) {
        ensureMoldIdsIsMutable();
        moldIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 moldIds = 13;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder addMoldIds(int value) {
        ensureMoldIdsIsMutable();
        moldIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 moldIds = 13;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder addAllMoldIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMoldIdsIsMutable();
        super.addAll(values, moldIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 moldIds = 13;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder clearMoldIds() {
        moldIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 angangIds = 14;
      private java.util.List<java.lang.Integer> angangIds_ = java.util.Collections.emptyList();
      private void ensureAngangIdsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          angangIds_ = new java.util.ArrayList<java.lang.Integer>(angangIds_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 angangIds = 14;</code>
       *
       * <pre>
       *暗杠的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getAngangIdsList() {
        return java.util.Collections.unmodifiableList(angangIds_);
      }
      /**
       * <code>repeated int32 angangIds = 14;</code>
       *
       * <pre>
       *暗杠的牌
       * </pre>
       */
      public int getAngangIdsCount() {
        return angangIds_.size();
      }
      /**
       * <code>repeated int32 angangIds = 14;</code>
       *
       * <pre>
       *暗杠的牌
       * </pre>
       */
      public int getAngangIds(int index) {
        return angangIds_.get(index);
      }
      /**
       * <code>repeated int32 angangIds = 14;</code>
       *
       * <pre>
       *暗杠的牌
       * </pre>
       */
      public Builder setAngangIds(
          int index, int value) {
        ensureAngangIdsIsMutable();
        angangIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 angangIds = 14;</code>
       *
       * <pre>
       *暗杠的牌
       * </pre>
       */
      public Builder addAngangIds(int value) {
        ensureAngangIdsIsMutable();
        angangIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 angangIds = 14;</code>
       *
       * <pre>
       *暗杠的牌
       * </pre>
       */
      public Builder addAllAngangIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAngangIdsIsMutable();
        super.addAll(values, angangIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 angangIds = 14;</code>
       *
       * <pre>
       *暗杠的牌
       * </pre>
       */
      public Builder clearAngangIds() {
        angangIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 ext = 15;
      private java.util.List<java.lang.Integer> ext_ = java.util.Collections.emptyList();
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          ext_ = new java.util.ArrayList<java.lang.Integer>(ext_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *附加参数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *附加参数
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *附加参数
       * </pre>
       */
      public int getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *附加参数
       * </pre>
       */
      public Builder setExt(
          int index, int value) {
        ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *附加参数
       * </pre>
       */
      public Builder addExt(int value) {
        ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *附加参数
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *附加参数
       * </pre>
       */
      public Builder clearExt() {
        ext_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // optional int32 gameSiteRank = 16;
      private int gameSiteRank_ ;
      /**
       * <code>optional int32 gameSiteRank = 16;</code>
       *
       * <pre>
       * 比赛场排名
       * </pre>
       */
      public boolean hasGameSiteRank() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 gameSiteRank = 16;</code>
       *
       * <pre>
       * 比赛场排名
       * </pre>
       */
      public int getGameSiteRank() {
        return gameSiteRank_;
      }
      /**
       * <code>optional int32 gameSiteRank = 16;</code>
       *
       * <pre>
       * 比赛场排名
       * </pre>
       */
      public Builder setGameSiteRank(int value) {
        bitField0_ |= 0x00008000;
        gameSiteRank_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gameSiteRank = 16;</code>
       *
       * <pre>
       * 比赛场排名
       * </pre>
       */
      public Builder clearGameSiteRank() {
        bitField0_ = (bitField0_ & ~0x00008000);
        gameSiteRank_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 matchExt = 17;
      private java.util.List<java.lang.Integer> matchExt_ = java.util.Collections.emptyList();
      private void ensureMatchExtIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          matchExt_ = new java.util.ArrayList<java.lang.Integer>(matchExt_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 matchExt = 17;</code>
       *
       * <pre>
       * 比赛场附加参数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getMatchExtList() {
        return java.util.Collections.unmodifiableList(matchExt_);
      }
      /**
       * <code>repeated int32 matchExt = 17;</code>
       *
       * <pre>
       * 比赛场附加参数
       * </pre>
       */
      public int getMatchExtCount() {
        return matchExt_.size();
      }
      /**
       * <code>repeated int32 matchExt = 17;</code>
       *
       * <pre>
       * 比赛场附加参数
       * </pre>
       */
      public int getMatchExt(int index) {
        return matchExt_.get(index);
      }
      /**
       * <code>repeated int32 matchExt = 17;</code>
       *
       * <pre>
       * 比赛场附加参数
       * </pre>
       */
      public Builder setMatchExt(
          int index, int value) {
        ensureMatchExtIsMutable();
        matchExt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 matchExt = 17;</code>
       *
       * <pre>
       * 比赛场附加参数
       * </pre>
       */
      public Builder addMatchExt(int value) {
        ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 matchExt = 17;</code>
       *
       * <pre>
       * 比赛场附加参数
       * </pre>
       */
      public Builder addAllMatchExt(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMatchExtIsMutable();
        super.addAll(values, matchExt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 matchExt = 17;</code>
       *
       * <pre>
       * 比赛场附加参数
       * </pre>
       */
      public Builder clearMatchExt() {
        matchExt_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> moldCards_ =
        java.util.Collections.emptyList();
      private void ensureMoldCardsIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          moldCards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>(moldCards_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> moldCardsBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMoldCardsList() {
        if (moldCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(moldCards_);
        } else {
          return moldCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public int getMoldCardsCount() {
        if (moldCardsBuilder_ == null) {
          return moldCards_.size();
        } else {
          return moldCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMoldCards(int index) {
        if (moldCardsBuilder_ == null) {
          return moldCards_.get(index);
        } else {
          return moldCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder setMoldCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (moldCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoldCardsIsMutable();
          moldCards_.set(index, value);
          onChanged();
        } else {
          moldCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder setMoldCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (moldCardsBuilder_ == null) {
          ensureMoldCardsIsMutable();
          moldCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          moldCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder addMoldCards(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (moldCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoldCardsIsMutable();
          moldCards_.add(value);
          onChanged();
        } else {
          moldCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder addMoldCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (moldCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoldCardsIsMutable();
          moldCards_.add(index, value);
          onChanged();
        } else {
          moldCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder addMoldCards(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (moldCardsBuilder_ == null) {
          ensureMoldCardsIsMutable();
          moldCards_.add(builderForValue.build());
          onChanged();
        } else {
          moldCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder addMoldCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (moldCardsBuilder_ == null) {
          ensureMoldCardsIsMutable();
          moldCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          moldCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder addAllMoldCards(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> values) {
        if (moldCardsBuilder_ == null) {
          ensureMoldCardsIsMutable();
          super.addAll(values, moldCards_);
          onChanged();
        } else {
          moldCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder clearMoldCards() {
        if (moldCardsBuilder_ == null) {
          moldCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          moldCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public Builder removeMoldCards(int index) {
        if (moldCardsBuilder_ == null) {
          ensureMoldCardsIsMutable();
          moldCards_.remove(index);
          onChanged();
        } else {
          moldCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder getMoldCardsBuilder(
          int index) {
        return getMoldCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMoldCardsOrBuilder(
          int index) {
        if (moldCardsBuilder_ == null) {
          return moldCards_.get(index);  } else {
          return moldCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
           getMoldCardsOrBuilderList() {
        if (moldCardsBuilder_ != null) {
          return moldCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(moldCards_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMoldCardsBuilder() {
        return getMoldCardsFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMoldCardsBuilder(
          int index) {
        return getMoldCardsFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 18;</code>
       *
       * <pre>
       *杠了碰了的牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder> 
           getMoldCardsBuilderList() {
        return getMoldCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
          getMoldCardsFieldBuilder() {
        if (moldCardsBuilder_ == null) {
          moldCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder>(
                  moldCards_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          moldCards_ = null;
        }
        return moldCardsBuilder_;
      }

      // optional string gps = 19;
      private java.lang.Object gps_ = "";
      /**
       * <code>optional string gps = 19;</code>
       *
       * <pre>
       *经纬度
       * </pre>
       */
      public boolean hasGps() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional string gps = 19;</code>
       *
       * <pre>
       *经纬度
       * </pre>
       */
      public java.lang.String getGps() {
        java.lang.Object ref = gps_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gps_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gps = 19;</code>
       *
       * <pre>
       *经纬度
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGpsBytes() {
        java.lang.Object ref = gps_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gps_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gps = 19;</code>
       *
       * <pre>
       *经纬度
       * </pre>
       */
      public Builder setGps(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        gps_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gps = 19;</code>
       *
       * <pre>
       *经纬度
       * </pre>
       */
      public Builder clearGps() {
        bitField0_ = (bitField0_ & ~0x00040000);
        gps_ = getDefaultInstance().getGps();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gps = 19;</code>
       *
       * <pre>
       *经纬度
       * </pre>
       */
      public Builder setGpsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00040000;
        gps_ = value;
        onChanged();
        return this;
      }

      // optional int32 userSate = 20;
      private int userSate_ ;
      /**
       * <code>optional int32 userSate = 20;</code>
       *
       * <pre>
       *玩家状态：0禁止登陆，1正常，2红名
       * </pre>
       */
      public boolean hasUserSate() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 userSate = 20;</code>
       *
       * <pre>
       *玩家状态：0禁止登陆，1正常，2红名
       * </pre>
       */
      public int getUserSate() {
        return userSate_;
      }
      /**
       * <code>optional int32 userSate = 20;</code>
       *
       * <pre>
       *玩家状态：0禁止登陆，1正常，2红名
       * </pre>
       */
      public Builder setUserSate(int value) {
        bitField0_ |= 0x00080000;
        userSate_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 userSate = 20;</code>
       *
       * <pre>
       *玩家状态：0禁止登陆，1正常，2红名
       * </pre>
       */
      public Builder clearUserSate() {
        bitField0_ = (bitField0_ & ~0x00080000);
        userSate_ = 0;
        onChanged();
        return this;
      }

      // optional int32 designation = 21;
      private int designation_ ;
      /**
       * <code>optional int32 designation = 21;</code>
       *
       * <pre>
       *玩家称号：0草民,1县令,2知府,3尚书,4宰相,5皇帝
       * </pre>
       */
      public boolean hasDesignation() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 designation = 21;</code>
       *
       * <pre>
       *玩家称号：0草民,1县令,2知府,3尚书,4宰相,5皇帝
       * </pre>
       */
      public int getDesignation() {
        return designation_;
      }
      /**
       * <code>optional int32 designation = 21;</code>
       *
       * <pre>
       *玩家称号：0草民,1县令,2知府,3尚书,4宰相,5皇帝
       * </pre>
       */
      public Builder setDesignation(int value) {
        bitField0_ |= 0x00100000;
        designation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 designation = 21;</code>
       *
       * <pre>
       *玩家称号：0草民,1县令,2知府,3尚书,4宰相,5皇帝
       * </pre>
       */
      public Builder clearDesignation() {
        bitField0_ = (bitField0_ & ~0x00100000);
        designation_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> huCards_ =
        java.util.Collections.emptyList();
      private void ensureHuCardsIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          huCards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>(huCards_);
          bitField0_ |= 0x00200000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> huCardsBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getHuCardsList() {
        if (huCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(huCards_);
        } else {
          return huCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public int getHuCardsCount() {
        if (huCardsBuilder_ == null) {
          return huCards_.size();
        } else {
          return huCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getHuCards(int index) {
        if (huCardsBuilder_ == null) {
          return huCards_.get(index);
        } else {
          return huCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public Builder setHuCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (huCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHuCardsIsMutable();
          huCards_.set(index, value);
          onChanged();
        } else {
          huCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public Builder setHuCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (huCardsBuilder_ == null) {
          ensureHuCardsIsMutable();
          huCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          huCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public Builder addHuCards(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (huCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHuCardsIsMutable();
          huCards_.add(value);
          onChanged();
        } else {
          huCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public Builder addHuCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (huCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHuCardsIsMutable();
          huCards_.add(index, value);
          onChanged();
        } else {
          huCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public Builder addHuCards(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (huCardsBuilder_ == null) {
          ensureHuCardsIsMutable();
          huCards_.add(builderForValue.build());
          onChanged();
        } else {
          huCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public Builder addHuCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (huCardsBuilder_ == null) {
          ensureHuCardsIsMutable();
          huCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          huCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public Builder addAllHuCards(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> values) {
        if (huCardsBuilder_ == null) {
          ensureHuCardsIsMutable();
          super.addAll(values, huCards_);
          onChanged();
        } else {
          huCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public Builder clearHuCards() {
        if (huCardsBuilder_ == null) {
          huCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
          onChanged();
        } else {
          huCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public Builder removeHuCards(int index) {
        if (huCardsBuilder_ == null) {
          ensureHuCardsIsMutable();
          huCards_.remove(index);
          onChanged();
        } else {
          huCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder getHuCardsBuilder(
          int index) {
        return getHuCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getHuCardsOrBuilder(
          int index) {
        if (huCardsBuilder_ == null) {
          return huCards_.get(index);  } else {
          return huCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
           getHuCardsOrBuilderList() {
        if (huCardsBuilder_ != null) {
          return huCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(huCards_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addHuCardsBuilder() {
        return getHuCardsFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addHuCardsBuilder(
          int index) {
        return getHuCardsFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards huCards = 22;</code>
       *
       * <pre>
       *甘肃麻将胡过了的牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder> 
           getHuCardsBuilderList() {
        return getHuCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
          getHuCardsFieldBuilder() {
        if (huCardsBuilder_ == null) {
          huCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder>(
                  huCards_,
                  ((bitField0_ & 0x00200000) == 0x00200000),
                  getParentForChildren(),
                  isClean());
          huCards_ = null;
        }
        return huCardsBuilder_;
      }

      // optional string gold = 23;
      private java.lang.Object gold_ = "";
      /**
       * <code>optional string gold = 23;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional string gold = 23;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public java.lang.String getGold() {
        java.lang.Object ref = gold_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gold_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gold = 23;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGoldBytes() {
        java.lang.Object ref = gold_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gold_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gold = 23;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public Builder setGold(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gold = 23;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00400000);
        gold_ = getDefaultInstance().getGold();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gold = 23;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public Builder setGoldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        gold_ = value;
        onChanged();
        return this;
      }

      // optional int64 credit = 24;
      private long credit_ ;
      /**
       * <code>optional int64 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public boolean hasCredit() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public long getCredit() {
        return credit_;
      }
      /**
       * <code>optional int64 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public Builder setCredit(long value) {
        bitField0_ |= 0x00800000;
        credit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public Builder clearCredit() {
        bitField0_ = (bitField0_ & ~0x00800000);
        credit_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 scoreCard = 25;
      private java.util.List<java.lang.Integer> scoreCard_ = java.util.Collections.emptyList();
      private void ensureScoreCardIsMutable() {
        if (!((bitField0_ & 0x01000000) == 0x01000000)) {
          scoreCard_ = new java.util.ArrayList<java.lang.Integer>(scoreCard_);
          bitField0_ |= 0x01000000;
         }
      }
      /**
       * <code>repeated int32 scoreCard = 25;</code>
       *
       * <pre>
       *玩家身上捡的分牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getScoreCardList() {
        return java.util.Collections.unmodifiableList(scoreCard_);
      }
      /**
       * <code>repeated int32 scoreCard = 25;</code>
       *
       * <pre>
       *玩家身上捡的分牌
       * </pre>
       */
      public int getScoreCardCount() {
        return scoreCard_.size();
      }
      /**
       * <code>repeated int32 scoreCard = 25;</code>
       *
       * <pre>
       *玩家身上捡的分牌
       * </pre>
       */
      public int getScoreCard(int index) {
        return scoreCard_.get(index);
      }
      /**
       * <code>repeated int32 scoreCard = 25;</code>
       *
       * <pre>
       *玩家身上捡的分牌
       * </pre>
       */
      public Builder setScoreCard(
          int index, int value) {
        ensureScoreCardIsMutable();
        scoreCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scoreCard = 25;</code>
       *
       * <pre>
       *玩家身上捡的分牌
       * </pre>
       */
      public Builder addScoreCard(int value) {
        ensureScoreCardIsMutable();
        scoreCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scoreCard = 25;</code>
       *
       * <pre>
       *玩家身上捡的分牌
       * </pre>
       */
      public Builder addAllScoreCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureScoreCardIsMutable();
        super.addAll(values, scoreCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 scoreCard = 25;</code>
       *
       * <pre>
       *玩家身上捡的分牌
       * </pre>
       */
      public Builder clearScoreCard() {
        scoreCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x01000000);
        onChanged();
        return this;
      }

      // repeated int32 intExts = 26;
      private java.util.List<java.lang.Integer> intExts_ = java.util.Collections.emptyList();
      private void ensureIntExtsIsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          intExts_ = new java.util.ArrayList<java.lang.Integer>(intExts_);
          bitField0_ |= 0x02000000;
         }
      }
      /**
       * <code>repeated int32 intExts = 26;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIntExtsList() {
        return java.util.Collections.unmodifiableList(intExts_);
      }
      /**
       * <code>repeated int32 intExts = 26;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public int getIntExtsCount() {
        return intExts_.size();
      }
      /**
       * <code>repeated int32 intExts = 26;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public int getIntExts(int index) {
        return intExts_.get(index);
      }
      /**
       * <code>repeated int32 intExts = 26;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public Builder setIntExts(
          int index, int value) {
        ensureIntExtsIsMutable();
        intExts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intExts = 26;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public Builder addIntExts(int value) {
        ensureIntExtsIsMutable();
        intExts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intExts = 26;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public Builder addAllIntExts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntExtsIsMutable();
        super.addAll(values, intExts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intExts = 26;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public Builder clearIntExts() {
        intExts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        onChanged();
        return this;
      }

      // repeated string strExts = 27;
      private com.google.protobuf.LazyStringList strExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrExtsIsMutable() {
        if (!((bitField0_ & 0x04000000) == 0x04000000)) {
          strExts_ = new com.google.protobuf.LazyStringArrayList(strExts_);
          bitField0_ |= 0x04000000;
         }
      }
      /**
       * <code>repeated string strExts = 27;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public java.util.List<java.lang.String>
          getStrExtsList() {
        return java.util.Collections.unmodifiableList(strExts_);
      }
      /**
       * <code>repeated string strExts = 27;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public int getStrExtsCount() {
        return strExts_.size();
      }
      /**
       * <code>repeated string strExts = 27;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public java.lang.String getStrExts(int index) {
        return strExts_.get(index);
      }
      /**
       * <code>repeated string strExts = 27;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStrExtsBytes(int index) {
        return strExts_.getByteString(index);
      }
      /**
       * <code>repeated string strExts = 27;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public Builder setStrExts(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrExtsIsMutable();
        strExts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExts = 27;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public Builder addStrExts(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrExtsIsMutable();
        strExts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExts = 27;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public Builder addAllStrExts(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrExtsIsMutable();
        super.addAll(values, strExts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExts = 27;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public Builder clearStrExts() {
        strExts_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x04000000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExts = 27;</code>
       *
       * <pre>
       *额外参数字符串数组
       * </pre>
       */
      public Builder addStrExtsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrExtsIsMutable();
        strExts_.add(value);
        onChanged();
        return this;
      }

      // optional int32 shiZhongCard = 28;
      private int shiZhongCard_ ;
      /**
       * <code>optional int32 shiZhongCard = 28;</code>
       *
       * <pre>
       *起手示众牌
       * </pre>
       */
      public boolean hasShiZhongCard() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 shiZhongCard = 28;</code>
       *
       * <pre>
       *起手示众牌
       * </pre>
       */
      public int getShiZhongCard() {
        return shiZhongCard_;
      }
      /**
       * <code>optional int32 shiZhongCard = 28;</code>
       *
       * <pre>
       *起手示众牌
       * </pre>
       */
      public Builder setShiZhongCard(int value) {
        bitField0_ |= 0x08000000;
        shiZhongCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 shiZhongCard = 28;</code>
       *
       * <pre>
       *起手示众牌
       * </pre>
       */
      public Builder clearShiZhongCard() {
        bitField0_ = (bitField0_ & ~0x08000000);
        shiZhongCard_ = 0;
        onChanged();
        return this;
      }

      // optional int64 coin = 29;
      private long coin_ ;
      /**
       * <code>optional int64 coin = 29;</code>
       *
       * <pre>
       * 新的金币
       * </pre>
       */
      public boolean hasCoin() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int64 coin = 29;</code>
       *
       * <pre>
       * 新的金币
       * </pre>
       */
      public long getCoin() {
        return coin_;
      }
      /**
       * <code>optional int64 coin = 29;</code>
       *
       * <pre>
       * 新的金币
       * </pre>
       */
      public Builder setCoin(long value) {
        bitField0_ |= 0x10000000;
        coin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 coin = 29;</code>
       *
       * <pre>
       * 新的金币
       * </pre>
       */
      public Builder clearCoin() {
        bitField0_ = (bitField0_ & ~0x10000000);
        coin_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 frameId = 30;
      private int frameId_ ;
      /**
       * <code>optional int32 frameId = 30;</code>
       *
       * <pre>
       * 头像框id
       * </pre>
       */
      public boolean hasFrameId() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional int32 frameId = 30;</code>
       *
       * <pre>
       * 头像框id
       * </pre>
       */
      public int getFrameId() {
        return frameId_;
      }
      /**
       * <code>optional int32 frameId = 30;</code>
       *
       * <pre>
       * 头像框id
       * </pre>
       */
      public Builder setFrameId(int value) {
        bitField0_ |= 0x20000000;
        frameId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 frameId = 30;</code>
       *
       * <pre>
       * 头像框id
       * </pre>
       */
      public Builder clearFrameId() {
        bitField0_ = (bitField0_ & ~0x20000000);
        frameId_ = 0;
        onChanged();
        return this;
      }

      // optional int64 score = 31;
      private long score_ ;
      /**
       * <code>optional int64 score = 31;</code>
       *
       * <pre>
       * 棋分
       * </pre>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional int64 score = 31;</code>
       *
       * <pre>
       * 棋分
       * </pre>
       */
      public long getScore() {
        return score_;
      }
      /**
       * <code>optional int64 score = 31;</code>
       *
       * <pre>
       * 棋分
       * </pre>
       */
      public Builder setScore(long value) {
        bitField0_ |= 0x40000000;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 score = 31;</code>
       *
       * <pre>
       * 棋分
       * </pre>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x40000000);
        score_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.PlayerInTableRes)
    }

    static {
      defaultInstance = new PlayerInTableRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.PlayerInTableRes)
  }

  public interface PlayerPointDetailOrBuilder
      extends com.google.protobuf.MessageOrBuilder {
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.PlayerPointDetail}
   *
   * <pre>
   * 打筒子玩家状态栏信息
   * </pre>
   */
  public static final class PlayerPointDetail extends
      com.google.protobuf.GeneratedMessage
      implements PlayerPointDetailOrBuilder {
    // Use PlayerPointDetail.newBuilder() to construct.
    private PlayerPointDetail(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PlayerPointDetail(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PlayerPointDetail defaultInstance;
    public static PlayerPointDetail getDefaultInstance() {
      return defaultInstance;
    }

    public PlayerPointDetail getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PlayerPointDetail(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_PlayerPointDetail_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_PlayerPointDetail_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail.class, com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail.Builder.class);
    }

    public static com.google.protobuf.Parser<PlayerPointDetail> PARSER =
        new com.google.protobuf.AbstractParser<PlayerPointDetail>() {
      public PlayerPointDetail parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PlayerPointDetail(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PlayerPointDetail> getParserForType() {
      return PARSER;
    }

    private void initFields() {
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.PlayerPointDetail}
     *
     * <pre>
     * 打筒子玩家状态栏信息
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetailOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_PlayerPointDetail_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_PlayerPointDetail_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail.class, com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_PlayerPointDetail_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail build() {
        com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail result = new com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail(this);
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail.getDefaultInstance()) return this;
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.PlayerPointDetail) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.PlayerPointDetail)
    }

    static {
      defaultInstance = new PlayerPointDetail(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.PlayerPointDetail)
  }

  public interface DealInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 handCardIds = 1;
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardIdsList();
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    int getHandCardIdsCount();
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    int getHandCardIds(int index);

    // required int32 nextSeat = 2;
    /**
     * <code>required int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    boolean hasNextSeat();
    /**
     * <code>required int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    int getNextSeat();

    // optional int32 gameType = 3;
    /**
     * <code>optional int32 gameType = 3;</code>
     *
     * <pre>
     *游戏类型
     * </pre>
     */
    boolean hasGameType();
    /**
     * <code>optional int32 gameType = 3;</code>
     *
     * <pre>
     *游戏类型
     * </pre>
     */
    int getGameType();

    // optional int32 remain = 4;
    /**
     * <code>optional int32 remain = 4;</code>
     */
    boolean hasRemain();
    /**
     * <code>optional int32 remain = 4;</code>
     */
    int getRemain();

    // repeated int32 selfAct = 5;
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.Integer> getSelfActList();
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    int getSelfActCount();
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    int getSelfAct(int index);

    // optional int32 banker = 6;
    /**
     * <code>optional int32 banker = 6;</code>
     *
     * <pre>
     *庄家座位
     * </pre>
     */
    boolean hasBanker();
    /**
     * <code>optional int32 banker = 6;</code>
     *
     * <pre>
     *庄家座位
     * </pre>
     */
    int getBanker();

    // repeated int32 xiaohu = 7;
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    java.util.List<java.lang.Integer> getXiaohuList();
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    int getXiaohuCount();
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    int getXiaohu(int index);

    // repeated int32 levelCardIds = 8;
    /**
     * <code>repeated int32 levelCardIds = 8;</code>
     *
     * <pre>
     *级牌牌组id
     * </pre>
     */
    java.util.List<java.lang.Integer> getLevelCardIdsList();
    /**
     * <code>repeated int32 levelCardIds = 8;</code>
     *
     * <pre>
     *级牌牌组id
     * </pre>
     */
    int getLevelCardIdsCount();
    /**
     * <code>repeated int32 levelCardIds = 8;</code>
     *
     * <pre>
     *级牌牌组id
     * </pre>
     */
    int getLevelCardIds(int index);

    // optional int32 baoting = 9;
    /**
     * <code>optional int32 baoting = 9;</code>
     *
     * <pre>
     *闲家是否有报听
     * </pre>
     */
    boolean hasBaoting();
    /**
     * <code>optional int32 baoting = 9;</code>
     *
     * <pre>
     *闲家是否有报听
     * </pre>
     */
    int getBaoting();

    // optional int32 seat = 10;
    /**
     * <code>optional int32 seat = 10;</code>
     *
     * <pre>
     *座位号
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>optional int32 seat = 10;</code>
     *
     * <pre>
     *座位号
     * </pre>
     */
    int getSeat();

    // optional int32 dealDice = 11;
    /**
     * <code>optional int32 dealDice = 11;</code>
     *
     * <pre>
     *发牌色子值，一个两位数，十位、个位各代表一个色子值
     * </pre>
     */
    boolean hasDealDice();
    /**
     * <code>optional int32 dealDice = 11;</code>
     *
     * <pre>
     *发牌色子值，一个两位数，十位、个位各代表一个色子值
     * </pre>
     */
    int getDealDice();

    // optional int32 laiZiVal = 12;
    /**
     * <code>optional int32 laiZiVal = 12;</code>
     *
     * <pre>
     *癞子牌的值，1000表示没有癞子
     * </pre>
     */
    boolean hasLaiZiVal();
    /**
     * <code>optional int32 laiZiVal = 12;</code>
     *
     * <pre>
     *癞子牌的值，1000表示没有癞子
     * </pre>
     */
    int getLaiZiVal();

    // optional int32 diCardId = 13;
    /**
     * <code>optional int32 diCardId = 13;</code>
     *
     * <pre>
     *地牌ID
     * </pre>
     */
    boolean hasDiCardId();
    /**
     * <code>optional int32 diCardId = 13;</code>
     *
     * <pre>
     *地牌ID
     * </pre>
     */
    int getDiCardId();

    // optional int32 kingCardId = 14;
    /**
     * <code>optional int32 kingCardId = 14;</code>
     *
     * <pre>
     *王牌ID
     * </pre>
     */
    boolean hasKingCardId();
    /**
     * <code>optional int32 kingCardId = 14;</code>
     *
     * <pre>
     *王牌ID
     * </pre>
     */
    int getKingCardId();

    // repeated int32 horses = 15;
    /**
     * <code>repeated int32 horses = 15;</code>
     *
     * <pre>
     *买的马,麻将ID
     * </pre>
     */
    java.util.List<java.lang.Integer> getHorsesList();
    /**
     * <code>repeated int32 horses = 15;</code>
     *
     * <pre>
     *买的马,麻将ID
     * </pre>
     */
    int getHorsesCount();
    /**
     * <code>repeated int32 horses = 15;</code>
     *
     * <pre>
     *买的马,麻将ID
     * </pre>
     */
    int getHorses(int index);

    // optional int32 nextDisCardIndex = 16;
    /**
     * <code>optional int32 nextDisCardIndex = 16;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    boolean hasNextDisCardIndex();
    /**
     * <code>optional int32 nextDisCardIndex = 16;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    int getNextDisCardIndex();

    // optional int32 dealDiceFloorIndex = 17;
    /**
     * <code>optional int32 dealDiceFloorIndex = 17;</code>
     *
     * <pre>
     *定地牌摇的骰子
     * </pre>
     */
    boolean hasDealDiceFloorIndex();
    /**
     * <code>optional int32 dealDiceFloorIndex = 17;</code>
     *
     * <pre>
     *定地牌摇的骰子
     * </pre>
     */
    int getDealDiceFloorIndex();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.DealInfoRes}
   *
   * <pre>
   *发牌
   * </pre>
   */
  public static final class DealInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements DealInfoResOrBuilder {
    // Use DealInfoRes.newBuilder() to construct.
    private DealInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DealInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DealInfoRes defaultInstance;
    public static DealInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public DealInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DealInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                handCardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              handCardIds_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                handCardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              nextSeat_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              gameType_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              remain_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              selfAct_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                selfAct_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              banker_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                xiaohu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              xiaohu_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                xiaohu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                xiaohu_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                levelCardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              levelCardIds_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                levelCardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                levelCardIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000010;
              baoting_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              seat_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              dealDice_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              laiZiVal_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000100;
              diCardId_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00000200;
              kingCardId_ = input.readInt32();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                horses_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              horses_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                horses_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                horses_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              bitField0_ |= 0x00000400;
              nextDisCardIndex_ = input.readInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00000800;
              dealDiceFloorIndex_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          handCardIds_ = java.util.Collections.unmodifiableList(handCardIds_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          xiaohu_ = java.util.Collections.unmodifiableList(xiaohu_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          levelCardIds_ = java.util.Collections.unmodifiableList(levelCardIds_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          horses_ = java.util.Collections.unmodifiableList(horses_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_DealInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_DealInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.DealInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.DealInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<DealInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<DealInfoRes>() {
      public DealInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DealInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DealInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 handCardIds = 1;
    public static final int HANDCARDIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> handCardIds_;
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardIdsList() {
      return handCardIds_;
    }
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public int getHandCardIdsCount() {
      return handCardIds_.size();
    }
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public int getHandCardIds(int index) {
      return handCardIds_.get(index);
    }

    // required int32 nextSeat = 2;
    public static final int NEXTSEAT_FIELD_NUMBER = 2;
    private int nextSeat_;
    /**
     * <code>required int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    public boolean hasNextSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    public int getNextSeat() {
      return nextSeat_;
    }

    // optional int32 gameType = 3;
    public static final int GAMETYPE_FIELD_NUMBER = 3;
    private int gameType_;
    /**
     * <code>optional int32 gameType = 3;</code>
     *
     * <pre>
     *游戏类型
     * </pre>
     */
    public boolean hasGameType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 gameType = 3;</code>
     *
     * <pre>
     *游戏类型
     * </pre>
     */
    public int getGameType() {
      return gameType_;
    }

    // optional int32 remain = 4;
    public static final int REMAIN_FIELD_NUMBER = 4;
    private int remain_;
    /**
     * <code>optional int32 remain = 4;</code>
     */
    public boolean hasRemain() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 remain = 4;</code>
     */
    public int getRemain() {
      return remain_;
    }

    // repeated int32 selfAct = 5;
    public static final int SELFACT_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> selfAct_;
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSelfActList() {
      return selfAct_;
    }
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    public int getSelfActCount() {
      return selfAct_.size();
    }
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    public int getSelfAct(int index) {
      return selfAct_.get(index);
    }

    // optional int32 banker = 6;
    public static final int BANKER_FIELD_NUMBER = 6;
    private int banker_;
    /**
     * <code>optional int32 banker = 6;</code>
     *
     * <pre>
     *庄家座位
     * </pre>
     */
    public boolean hasBanker() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 banker = 6;</code>
     *
     * <pre>
     *庄家座位
     * </pre>
     */
    public int getBanker() {
      return banker_;
    }

    // repeated int32 xiaohu = 7;
    public static final int XIAOHU_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> xiaohu_;
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getXiaohuList() {
      return xiaohu_;
    }
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    public int getXiaohuCount() {
      return xiaohu_.size();
    }
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    public int getXiaohu(int index) {
      return xiaohu_.get(index);
    }

    // repeated int32 levelCardIds = 8;
    public static final int LEVELCARDIDS_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> levelCardIds_;
    /**
     * <code>repeated int32 levelCardIds = 8;</code>
     *
     * <pre>
     *级牌牌组id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLevelCardIdsList() {
      return levelCardIds_;
    }
    /**
     * <code>repeated int32 levelCardIds = 8;</code>
     *
     * <pre>
     *级牌牌组id
     * </pre>
     */
    public int getLevelCardIdsCount() {
      return levelCardIds_.size();
    }
    /**
     * <code>repeated int32 levelCardIds = 8;</code>
     *
     * <pre>
     *级牌牌组id
     * </pre>
     */
    public int getLevelCardIds(int index) {
      return levelCardIds_.get(index);
    }

    // optional int32 baoting = 9;
    public static final int BAOTING_FIELD_NUMBER = 9;
    private int baoting_;
    /**
     * <code>optional int32 baoting = 9;</code>
     *
     * <pre>
     *闲家是否有报听
     * </pre>
     */
    public boolean hasBaoting() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 baoting = 9;</code>
     *
     * <pre>
     *闲家是否有报听
     * </pre>
     */
    public int getBaoting() {
      return baoting_;
    }

    // optional int32 seat = 10;
    public static final int SEAT_FIELD_NUMBER = 10;
    private int seat_;
    /**
     * <code>optional int32 seat = 10;</code>
     *
     * <pre>
     *座位号
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 seat = 10;</code>
     *
     * <pre>
     *座位号
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // optional int32 dealDice = 11;
    public static final int DEALDICE_FIELD_NUMBER = 11;
    private int dealDice_;
    /**
     * <code>optional int32 dealDice = 11;</code>
     *
     * <pre>
     *发牌色子值，一个两位数，十位、个位各代表一个色子值
     * </pre>
     */
    public boolean hasDealDice() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 dealDice = 11;</code>
     *
     * <pre>
     *发牌色子值，一个两位数，十位、个位各代表一个色子值
     * </pre>
     */
    public int getDealDice() {
      return dealDice_;
    }

    // optional int32 laiZiVal = 12;
    public static final int LAIZIVAL_FIELD_NUMBER = 12;
    private int laiZiVal_;
    /**
     * <code>optional int32 laiZiVal = 12;</code>
     *
     * <pre>
     *癞子牌的值，1000表示没有癞子
     * </pre>
     */
    public boolean hasLaiZiVal() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 laiZiVal = 12;</code>
     *
     * <pre>
     *癞子牌的值，1000表示没有癞子
     * </pre>
     */
    public int getLaiZiVal() {
      return laiZiVal_;
    }

    // optional int32 diCardId = 13;
    public static final int DICARDID_FIELD_NUMBER = 13;
    private int diCardId_;
    /**
     * <code>optional int32 diCardId = 13;</code>
     *
     * <pre>
     *地牌ID
     * </pre>
     */
    public boolean hasDiCardId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 diCardId = 13;</code>
     *
     * <pre>
     *地牌ID
     * </pre>
     */
    public int getDiCardId() {
      return diCardId_;
    }

    // optional int32 kingCardId = 14;
    public static final int KINGCARDID_FIELD_NUMBER = 14;
    private int kingCardId_;
    /**
     * <code>optional int32 kingCardId = 14;</code>
     *
     * <pre>
     *王牌ID
     * </pre>
     */
    public boolean hasKingCardId() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 kingCardId = 14;</code>
     *
     * <pre>
     *王牌ID
     * </pre>
     */
    public int getKingCardId() {
      return kingCardId_;
    }

    // repeated int32 horses = 15;
    public static final int HORSES_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> horses_;
    /**
     * <code>repeated int32 horses = 15;</code>
     *
     * <pre>
     *买的马,麻将ID
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHorsesList() {
      return horses_;
    }
    /**
     * <code>repeated int32 horses = 15;</code>
     *
     * <pre>
     *买的马,麻将ID
     * </pre>
     */
    public int getHorsesCount() {
      return horses_.size();
    }
    /**
     * <code>repeated int32 horses = 15;</code>
     *
     * <pre>
     *买的马,麻将ID
     * </pre>
     */
    public int getHorses(int index) {
      return horses_.get(index);
    }

    // optional int32 nextDisCardIndex = 16;
    public static final int NEXTDISCARDINDEX_FIELD_NUMBER = 16;
    private int nextDisCardIndex_;
    /**
     * <code>optional int32 nextDisCardIndex = 16;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    public boolean hasNextDisCardIndex() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 nextDisCardIndex = 16;</code>
     *
     * <pre>
     *下个地牌出现位置
     * </pre>
     */
    public int getNextDisCardIndex() {
      return nextDisCardIndex_;
    }

    // optional int32 dealDiceFloorIndex = 17;
    public static final int DEALDICEFLOORINDEX_FIELD_NUMBER = 17;
    private int dealDiceFloorIndex_;
    /**
     * <code>optional int32 dealDiceFloorIndex = 17;</code>
     *
     * <pre>
     *定地牌摇的骰子
     * </pre>
     */
    public boolean hasDealDiceFloorIndex() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 dealDiceFloorIndex = 17;</code>
     *
     * <pre>
     *定地牌摇的骰子
     * </pre>
     */
    public int getDealDiceFloorIndex() {
      return dealDiceFloorIndex_;
    }

    private void initFields() {
      handCardIds_ = java.util.Collections.emptyList();
      nextSeat_ = 0;
      gameType_ = 0;
      remain_ = 0;
      selfAct_ = java.util.Collections.emptyList();
      banker_ = 0;
      xiaohu_ = java.util.Collections.emptyList();
      levelCardIds_ = java.util.Collections.emptyList();
      baoting_ = 0;
      seat_ = 0;
      dealDice_ = 0;
      laiZiVal_ = 0;
      diCardId_ = 0;
      kingCardId_ = 0;
      horses_ = java.util.Collections.emptyList();
      nextDisCardIndex_ = 0;
      dealDiceFloorIndex_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasNextSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < handCardIds_.size(); i++) {
        output.writeInt32(1, handCardIds_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, nextSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, gameType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, remain_);
      }
      for (int i = 0; i < selfAct_.size(); i++) {
        output.writeInt32(5, selfAct_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, banker_);
      }
      for (int i = 0; i < xiaohu_.size(); i++) {
        output.writeInt32(7, xiaohu_.get(i));
      }
      for (int i = 0; i < levelCardIds_.size(); i++) {
        output.writeInt32(8, levelCardIds_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(9, baoting_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(10, seat_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(11, dealDice_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(12, laiZiVal_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(13, diCardId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(14, kingCardId_);
      }
      for (int i = 0; i < horses_.size(); i++) {
        output.writeInt32(15, horses_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(16, nextDisCardIndex_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(17, dealDiceFloorIndex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < handCardIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardIds_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardIdsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nextSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, remain_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < selfAct_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(selfAct_.get(i));
        }
        size += dataSize;
        size += 1 * getSelfActList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, banker_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < xiaohu_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(xiaohu_.get(i));
        }
        size += dataSize;
        size += 1 * getXiaohuList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < levelCardIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(levelCardIds_.get(i));
        }
        size += dataSize;
        size += 1 * getLevelCardIdsList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, baoting_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, seat_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, dealDice_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, laiZiVal_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, diCardId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, kingCardId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < horses_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(horses_.get(i));
        }
        size += dataSize;
        size += 1 * getHorsesList().size();
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, nextDisCardIndex_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, dealDiceFloorIndex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.DealInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.DealInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.DealInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.DealInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.DealInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.DealInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.DealInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.DealInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.DealInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.DealInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.DealInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.DealInfoRes}
     *
     * <pre>
     *发牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.DealInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_DealInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_DealInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.DealInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.DealInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.DealInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        handCardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        nextSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        remain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        banker_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        xiaohu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        levelCardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        baoting_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        dealDice_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        laiZiVal_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        diCardId_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        kingCardId_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        horses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        nextDisCardIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        dealDiceFloorIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_DealInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.DealInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.DealInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.DealInfoRes build() {
        com.sy599.game.msg.serverPacket.TableRes.DealInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.DealInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.DealInfoRes result = new com.sy599.game.msg.serverPacket.TableRes.DealInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          handCardIds_ = java.util.Collections.unmodifiableList(handCardIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.handCardIds_ = handCardIds_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nextSeat_ = nextSeat_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameType_ = gameType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.remain_ = remain_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.selfAct_ = selfAct_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.banker_ = banker_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          xiaohu_ = java.util.Collections.unmodifiableList(xiaohu_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.xiaohu_ = xiaohu_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          levelCardIds_ = java.util.Collections.unmodifiableList(levelCardIds_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.levelCardIds_ = levelCardIds_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.baoting_ = baoting_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        result.dealDice_ = dealDice_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000080;
        }
        result.laiZiVal_ = laiZiVal_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.diCardId_ = diCardId_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.kingCardId_ = kingCardId_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          horses_ = java.util.Collections.unmodifiableList(horses_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.horses_ = horses_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.nextDisCardIndex_ = nextDisCardIndex_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.dealDiceFloorIndex_ = dealDiceFloorIndex_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.DealInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.DealInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.DealInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.DealInfoRes.getDefaultInstance()) return this;
        if (!other.handCardIds_.isEmpty()) {
          if (handCardIds_.isEmpty()) {
            handCardIds_ = other.handCardIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHandCardIdsIsMutable();
            handCardIds_.addAll(other.handCardIds_);
          }
          onChanged();
        }
        if (other.hasNextSeat()) {
          setNextSeat(other.getNextSeat());
        }
        if (other.hasGameType()) {
          setGameType(other.getGameType());
        }
        if (other.hasRemain()) {
          setRemain(other.getRemain());
        }
        if (!other.selfAct_.isEmpty()) {
          if (selfAct_.isEmpty()) {
            selfAct_ = other.selfAct_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSelfActIsMutable();
            selfAct_.addAll(other.selfAct_);
          }
          onChanged();
        }
        if (other.hasBanker()) {
          setBanker(other.getBanker());
        }
        if (!other.xiaohu_.isEmpty()) {
          if (xiaohu_.isEmpty()) {
            xiaohu_ = other.xiaohu_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureXiaohuIsMutable();
            xiaohu_.addAll(other.xiaohu_);
          }
          onChanged();
        }
        if (!other.levelCardIds_.isEmpty()) {
          if (levelCardIds_.isEmpty()) {
            levelCardIds_ = other.levelCardIds_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureLevelCardIdsIsMutable();
            levelCardIds_.addAll(other.levelCardIds_);
          }
          onChanged();
        }
        if (other.hasBaoting()) {
          setBaoting(other.getBaoting());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasDealDice()) {
          setDealDice(other.getDealDice());
        }
        if (other.hasLaiZiVal()) {
          setLaiZiVal(other.getLaiZiVal());
        }
        if (other.hasDiCardId()) {
          setDiCardId(other.getDiCardId());
        }
        if (other.hasKingCardId()) {
          setKingCardId(other.getKingCardId());
        }
        if (!other.horses_.isEmpty()) {
          if (horses_.isEmpty()) {
            horses_ = other.horses_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureHorsesIsMutable();
            horses_.addAll(other.horses_);
          }
          onChanged();
        }
        if (other.hasNextDisCardIndex()) {
          setNextDisCardIndex(other.getNextDisCardIndex());
        }
        if (other.hasDealDiceFloorIndex()) {
          setDealDiceFloorIndex(other.getDealDiceFloorIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNextSeat()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.DealInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.DealInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 handCardIds = 1;
      private java.util.List<java.lang.Integer> handCardIds_ = java.util.Collections.emptyList();
      private void ensureHandCardIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          handCardIds_ = new java.util.ArrayList<java.lang.Integer>(handCardIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardIdsList() {
        return java.util.Collections.unmodifiableList(handCardIds_);
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public int getHandCardIdsCount() {
        return handCardIds_.size();
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public int getHandCardIds(int index) {
        return handCardIds_.get(index);
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder setHandCardIds(
          int index, int value) {
        ensureHandCardIdsIsMutable();
        handCardIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder addHandCardIds(int value) {
        ensureHandCardIdsIsMutable();
        handCardIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder addAllHandCardIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardIdsIsMutable();
        super.addAll(values, handCardIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder clearHandCardIds() {
        handCardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // required int32 nextSeat = 2;
      private int nextSeat_ ;
      /**
       * <code>required int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public boolean hasNextSeat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public int getNextSeat() {
        return nextSeat_;
      }
      /**
       * <code>required int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public Builder setNextSeat(int value) {
        bitField0_ |= 0x00000002;
        nextSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public Builder clearNextSeat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nextSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gameType = 3;
      private int gameType_ ;
      /**
       * <code>optional int32 gameType = 3;</code>
       *
       * <pre>
       *游戏类型
       * </pre>
       */
      public boolean hasGameType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 gameType = 3;</code>
       *
       * <pre>
       *游戏类型
       * </pre>
       */
      public int getGameType() {
        return gameType_;
      }
      /**
       * <code>optional int32 gameType = 3;</code>
       *
       * <pre>
       *游戏类型
       * </pre>
       */
      public Builder setGameType(int value) {
        bitField0_ |= 0x00000004;
        gameType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gameType = 3;</code>
       *
       * <pre>
       *游戏类型
       * </pre>
       */
      public Builder clearGameType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remain = 4;
      private int remain_ ;
      /**
       * <code>optional int32 remain = 4;</code>
       */
      public boolean hasRemain() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 remain = 4;</code>
       */
      public int getRemain() {
        return remain_;
      }
      /**
       * <code>optional int32 remain = 4;</code>
       */
      public Builder setRemain(int value) {
        bitField0_ |= 0x00000008;
        remain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remain = 4;</code>
       */
      public Builder clearRemain() {
        bitField0_ = (bitField0_ & ~0x00000008);
        remain_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 selfAct = 5;
      private java.util.List<java.lang.Integer> selfAct_ = java.util.Collections.emptyList();
      private void ensureSelfActIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = new java.util.ArrayList<java.lang.Integer>(selfAct_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSelfActList() {
        return java.util.Collections.unmodifiableList(selfAct_);
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public int getSelfActCount() {
        return selfAct_.size();
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public int getSelfAct(int index) {
        return selfAct_.get(index);
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setSelfAct(
          int index, int value) {
        ensureSelfActIsMutable();
        selfAct_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addSelfAct(int value) {
        ensureSelfActIsMutable();
        selfAct_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllSelfAct(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSelfActIsMutable();
        super.addAll(values, selfAct_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearSelfAct() {
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional int32 banker = 6;
      private int banker_ ;
      /**
       * <code>optional int32 banker = 6;</code>
       *
       * <pre>
       *庄家座位
       * </pre>
       */
      public boolean hasBanker() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 banker = 6;</code>
       *
       * <pre>
       *庄家座位
       * </pre>
       */
      public int getBanker() {
        return banker_;
      }
      /**
       * <code>optional int32 banker = 6;</code>
       *
       * <pre>
       *庄家座位
       * </pre>
       */
      public Builder setBanker(int value) {
        bitField0_ |= 0x00000020;
        banker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker = 6;</code>
       *
       * <pre>
       *庄家座位
       * </pre>
       */
      public Builder clearBanker() {
        bitField0_ = (bitField0_ & ~0x00000020);
        banker_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 xiaohu = 7;
      private java.util.List<java.lang.Integer> xiaohu_ = java.util.Collections.emptyList();
      private void ensureXiaohuIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          xiaohu_ = new java.util.ArrayList<java.lang.Integer>(xiaohu_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getXiaohuList() {
        return java.util.Collections.unmodifiableList(xiaohu_);
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public int getXiaohuCount() {
        return xiaohu_.size();
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public int getXiaohu(int index) {
        return xiaohu_.get(index);
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public Builder setXiaohu(
          int index, int value) {
        ensureXiaohuIsMutable();
        xiaohu_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public Builder addXiaohu(int value) {
        ensureXiaohuIsMutable();
        xiaohu_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public Builder addAllXiaohu(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureXiaohuIsMutable();
        super.addAll(values, xiaohu_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public Builder clearXiaohu() {
        xiaohu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // repeated int32 levelCardIds = 8;
      private java.util.List<java.lang.Integer> levelCardIds_ = java.util.Collections.emptyList();
      private void ensureLevelCardIdsIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          levelCardIds_ = new java.util.ArrayList<java.lang.Integer>(levelCardIds_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 levelCardIds = 8;</code>
       *
       * <pre>
       *级牌牌组id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLevelCardIdsList() {
        return java.util.Collections.unmodifiableList(levelCardIds_);
      }
      /**
       * <code>repeated int32 levelCardIds = 8;</code>
       *
       * <pre>
       *级牌牌组id
       * </pre>
       */
      public int getLevelCardIdsCount() {
        return levelCardIds_.size();
      }
      /**
       * <code>repeated int32 levelCardIds = 8;</code>
       *
       * <pre>
       *级牌牌组id
       * </pre>
       */
      public int getLevelCardIds(int index) {
        return levelCardIds_.get(index);
      }
      /**
       * <code>repeated int32 levelCardIds = 8;</code>
       *
       * <pre>
       *级牌牌组id
       * </pre>
       */
      public Builder setLevelCardIds(
          int index, int value) {
        ensureLevelCardIdsIsMutable();
        levelCardIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 levelCardIds = 8;</code>
       *
       * <pre>
       *级牌牌组id
       * </pre>
       */
      public Builder addLevelCardIds(int value) {
        ensureLevelCardIdsIsMutable();
        levelCardIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 levelCardIds = 8;</code>
       *
       * <pre>
       *级牌牌组id
       * </pre>
       */
      public Builder addAllLevelCardIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLevelCardIdsIsMutable();
        super.addAll(values, levelCardIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 levelCardIds = 8;</code>
       *
       * <pre>
       *级牌牌组id
       * </pre>
       */
      public Builder clearLevelCardIds() {
        levelCardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // optional int32 baoting = 9;
      private int baoting_ ;
      /**
       * <code>optional int32 baoting = 9;</code>
       *
       * <pre>
       *闲家是否有报听
       * </pre>
       */
      public boolean hasBaoting() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 baoting = 9;</code>
       *
       * <pre>
       *闲家是否有报听
       * </pre>
       */
      public int getBaoting() {
        return baoting_;
      }
      /**
       * <code>optional int32 baoting = 9;</code>
       *
       * <pre>
       *闲家是否有报听
       * </pre>
       */
      public Builder setBaoting(int value) {
        bitField0_ |= 0x00000100;
        baoting_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baoting = 9;</code>
       *
       * <pre>
       *闲家是否有报听
       * </pre>
       */
      public Builder clearBaoting() {
        bitField0_ = (bitField0_ & ~0x00000100);
        baoting_ = 0;
        onChanged();
        return this;
      }

      // optional int32 seat = 10;
      private int seat_ ;
      /**
       * <code>optional int32 seat = 10;</code>
       *
       * <pre>
       *座位号
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 seat = 10;</code>
       *
       * <pre>
       *座位号
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>optional int32 seat = 10;</code>
       *
       * <pre>
       *座位号
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000200;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 seat = 10;</code>
       *
       * <pre>
       *座位号
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000200);
        seat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dealDice = 11;
      private int dealDice_ ;
      /**
       * <code>optional int32 dealDice = 11;</code>
       *
       * <pre>
       *发牌色子值，一个两位数，十位、个位各代表一个色子值
       * </pre>
       */
      public boolean hasDealDice() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 dealDice = 11;</code>
       *
       * <pre>
       *发牌色子值，一个两位数，十位、个位各代表一个色子值
       * </pre>
       */
      public int getDealDice() {
        return dealDice_;
      }
      /**
       * <code>optional int32 dealDice = 11;</code>
       *
       * <pre>
       *发牌色子值，一个两位数，十位、个位各代表一个色子值
       * </pre>
       */
      public Builder setDealDice(int value) {
        bitField0_ |= 0x00000400;
        dealDice_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dealDice = 11;</code>
       *
       * <pre>
       *发牌色子值，一个两位数，十位、个位各代表一个色子值
       * </pre>
       */
      public Builder clearDealDice() {
        bitField0_ = (bitField0_ & ~0x00000400);
        dealDice_ = 0;
        onChanged();
        return this;
      }

      // optional int32 laiZiVal = 12;
      private int laiZiVal_ ;
      /**
       * <code>optional int32 laiZiVal = 12;</code>
       *
       * <pre>
       *癞子牌的值，1000表示没有癞子
       * </pre>
       */
      public boolean hasLaiZiVal() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 laiZiVal = 12;</code>
       *
       * <pre>
       *癞子牌的值，1000表示没有癞子
       * </pre>
       */
      public int getLaiZiVal() {
        return laiZiVal_;
      }
      /**
       * <code>optional int32 laiZiVal = 12;</code>
       *
       * <pre>
       *癞子牌的值，1000表示没有癞子
       * </pre>
       */
      public Builder setLaiZiVal(int value) {
        bitField0_ |= 0x00000800;
        laiZiVal_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 laiZiVal = 12;</code>
       *
       * <pre>
       *癞子牌的值，1000表示没有癞子
       * </pre>
       */
      public Builder clearLaiZiVal() {
        bitField0_ = (bitField0_ & ~0x00000800);
        laiZiVal_ = 0;
        onChanged();
        return this;
      }

      // optional int32 diCardId = 13;
      private int diCardId_ ;
      /**
       * <code>optional int32 diCardId = 13;</code>
       *
       * <pre>
       *地牌ID
       * </pre>
       */
      public boolean hasDiCardId() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 diCardId = 13;</code>
       *
       * <pre>
       *地牌ID
       * </pre>
       */
      public int getDiCardId() {
        return diCardId_;
      }
      /**
       * <code>optional int32 diCardId = 13;</code>
       *
       * <pre>
       *地牌ID
       * </pre>
       */
      public Builder setDiCardId(int value) {
        bitField0_ |= 0x00001000;
        diCardId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 diCardId = 13;</code>
       *
       * <pre>
       *地牌ID
       * </pre>
       */
      public Builder clearDiCardId() {
        bitField0_ = (bitField0_ & ~0x00001000);
        diCardId_ = 0;
        onChanged();
        return this;
      }

      // optional int32 kingCardId = 14;
      private int kingCardId_ ;
      /**
       * <code>optional int32 kingCardId = 14;</code>
       *
       * <pre>
       *王牌ID
       * </pre>
       */
      public boolean hasKingCardId() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 kingCardId = 14;</code>
       *
       * <pre>
       *王牌ID
       * </pre>
       */
      public int getKingCardId() {
        return kingCardId_;
      }
      /**
       * <code>optional int32 kingCardId = 14;</code>
       *
       * <pre>
       *王牌ID
       * </pre>
       */
      public Builder setKingCardId(int value) {
        bitField0_ |= 0x00002000;
        kingCardId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kingCardId = 14;</code>
       *
       * <pre>
       *王牌ID
       * </pre>
       */
      public Builder clearKingCardId() {
        bitField0_ = (bitField0_ & ~0x00002000);
        kingCardId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 horses = 15;
      private java.util.List<java.lang.Integer> horses_ = java.util.Collections.emptyList();
      private void ensureHorsesIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          horses_ = new java.util.ArrayList<java.lang.Integer>(horses_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 horses = 15;</code>
       *
       * <pre>
       *买的马,麻将ID
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHorsesList() {
        return java.util.Collections.unmodifiableList(horses_);
      }
      /**
       * <code>repeated int32 horses = 15;</code>
       *
       * <pre>
       *买的马,麻将ID
       * </pre>
       */
      public int getHorsesCount() {
        return horses_.size();
      }
      /**
       * <code>repeated int32 horses = 15;</code>
       *
       * <pre>
       *买的马,麻将ID
       * </pre>
       */
      public int getHorses(int index) {
        return horses_.get(index);
      }
      /**
       * <code>repeated int32 horses = 15;</code>
       *
       * <pre>
       *买的马,麻将ID
       * </pre>
       */
      public Builder setHorses(
          int index, int value) {
        ensureHorsesIsMutable();
        horses_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 horses = 15;</code>
       *
       * <pre>
       *买的马,麻将ID
       * </pre>
       */
      public Builder addHorses(int value) {
        ensureHorsesIsMutable();
        horses_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 horses = 15;</code>
       *
       * <pre>
       *买的马,麻将ID
       * </pre>
       */
      public Builder addAllHorses(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHorsesIsMutable();
        super.addAll(values, horses_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 horses = 15;</code>
       *
       * <pre>
       *买的马,麻将ID
       * </pre>
       */
      public Builder clearHorses() {
        horses_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // optional int32 nextDisCardIndex = 16;
      private int nextDisCardIndex_ ;
      /**
       * <code>optional int32 nextDisCardIndex = 16;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public boolean hasNextDisCardIndex() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 nextDisCardIndex = 16;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public int getNextDisCardIndex() {
        return nextDisCardIndex_;
      }
      /**
       * <code>optional int32 nextDisCardIndex = 16;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public Builder setNextDisCardIndex(int value) {
        bitField0_ |= 0x00008000;
        nextDisCardIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nextDisCardIndex = 16;</code>
       *
       * <pre>
       *下个地牌出现位置
       * </pre>
       */
      public Builder clearNextDisCardIndex() {
        bitField0_ = (bitField0_ & ~0x00008000);
        nextDisCardIndex_ = 0;
        onChanged();
        return this;
      }

      // optional int32 dealDiceFloorIndex = 17;
      private int dealDiceFloorIndex_ ;
      /**
       * <code>optional int32 dealDiceFloorIndex = 17;</code>
       *
       * <pre>
       *定地牌摇的骰子
       * </pre>
       */
      public boolean hasDealDiceFloorIndex() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 dealDiceFloorIndex = 17;</code>
       *
       * <pre>
       *定地牌摇的骰子
       * </pre>
       */
      public int getDealDiceFloorIndex() {
        return dealDiceFloorIndex_;
      }
      /**
       * <code>optional int32 dealDiceFloorIndex = 17;</code>
       *
       * <pre>
       *定地牌摇的骰子
       * </pre>
       */
      public Builder setDealDiceFloorIndex(int value) {
        bitField0_ |= 0x00010000;
        dealDiceFloorIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 dealDiceFloorIndex = 17;</code>
       *
       * <pre>
       *定地牌摇的骰子
       * </pre>
       */
      public Builder clearDealDiceFloorIndex() {
        bitField0_ = (bitField0_ & ~0x00010000);
        dealDiceFloorIndex_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.DealInfoRes)
    }

    static {
      defaultInstance = new DealInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.DealInfoRes)
  }

  public interface ClosingInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes> 
        getClosingPlayersList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes getClosingPlayers(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    int getClosingPlayersCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index);

    // repeated int32 bird = 2;
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    java.util.List<java.lang.Integer> getBirdList();
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    int getBirdCount();
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    int getBird(int index);

    // repeated int32 birdSeat = 3;
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    java.util.List<java.lang.Integer> getBirdSeatList();
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    int getBirdSeatCount();
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    int getBirdSeat(int index);

    // optional int32 isBreak = 4;
    /**
     * <code>optional int32 isBreak = 4;</code>
     */
    boolean hasIsBreak();
    /**
     * <code>optional int32 isBreak = 4;</code>
     */
    int getIsBreak();

    // optional int32 wanfa = 5;
    /**
     * <code>optional int32 wanfa = 5;</code>
     */
    boolean hasWanfa();
    /**
     * <code>optional int32 wanfa = 5;</code>
     */
    int getWanfa();

    // repeated string ext = 6;
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.String>
    getExtList();
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    java.lang.String getExt(int index);
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtBytes(int index);

    // repeated string matchExt = 7;
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    java.util.List<java.lang.String>
    getMatchExtList();
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    int getMatchExtCount();
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    java.lang.String getMatchExt(int index);
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    com.google.protobuf.ByteString
        getMatchExtBytes(int index);

    // repeated int32 cutCard = 8;
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCutCardList();
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    int getCutCardCount();
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    int getCutCard(int index);

    // repeated int32 cutDtzCard = 9;
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCutDtzCardList();
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    int getCutDtzCardCount();
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    int getCutDtzCard(int index);

    // optional int32 groupLogId = 10;
    /**
     * <code>optional int32 groupLogId = 10;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    boolean hasGroupLogId();
    /**
     * <code>optional int32 groupLogId = 10;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    int getGroupLogId();

    // repeated int32 intParams = 11;
    /**
     * <code>repeated int32 intParams = 11;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    java.util.List<java.lang.Integer> getIntParamsList();
    /**
     * <code>repeated int32 intParams = 11;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    int getIntParamsCount();
    /**
     * <code>repeated int32 intParams = 11;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    int getIntParams(int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingInfoRes}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class ClosingInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements ClosingInfoResOrBuilder {
    // Use ClosingInfoRes.newBuilder() to construct.
    private ClosingInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosingInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosingInfoRes defaultInstance;
    public static ClosingInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public ClosingInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosingInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes>();
                mutable_bitField0_ |= 0x00000001;
              }
              closingPlayers_.add(input.readMessage(com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                bird_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              bird_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                bird_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                bird_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                birdSeat_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              birdSeat_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                birdSeat_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                birdSeat_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000001;
              isBreak_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000002;
              wanfa_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                ext_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000020;
              }
              ext_.add(input.readBytes());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                matchExt_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000040;
              }
              matchExt_.add(input.readBytes());
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                cutCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              cutCard_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                cutCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                cutCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                cutDtzCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              cutDtzCard_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                cutDtzCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                cutDtzCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              bitField0_ |= 0x00000004;
              groupLogId_ = input.readInt32();
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                intParams_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              intParams_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                intParams_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                intParams_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          bird_ = java.util.Collections.unmodifiableList(bird_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          birdSeat_ = java.util.Collections.unmodifiableList(birdSeat_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(ext_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          matchExt_ = new com.google.protobuf.UnmodifiableLazyStringList(matchExt_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          cutCard_ = java.util.Collections.unmodifiableList(cutCard_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          cutDtzCard_ = java.util.Collections.unmodifiableList(cutDtzCard_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          intParams_ = java.util.Collections.unmodifiableList(intParams_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_ClosingInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_ClosingInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosingInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<ClosingInfoRes>() {
      public ClosingInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosingInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosingInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;
    public static final int CLOSINGPLAYERS_FIELD_NUMBER = 1;
    private java.util.List<com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes> closingPlayers_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes> getClosingPlayersList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    public int getClosingPlayersCount() {
      return closingPlayers_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    public com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes getClosingPlayers(int index) {
      return closingPlayers_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    public com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index) {
      return closingPlayers_.get(index);
    }

    // repeated int32 bird = 2;
    public static final int BIRD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> bird_;
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getBirdList() {
      return bird_;
    }
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    public int getBirdCount() {
      return bird_.size();
    }
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    public int getBird(int index) {
      return bird_.get(index);
    }

    // repeated int32 birdSeat = 3;
    public static final int BIRDSEAT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> birdSeat_;
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getBirdSeatList() {
      return birdSeat_;
    }
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    public int getBirdSeatCount() {
      return birdSeat_.size();
    }
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    public int getBirdSeat(int index) {
      return birdSeat_.get(index);
    }

    // optional int32 isBreak = 4;
    public static final int ISBREAK_FIELD_NUMBER = 4;
    private int isBreak_;
    /**
     * <code>optional int32 isBreak = 4;</code>
     */
    public boolean hasIsBreak() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 isBreak = 4;</code>
     */
    public int getIsBreak() {
      return isBreak_;
    }

    // optional int32 wanfa = 5;
    public static final int WANFA_FIELD_NUMBER = 5;
    private int wanfa_;
    /**
     * <code>optional int32 wanfa = 5;</code>
     */
    public boolean hasWanfa() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 wanfa = 5;</code>
     */
    public int getWanfa() {
      return wanfa_;
    }

    // repeated string ext = 6;
    public static final int EXT_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList ext_;
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.String>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    public java.lang.String getExt(int index) {
      return ext_.get(index);
    }
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtBytes(int index) {
      return ext_.getByteString(index);
    }

    // repeated string matchExt = 7;
    public static final int MATCHEXT_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList matchExt_;
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public java.util.List<java.lang.String>
        getMatchExtList() {
      return matchExt_;
    }
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public int getMatchExtCount() {
      return matchExt_.size();
    }
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public java.lang.String getMatchExt(int index) {
      return matchExt_.get(index);
    }
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMatchExtBytes(int index) {
      return matchExt_.getByteString(index);
    }

    // repeated int32 cutCard = 8;
    public static final int CUTCARD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> cutCard_;
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCutCardList() {
      return cutCard_;
    }
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    public int getCutCardCount() {
      return cutCard_.size();
    }
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    public int getCutCard(int index) {
      return cutCard_.get(index);
    }

    // repeated int32 cutDtzCard = 9;
    public static final int CUTDTZCARD_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> cutDtzCard_;
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCutDtzCardList() {
      return cutDtzCard_;
    }
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    public int getCutDtzCardCount() {
      return cutDtzCard_.size();
    }
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    public int getCutDtzCard(int index) {
      return cutDtzCard_.get(index);
    }

    // optional int32 groupLogId = 10;
    public static final int GROUPLOGID_FIELD_NUMBER = 10;
    private int groupLogId_;
    /**
     * <code>optional int32 groupLogId = 10;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    public boolean hasGroupLogId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 groupLogId = 10;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    public int getGroupLogId() {
      return groupLogId_;
    }

    // repeated int32 intParams = 11;
    public static final int INTPARAMS_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> intParams_;
    /**
     * <code>repeated int32 intParams = 11;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIntParamsList() {
      return intParams_;
    }
    /**
     * <code>repeated int32 intParams = 11;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public int getIntParamsCount() {
      return intParams_.size();
    }
    /**
     * <code>repeated int32 intParams = 11;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public int getIntParams(int index) {
      return intParams_.get(index);
    }

    private void initFields() {
      closingPlayers_ = java.util.Collections.emptyList();
      bird_ = java.util.Collections.emptyList();
      birdSeat_ = java.util.Collections.emptyList();
      isBreak_ = 0;
      wanfa_ = 0;
      ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      cutCard_ = java.util.Collections.emptyList();
      cutDtzCard_ = java.util.Collections.emptyList();
      groupLogId_ = 0;
      intParams_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getClosingPlayersCount(); i++) {
        if (!getClosingPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < closingPlayers_.size(); i++) {
        output.writeMessage(1, closingPlayers_.get(i));
      }
      for (int i = 0; i < bird_.size(); i++) {
        output.writeInt32(2, bird_.get(i));
      }
      for (int i = 0; i < birdSeat_.size(); i++) {
        output.writeInt32(3, birdSeat_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(4, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(5, wanfa_);
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeBytes(6, ext_.getByteString(i));
      }
      for (int i = 0; i < matchExt_.size(); i++) {
        output.writeBytes(7, matchExt_.getByteString(i));
      }
      for (int i = 0; i < cutCard_.size(); i++) {
        output.writeInt32(8, cutCard_.get(i));
      }
      for (int i = 0; i < cutDtzCard_.size(); i++) {
        output.writeInt32(9, cutDtzCard_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(10, groupLogId_);
      }
      for (int i = 0; i < intParams_.size(); i++) {
        output.writeInt32(11, intParams_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < closingPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, closingPlayers_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bird_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bird_.get(i));
        }
        size += dataSize;
        size += 1 * getBirdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < birdSeat_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(birdSeat_.get(i));
        }
        size += dataSize;
        size += 1 * getBirdSeatList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, wanfa_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ext_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getExtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < matchExt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(matchExt_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getMatchExtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cutCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cutCard_.get(i));
        }
        size += dataSize;
        size += 1 * getCutCardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cutDtzCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cutDtzCard_.get(i));
        }
        size += dataSize;
        size += 1 * getCutDtzCardList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, groupLogId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intParams_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(intParams_.get(i));
        }
        size += dataSize;
        size += 1 * getIntParamsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingInfoRes}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.ClosingInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_ClosingInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_ClosingInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClosingPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          closingPlayersBuilder_.clear();
        }
        bird_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        birdSeat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        isBreak_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        wanfa_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        cutCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        cutDtzCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        groupLogId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        intParams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_ClosingInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes build() {
        com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes result = new com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (closingPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.closingPlayers_ = closingPlayers_;
        } else {
          result.closingPlayers_ = closingPlayersBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          bird_ = java.util.Collections.unmodifiableList(bird_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.bird_ = bird_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          birdSeat_ = java.util.Collections.unmodifiableList(birdSeat_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.birdSeat_ = birdSeat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isBreak_ = isBreak_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.wanfa_ = wanfa_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(
              ext_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.ext_ = ext_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          matchExt_ = new com.google.protobuf.UnmodifiableLazyStringList(
              matchExt_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.matchExt_ = matchExt_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          cutCard_ = java.util.Collections.unmodifiableList(cutCard_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.cutCard_ = cutCard_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          cutDtzCard_ = java.util.Collections.unmodifiableList(cutDtzCard_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.cutDtzCard_ = cutDtzCard_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000004;
        }
        result.groupLogId_ = groupLogId_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          intParams_ = java.util.Collections.unmodifiableList(intParams_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.intParams_ = intParams_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes.getDefaultInstance()) return this;
        if (closingPlayersBuilder_ == null) {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayers_.isEmpty()) {
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureClosingPlayersIsMutable();
              closingPlayers_.addAll(other.closingPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayersBuilder_.isEmpty()) {
              closingPlayersBuilder_.dispose();
              closingPlayersBuilder_ = null;
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              closingPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getClosingPlayersFieldBuilder() : null;
            } else {
              closingPlayersBuilder_.addAllMessages(other.closingPlayers_);
            }
          }
        }
        if (!other.bird_.isEmpty()) {
          if (bird_.isEmpty()) {
            bird_ = other.bird_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBirdIsMutable();
            bird_.addAll(other.bird_);
          }
          onChanged();
        }
        if (!other.birdSeat_.isEmpty()) {
          if (birdSeat_.isEmpty()) {
            birdSeat_ = other.birdSeat_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureBirdSeatIsMutable();
            birdSeat_.addAll(other.birdSeat_);
          }
          onChanged();
        }
        if (other.hasIsBreak()) {
          setIsBreak(other.getIsBreak());
        }
        if (other.hasWanfa()) {
          setWanfa(other.getWanfa());
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        if (!other.matchExt_.isEmpty()) {
          if (matchExt_.isEmpty()) {
            matchExt_ = other.matchExt_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureMatchExtIsMutable();
            matchExt_.addAll(other.matchExt_);
          }
          onChanged();
        }
        if (!other.cutCard_.isEmpty()) {
          if (cutCard_.isEmpty()) {
            cutCard_ = other.cutCard_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCutCardIsMutable();
            cutCard_.addAll(other.cutCard_);
          }
          onChanged();
        }
        if (!other.cutDtzCard_.isEmpty()) {
          if (cutDtzCard_.isEmpty()) {
            cutDtzCard_ = other.cutDtzCard_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureCutDtzCardIsMutable();
            cutDtzCard_.addAll(other.cutDtzCard_);
          }
          onChanged();
        }
        if (other.hasGroupLogId()) {
          setGroupLogId(other.getGroupLogId());
        }
        if (!other.intParams_.isEmpty()) {
          if (intParams_.isEmpty()) {
            intParams_ = other.intParams_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureIntParamsIsMutable();
            intParams_.addAll(other.intParams_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getClosingPlayersCount(); i++) {
          if (!getClosingPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.ClosingInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;
      private java.util.List<com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes> closingPlayers_ =
        java.util.Collections.emptyList();
      private void ensureClosingPlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes>(closingPlayers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoResOrBuilder> closingPlayersBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes> getClosingPlayersList() {
        if (closingPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        } else {
          return closingPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public int getClosingPlayersCount() {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.size();
        } else {
          return closingPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes getClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);
        } else {
          return closingPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addAllClosingPlayers(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes> values) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          super.addAll(values, closingPlayers_);
          onChanged();
        } else {
          closingPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder clearClosingPlayers() {
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          closingPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder removeClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.remove(index);
          onChanged();
        } else {
          closingPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder getClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
          int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);  } else {
          return closingPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoResOrBuilder> 
           getClosingPlayersOrBuilderList() {
        if (closingPlayersBuilder_ != null) {
          return closingPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder addClosingPlayersBuilder() {
        return getClosingPlayersFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder addClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder> 
           getClosingPlayersBuilderList() {
        return getClosingPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoResOrBuilder> 
          getClosingPlayersFieldBuilder() {
        if (closingPlayersBuilder_ == null) {
          closingPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoResOrBuilder>(
                  closingPlayers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          closingPlayers_ = null;
        }
        return closingPlayersBuilder_;
      }

      // repeated int32 bird = 2;
      private java.util.List<java.lang.Integer> bird_ = java.util.Collections.emptyList();
      private void ensureBirdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          bird_ = new java.util.ArrayList<java.lang.Integer>(bird_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getBirdList() {
        return java.util.Collections.unmodifiableList(bird_);
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public int getBirdCount() {
        return bird_.size();
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public int getBird(int index) {
        return bird_.get(index);
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public Builder setBird(
          int index, int value) {
        ensureBirdIsMutable();
        bird_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public Builder addBird(int value) {
        ensureBirdIsMutable();
        bird_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public Builder addAllBird(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBirdIsMutable();
        super.addAll(values, bird_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public Builder clearBird() {
        bird_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 birdSeat = 3;
      private java.util.List<java.lang.Integer> birdSeat_ = java.util.Collections.emptyList();
      private void ensureBirdSeatIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          birdSeat_ = new java.util.ArrayList<java.lang.Integer>(birdSeat_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getBirdSeatList() {
        return java.util.Collections.unmodifiableList(birdSeat_);
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public int getBirdSeatCount() {
        return birdSeat_.size();
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public int getBirdSeat(int index) {
        return birdSeat_.get(index);
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public Builder setBirdSeat(
          int index, int value) {
        ensureBirdSeatIsMutable();
        birdSeat_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public Builder addBirdSeat(int value) {
        ensureBirdSeatIsMutable();
        birdSeat_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public Builder addAllBirdSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBirdSeatIsMutable();
        super.addAll(values, birdSeat_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public Builder clearBirdSeat() {
        birdSeat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 isBreak = 4;
      private int isBreak_ ;
      /**
       * <code>optional int32 isBreak = 4;</code>
       */
      public boolean hasIsBreak() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 isBreak = 4;</code>
       */
      public int getIsBreak() {
        return isBreak_;
      }
      /**
       * <code>optional int32 isBreak = 4;</code>
       */
      public Builder setIsBreak(int value) {
        bitField0_ |= 0x00000008;
        isBreak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isBreak = 4;</code>
       */
      public Builder clearIsBreak() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isBreak_ = 0;
        onChanged();
        return this;
      }

      // optional int32 wanfa = 5;
      private int wanfa_ ;
      /**
       * <code>optional int32 wanfa = 5;</code>
       */
      public boolean hasWanfa() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 wanfa = 5;</code>
       */
      public int getWanfa() {
        return wanfa_;
      }
      /**
       * <code>optional int32 wanfa = 5;</code>
       */
      public Builder setWanfa(int value) {
        bitField0_ |= 0x00000010;
        wanfa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wanfa = 5;</code>
       */
      public Builder clearWanfa() {
        bitField0_ = (bitField0_ & ~0x00000010);
        wanfa_ = 0;
        onChanged();
        return this;
      }

      // repeated string ext = 6;
      private com.google.protobuf.LazyStringList ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          ext_ = new com.google.protobuf.LazyStringArrayList(ext_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.String>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public java.lang.String getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtBytes(int index) {
        return ext_.getByteString(index);
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearExt() {
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }

      // repeated string matchExt = 7;
      private com.google.protobuf.LazyStringList matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMatchExtIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          matchExt_ = new com.google.protobuf.LazyStringArrayList(matchExt_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public java.util.List<java.lang.String>
          getMatchExtList() {
        return java.util.Collections.unmodifiableList(matchExt_);
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public int getMatchExtCount() {
        return matchExt_.size();
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public java.lang.String getMatchExt(int index) {
        return matchExt_.get(index);
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMatchExtBytes(int index) {
        return matchExt_.getByteString(index);
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder setMatchExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addMatchExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addAllMatchExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureMatchExtIsMutable();
        super.addAll(values, matchExt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder clearMatchExt() {
        matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addMatchExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }

      // repeated int32 cutCard = 8;
      private java.util.List<java.lang.Integer> cutCard_ = java.util.Collections.emptyList();
      private void ensureCutCardIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          cutCard_ = new java.util.ArrayList<java.lang.Integer>(cutCard_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCutCardList() {
        return java.util.Collections.unmodifiableList(cutCard_);
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public int getCutCardCount() {
        return cutCard_.size();
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public int getCutCard(int index) {
        return cutCard_.get(index);
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public Builder setCutCard(
          int index, int value) {
        ensureCutCardIsMutable();
        cutCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public Builder addCutCard(int value) {
        ensureCutCardIsMutable();
        cutCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public Builder addAllCutCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCutCardIsMutable();
        super.addAll(values, cutCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public Builder clearCutCard() {
        cutCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 cutDtzCard = 9;
      private java.util.List<java.lang.Integer> cutDtzCard_ = java.util.Collections.emptyList();
      private void ensureCutDtzCardIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          cutDtzCard_ = new java.util.ArrayList<java.lang.Integer>(cutDtzCard_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCutDtzCardList() {
        return java.util.Collections.unmodifiableList(cutDtzCard_);
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public int getCutDtzCardCount() {
        return cutDtzCard_.size();
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public int getCutDtzCard(int index) {
        return cutDtzCard_.get(index);
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public Builder setCutDtzCard(
          int index, int value) {
        ensureCutDtzCardIsMutable();
        cutDtzCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public Builder addCutDtzCard(int value) {
        ensureCutDtzCardIsMutable();
        cutDtzCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public Builder addAllCutDtzCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCutDtzCardIsMutable();
        super.addAll(values, cutDtzCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public Builder clearCutDtzCard() {
        cutDtzCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // optional int32 groupLogId = 10;
      private int groupLogId_ ;
      /**
       * <code>optional int32 groupLogId = 10;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public boolean hasGroupLogId() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 groupLogId = 10;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public int getGroupLogId() {
        return groupLogId_;
      }
      /**
       * <code>optional int32 groupLogId = 10;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public Builder setGroupLogId(int value) {
        bitField0_ |= 0x00000200;
        groupLogId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 groupLogId = 10;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public Builder clearGroupLogId() {
        bitField0_ = (bitField0_ & ~0x00000200);
        groupLogId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 intParams = 11;
      private java.util.List<java.lang.Integer> intParams_ = java.util.Collections.emptyList();
      private void ensureIntParamsIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          intParams_ = new java.util.ArrayList<java.lang.Integer>(intParams_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 intParams = 11;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIntParamsList() {
        return java.util.Collections.unmodifiableList(intParams_);
      }
      /**
       * <code>repeated int32 intParams = 11;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public int getIntParamsCount() {
        return intParams_.size();
      }
      /**
       * <code>repeated int32 intParams = 11;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public int getIntParams(int index) {
        return intParams_.get(index);
      }
      /**
       * <code>repeated int32 intParams = 11;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder setIntParams(
          int index, int value) {
        ensureIntParamsIsMutable();
        intParams_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 11;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder addIntParams(int value) {
        ensureIntParamsIsMutable();
        intParams_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 11;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder addAllIntParams(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntParamsIsMutable();
        super.addAll(values, intParams_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 11;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder clearIntParams() {
        intParams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.ClosingInfoRes)
    }

    static {
      defaultInstance = new ClosingInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.ClosingInfoRes)
  }

  public interface ClosingPlayerInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string userId = 1;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 leftCardNum = 3;
    /**
     * <code>optional int32 leftCardNum = 3;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    boolean hasLeftCardNum();
    /**
     * <code>optional int32 leftCardNum = 3;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    int getLeftCardNum();

    // optional int32 point = 4;
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    boolean hasPoint();
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    int getPoint();

    // optional int32 totalPoint = 5;
    /**
     * <code>optional int32 totalPoint = 5;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    boolean hasTotalPoint();
    /**
     * <code>optional int32 totalPoint = 5;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    int getTotalPoint();

    // optional int32 boom = 6;
    /**
     * <code>optional int32 boom = 6;</code>
     *
     * <pre>
     *炸弹数
     * </pre>
     */
    boolean hasBoom();
    /**
     * <code>optional int32 boom = 6;</code>
     *
     * <pre>
     *炸弹数
     * </pre>
     */
    int getBoom();

    // optional int32 winCount = 7;
    /**
     * <code>optional int32 winCount = 7;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    boolean hasWinCount();
    /**
     * <code>optional int32 winCount = 7;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    int getWinCount();

    // optional int32 lostCount = 8;
    /**
     * <code>optional int32 lostCount = 8;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    boolean hasLostCount();
    /**
     * <code>optional int32 lostCount = 8;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    int getLostCount();

    // optional int32 maxPoint = 9;
    /**
     * <code>optional int32 maxPoint = 9;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    boolean hasMaxPoint();
    /**
     * <code>optional int32 maxPoint = 9;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    int getMaxPoint();

    // optional int32 totalBoom = 10;
    /**
     * <code>optional int32 totalBoom = 10;</code>
     *
     * <pre>
     *总炸弹数
     * </pre>
     */
    boolean hasTotalBoom();
    /**
     * <code>optional int32 totalBoom = 10;</code>
     *
     * <pre>
     *总炸弹数
     * </pre>
     */
    int getTotalBoom();

    // repeated int32 cards = 11;
    /**
     * <code>repeated int32 cards = 11;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 11;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 11;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    int getCards(int index);

    // required int32 seat = 12;
    /**
     * <code>required int32 seat = 12;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>required int32 seat = 12;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    int getSeat();

    // optional int32 sex = 13;
    /**
     * <code>optional int32 sex = 13;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 13;</code>
     */
    int getSex();

    // optional string icon = 14;
    /**
     * <code>optional string icon = 14;</code>
     */
    boolean hasIcon();
    /**
     * <code>optional string icon = 14;</code>
     */
    java.lang.String getIcon();
    /**
     * <code>optional string icon = 14;</code>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    // optional int32 isHu = 15;
    /**
     * <code>optional int32 isHu = 15;</code>
     */
    boolean hasIsHu();
    /**
     * <code>optional int32 isHu = 15;</code>
     */
    int getIsHu();

    // repeated int32 actionCounts = 16;
    /**
     * <code>repeated int32 actionCounts = 16;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    java.util.List<java.lang.Integer> getActionCountsList();
    /**
     * <code>repeated int32 actionCounts = 16;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    int getActionCountsCount();
    /**
     * <code>repeated int32 actionCounts = 16;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    int getActionCounts(int index);

    // repeated int32 gangIds = 17;
    /**
     * <code>repeated int32 gangIds = 17;</code>
     *
     * <pre>
     *杠
     * </pre>
     */
    java.util.List<java.lang.Integer> getGangIdsList();
    /**
     * <code>repeated int32 gangIds = 17;</code>
     *
     * <pre>
     *杠
     * </pre>
     */
    int getGangIdsCount();
    /**
     * <code>repeated int32 gangIds = 17;</code>
     *
     * <pre>
     *杠
     * </pre>
     */
    int getGangIds(int index);

    // repeated int32 dahus = 18;
    /**
     * <code>repeated int32 dahus = 18;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    java.util.List<java.lang.Integer> getDahusList();
    /**
     * <code>repeated int32 dahus = 18;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    int getDahusCount();
    /**
     * <code>repeated int32 dahus = 18;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    int getDahus(int index);

    // repeated int32 xiaohus = 19;
    /**
     * <code>repeated int32 xiaohus = 19;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    java.util.List<java.lang.Integer> getXiaohusList();
    /**
     * <code>repeated int32 xiaohus = 19;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    int getXiaohusCount();
    /**
     * <code>repeated int32 xiaohus = 19;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    int getXiaohus(int index);

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> 
        getMcardsList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMcards(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    int getMcardsCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMcardsOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMcardsOrBuilder(
        int index);

    // repeated string ext = 21;
    /**
     * <code>repeated string ext = 21;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    java.util.List<java.lang.String>
    getExtList();
    /**
     * <code>repeated string ext = 21;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated string ext = 21;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    java.lang.String getExt(int index);
    /**
     * <code>repeated string ext = 21;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtBytes(int index);

    // optional string gold = 22;
    /**
     * <code>optional string gold = 22;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    boolean hasGold();
    /**
     * <code>optional string gold = 22;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    java.lang.String getGold();
    /**
     * <code>optional string gold = 22;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    com.google.protobuf.ByteString
        getGoldBytes();

    // optional int32 credit = 23;
    /**
     * <code>optional int32 credit = 23;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    boolean hasCredit();
    /**
     * <code>optional int32 credit = 23;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    int getCredit();

    // optional int64 winLoseCredit = 24;
    /**
     * <code>optional int64 winLoseCredit = 24;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    boolean hasWinLoseCredit();
    /**
     * <code>optional int64 winLoseCredit = 24;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    long getWinLoseCredit();

    // optional int64 commissionCredit = 25;
    /**
     * <code>optional int64 commissionCredit = 25;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    boolean hasCommissionCredit();
    /**
     * <code>optional int64 commissionCredit = 25;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    long getCommissionCredit();

    // optional int32 goldFlag = 26;
    /**
     * <code>optional int32 goldFlag = 26;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    boolean hasGoldFlag();
    /**
     * <code>optional int32 goldFlag = 26;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    int getGoldFlag();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes}
   *
   * <pre>
   *单个玩家结算
   * </pre>
   */
  public static final class ClosingPlayerInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements ClosingPlayerInfoResOrBuilder {
    // Use ClosingPlayerInfoRes.newBuilder() to construct.
    private ClosingPlayerInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosingPlayerInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosingPlayerInfoRes defaultInstance;
    public static ClosingPlayerInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public ClosingPlayerInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosingPlayerInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              leftCardNum_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              point_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              totalPoint_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              boom_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              winCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              lostCount_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              maxPoint_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              totalBoom_ = input.readInt32();
              break;
            }
            case 88: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 90: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 96: {
              bitField0_ |= 0x00000400;
              seat_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              sex_ = input.readInt32();
              break;
            }
            case 114: {
              bitField0_ |= 0x00001000;
              icon_ = input.readBytes();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              isHu_ = input.readInt32();
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                actionCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              actionCounts_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                actionCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                actionCounts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                gangIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              gangIds_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                gangIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                gangIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                dahus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              dahus_.add(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                dahus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                dahus_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                xiaohus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              xiaohus_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                xiaohus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                xiaohus_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                mcards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>();
                mutable_bitField0_ |= 0x00080000;
              }
              mcards_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.PARSER, extensionRegistry));
              break;
            }
            case 170: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                ext_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00100000;
              }
              ext_.add(input.readBytes());
              break;
            }
            case 178: {
              bitField0_ |= 0x00004000;
              gold_ = input.readBytes();
              break;
            }
            case 184: {
              bitField0_ |= 0x00008000;
              credit_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00010000;
              winLoseCredit_ = input.readInt64();
              break;
            }
            case 200: {
              bitField0_ |= 0x00020000;
              commissionCredit_ = input.readInt64();
              break;
            }
            case 208: {
              bitField0_ |= 0x00040000;
              goldFlag_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          actionCounts_ = java.util.Collections.unmodifiableList(actionCounts_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          gangIds_ = java.util.Collections.unmodifiableList(gangIds_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          dahus_ = java.util.Collections.unmodifiableList(dahus_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          xiaohus_ = java.util.Collections.unmodifiableList(xiaohus_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          mcards_ = java.util.Collections.unmodifiableList(mcards_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(ext_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_ClosingPlayerInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_ClosingPlayerInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosingPlayerInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<ClosingPlayerInfoRes>() {
      public ClosingPlayerInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosingPlayerInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosingPlayerInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 leftCardNum = 3;
    public static final int LEFTCARDNUM_FIELD_NUMBER = 3;
    private int leftCardNum_;
    /**
     * <code>optional int32 leftCardNum = 3;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    public boolean hasLeftCardNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 leftCardNum = 3;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    public int getLeftCardNum() {
      return leftCardNum_;
    }

    // optional int32 point = 4;
    public static final int POINT_FIELD_NUMBER = 4;
    private int point_;
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public boolean hasPoint() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public int getPoint() {
      return point_;
    }

    // optional int32 totalPoint = 5;
    public static final int TOTALPOINT_FIELD_NUMBER = 5;
    private int totalPoint_;
    /**
     * <code>optional int32 totalPoint = 5;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public boolean hasTotalPoint() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 totalPoint = 5;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public int getTotalPoint() {
      return totalPoint_;
    }

    // optional int32 boom = 6;
    public static final int BOOM_FIELD_NUMBER = 6;
    private int boom_;
    /**
     * <code>optional int32 boom = 6;</code>
     *
     * <pre>
     *炸弹数
     * </pre>
     */
    public boolean hasBoom() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 boom = 6;</code>
     *
     * <pre>
     *炸弹数
     * </pre>
     */
    public int getBoom() {
      return boom_;
    }

    // optional int32 winCount = 7;
    public static final int WINCOUNT_FIELD_NUMBER = 7;
    private int winCount_;
    /**
     * <code>optional int32 winCount = 7;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    public boolean hasWinCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 winCount = 7;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    public int getWinCount() {
      return winCount_;
    }

    // optional int32 lostCount = 8;
    public static final int LOSTCOUNT_FIELD_NUMBER = 8;
    private int lostCount_;
    /**
     * <code>optional int32 lostCount = 8;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    public boolean hasLostCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 lostCount = 8;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    public int getLostCount() {
      return lostCount_;
    }

    // optional int32 maxPoint = 9;
    public static final int MAXPOINT_FIELD_NUMBER = 9;
    private int maxPoint_;
    /**
     * <code>optional int32 maxPoint = 9;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    public boolean hasMaxPoint() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 maxPoint = 9;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    public int getMaxPoint() {
      return maxPoint_;
    }

    // optional int32 totalBoom = 10;
    public static final int TOTALBOOM_FIELD_NUMBER = 10;
    private int totalBoom_;
    /**
     * <code>optional int32 totalBoom = 10;</code>
     *
     * <pre>
     *总炸弹数
     * </pre>
     */
    public boolean hasTotalBoom() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 totalBoom = 10;</code>
     *
     * <pre>
     *总炸弹数
     * </pre>
     */
    public int getTotalBoom() {
      return totalBoom_;
    }

    // repeated int32 cards = 11;
    public static final int CARDS_FIELD_NUMBER = 11;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 11;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 11;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 11;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // required int32 seat = 12;
    public static final int SEAT_FIELD_NUMBER = 12;
    private int seat_;
    /**
     * <code>required int32 seat = 12;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>required int32 seat = 12;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // optional int32 sex = 13;
    public static final int SEX_FIELD_NUMBER = 13;
    private int sex_;
    /**
     * <code>optional int32 sex = 13;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 sex = 13;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional string icon = 14;
    public static final int ICON_FIELD_NUMBER = 14;
    private java.lang.Object icon_;
    /**
     * <code>optional string icon = 14;</code>
     */
    public boolean hasIcon() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string icon = 14;</code>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          icon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string icon = 14;</code>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 isHu = 15;
    public static final int ISHU_FIELD_NUMBER = 15;
    private int isHu_;
    /**
     * <code>optional int32 isHu = 15;</code>
     */
    public boolean hasIsHu() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 isHu = 15;</code>
     */
    public int getIsHu() {
      return isHu_;
    }

    // repeated int32 actionCounts = 16;
    public static final int ACTIONCOUNTS_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> actionCounts_;
    /**
     * <code>repeated int32 actionCounts = 16;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getActionCountsList() {
      return actionCounts_;
    }
    /**
     * <code>repeated int32 actionCounts = 16;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    public int getActionCountsCount() {
      return actionCounts_.size();
    }
    /**
     * <code>repeated int32 actionCounts = 16;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    public int getActionCounts(int index) {
      return actionCounts_.get(index);
    }

    // repeated int32 gangIds = 17;
    public static final int GANGIDS_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> gangIds_;
    /**
     * <code>repeated int32 gangIds = 17;</code>
     *
     * <pre>
     *杠
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGangIdsList() {
      return gangIds_;
    }
    /**
     * <code>repeated int32 gangIds = 17;</code>
     *
     * <pre>
     *杠
     * </pre>
     */
    public int getGangIdsCount() {
      return gangIds_.size();
    }
    /**
     * <code>repeated int32 gangIds = 17;</code>
     *
     * <pre>
     *杠
     * </pre>
     */
    public int getGangIds(int index) {
      return gangIds_.get(index);
    }

    // repeated int32 dahus = 18;
    public static final int DAHUS_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> dahus_;
    /**
     * <code>repeated int32 dahus = 18;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDahusList() {
      return dahus_;
    }
    /**
     * <code>repeated int32 dahus = 18;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    public int getDahusCount() {
      return dahus_.size();
    }
    /**
     * <code>repeated int32 dahus = 18;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    public int getDahus(int index) {
      return dahus_.get(index);
    }

    // repeated int32 xiaohus = 19;
    public static final int XIAOHUS_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> xiaohus_;
    /**
     * <code>repeated int32 xiaohus = 19;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getXiaohusList() {
      return xiaohus_;
    }
    /**
     * <code>repeated int32 xiaohus = 19;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    public int getXiaohusCount() {
      return xiaohus_.size();
    }
    /**
     * <code>repeated int32 xiaohus = 19;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    public int getXiaohus(int index) {
      return xiaohus_.get(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;
    public static final int MCARDS_FIELD_NUMBER = 20;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> mcards_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMcardsList() {
      return mcards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMcardsOrBuilderList() {
      return mcards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public int getMcardsCount() {
      return mcards_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMcards(int index) {
      return mcards_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMcardsOrBuilder(
        int index) {
      return mcards_.get(index);
    }

    // repeated string ext = 21;
    public static final int EXT_FIELD_NUMBER = 21;
    private com.google.protobuf.LazyStringList ext_;
    /**
     * <code>repeated string ext = 21;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    public java.util.List<java.lang.String>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated string ext = 21;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated string ext = 21;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    public java.lang.String getExt(int index) {
      return ext_.get(index);
    }
    /**
     * <code>repeated string ext = 21;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtBytes(int index) {
      return ext_.getByteString(index);
    }

    // optional string gold = 22;
    public static final int GOLD_FIELD_NUMBER = 22;
    private java.lang.Object gold_;
    /**
     * <code>optional string gold = 22;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    public boolean hasGold() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string gold = 22;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    public java.lang.String getGold() {
      java.lang.Object ref = gold_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gold_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gold = 22;</code>
     *
     * <pre>
     *玩家身上的金币
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGoldBytes() {
      java.lang.Object ref = gold_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gold_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 credit = 23;
    public static final int CREDIT_FIELD_NUMBER = 23;
    private int credit_;
    /**
     * <code>optional int32 credit = 23;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    public boolean hasCredit() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 credit = 23;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    public int getCredit() {
      return credit_;
    }

    // optional int64 winLoseCredit = 24;
    public static final int WINLOSECREDIT_FIELD_NUMBER = 24;
    private long winLoseCredit_;
    /**
     * <code>optional int64 winLoseCredit = 24;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    public boolean hasWinLoseCredit() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int64 winLoseCredit = 24;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    public long getWinLoseCredit() {
      return winLoseCredit_;
    }

    // optional int64 commissionCredit = 25;
    public static final int COMMISSIONCREDIT_FIELD_NUMBER = 25;
    private long commissionCredit_;
    /**
     * <code>optional int64 commissionCredit = 25;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    public boolean hasCommissionCredit() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 commissionCredit = 25;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    public long getCommissionCredit() {
      return commissionCredit_;
    }

    // optional int32 goldFlag = 26;
    public static final int GOLDFLAG_FIELD_NUMBER = 26;
    private int goldFlag_;
    /**
     * <code>optional int32 goldFlag = 26;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    public boolean hasGoldFlag() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 goldFlag = 26;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    public int getGoldFlag() {
      return goldFlag_;
    }

    private void initFields() {
      userId_ = "";
      name_ = "";
      leftCardNum_ = 0;
      point_ = 0;
      totalPoint_ = 0;
      boom_ = 0;
      winCount_ = 0;
      lostCount_ = 0;
      maxPoint_ = 0;
      totalBoom_ = 0;
      cards_ = java.util.Collections.emptyList();
      seat_ = 0;
      sex_ = 0;
      icon_ = "";
      isHu_ = 0;
      actionCounts_ = java.util.Collections.emptyList();
      gangIds_ = java.util.Collections.emptyList();
      dahus_ = java.util.Collections.emptyList();
      xiaohus_ = java.util.Collections.emptyList();
      mcards_ = java.util.Collections.emptyList();
      ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      gold_ = "";
      credit_ = 0;
      winLoseCredit_ = 0L;
      commissionCredit_ = 0L;
      goldFlag_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMcardsCount(); i++) {
        if (!getMcards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, leftCardNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, point_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, totalPoint_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, boom_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, winCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, lostCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, maxPoint_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, totalBoom_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(11, cards_.get(i));
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(12, seat_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, sex_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(14, getIconBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(15, isHu_);
      }
      for (int i = 0; i < actionCounts_.size(); i++) {
        output.writeInt32(16, actionCounts_.get(i));
      }
      for (int i = 0; i < gangIds_.size(); i++) {
        output.writeInt32(17, gangIds_.get(i));
      }
      for (int i = 0; i < dahus_.size(); i++) {
        output.writeInt32(18, dahus_.get(i));
      }
      for (int i = 0; i < xiaohus_.size(); i++) {
        output.writeInt32(19, xiaohus_.get(i));
      }
      for (int i = 0; i < mcards_.size(); i++) {
        output.writeMessage(20, mcards_.get(i));
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeBytes(21, ext_.getByteString(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(22, getGoldBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(23, credit_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt64(24, winLoseCredit_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(25, commissionCredit_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(26, goldFlag_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, leftCardNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, point_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, totalPoint_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, boom_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, winCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, lostCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, maxPoint_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, totalBoom_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, seat_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, sex_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getIconBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, isHu_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < actionCounts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(actionCounts_.get(i));
        }
        size += dataSize;
        size += 2 * getActionCountsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gangIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gangIds_.get(i));
        }
        size += dataSize;
        size += 2 * getGangIdsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dahus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dahus_.get(i));
        }
        size += dataSize;
        size += 2 * getDahusList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < xiaohus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(xiaohus_.get(i));
        }
        size += dataSize;
        size += 2 * getXiaohusList().size();
      }
      for (int i = 0; i < mcards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, mcards_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ext_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getExtList().size();
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(22, getGoldBytes());
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, credit_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(24, winLoseCredit_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(25, commissionCredit_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(26, goldFlag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes}
     *
     * <pre>
     *单个玩家结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_ClosingPlayerInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_ClosingPlayerInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMcardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        leftCardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        point_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        totalPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        boom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        winCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        lostCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        maxPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        totalBoom_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        icon_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        isHu_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        actionCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        gangIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        dahus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        xiaohus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        if (mcardsBuilder_ == null) {
          mcards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
        } else {
          mcardsBuilder_.clear();
        }
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00100000);
        gold_ = "";
        bitField0_ = (bitField0_ & ~0x00200000);
        credit_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        winLoseCredit_ = 0L;
        bitField0_ = (bitField0_ & ~0x00800000);
        commissionCredit_ = 0L;
        bitField0_ = (bitField0_ & ~0x01000000);
        goldFlag_ = 0;
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_ClosingPlayerInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes build() {
        com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes result = new com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.leftCardNum_ = leftCardNum_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.point_ = point_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.totalPoint_ = totalPoint_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.boom_ = boom_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.winCount_ = winCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.lostCount_ = lostCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.maxPoint_ = maxPoint_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.totalBoom_ = totalBoom_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000400;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.icon_ = icon_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.isHu_ = isHu_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          actionCounts_ = java.util.Collections.unmodifiableList(actionCounts_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.actionCounts_ = actionCounts_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          gangIds_ = java.util.Collections.unmodifiableList(gangIds_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.gangIds_ = gangIds_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          dahus_ = java.util.Collections.unmodifiableList(dahus_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.dahus_ = dahus_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          xiaohus_ = java.util.Collections.unmodifiableList(xiaohus_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.xiaohus_ = xiaohus_;
        if (mcardsBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000)) {
            mcards_ = java.util.Collections.unmodifiableList(mcards_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.mcards_ = mcards_;
        } else {
          result.mcards_ = mcardsBuilder_.build();
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(
              ext_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.ext_ = ext_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.gold_ = gold_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.credit_ = credit_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.winLoseCredit_ = winLoseCredit_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.commissionCredit_ = commissionCredit_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.goldFlag_ = goldFlag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasLeftCardNum()) {
          setLeftCardNum(other.getLeftCardNum());
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        if (other.hasTotalPoint()) {
          setTotalPoint(other.getTotalPoint());
        }
        if (other.hasBoom()) {
          setBoom(other.getBoom());
        }
        if (other.hasWinCount()) {
          setWinCount(other.getWinCount());
        }
        if (other.hasLostCount()) {
          setLostCount(other.getLostCount());
        }
        if (other.hasMaxPoint()) {
          setMaxPoint(other.getMaxPoint());
        }
        if (other.hasTotalBoom()) {
          setTotalBoom(other.getTotalBoom());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasIcon()) {
          bitField0_ |= 0x00002000;
          icon_ = other.icon_;
          onChanged();
        }
        if (other.hasIsHu()) {
          setIsHu(other.getIsHu());
        }
        if (!other.actionCounts_.isEmpty()) {
          if (actionCounts_.isEmpty()) {
            actionCounts_ = other.actionCounts_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureActionCountsIsMutable();
            actionCounts_.addAll(other.actionCounts_);
          }
          onChanged();
        }
        if (!other.gangIds_.isEmpty()) {
          if (gangIds_.isEmpty()) {
            gangIds_ = other.gangIds_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureGangIdsIsMutable();
            gangIds_.addAll(other.gangIds_);
          }
          onChanged();
        }
        if (!other.dahus_.isEmpty()) {
          if (dahus_.isEmpty()) {
            dahus_ = other.dahus_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureDahusIsMutable();
            dahus_.addAll(other.dahus_);
          }
          onChanged();
        }
        if (!other.xiaohus_.isEmpty()) {
          if (xiaohus_.isEmpty()) {
            xiaohus_ = other.xiaohus_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureXiaohusIsMutable();
            xiaohus_.addAll(other.xiaohus_);
          }
          onChanged();
        }
        if (mcardsBuilder_ == null) {
          if (!other.mcards_.isEmpty()) {
            if (mcards_.isEmpty()) {
              mcards_ = other.mcards_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureMcardsIsMutable();
              mcards_.addAll(other.mcards_);
            }
            onChanged();
          }
        } else {
          if (!other.mcards_.isEmpty()) {
            if (mcardsBuilder_.isEmpty()) {
              mcardsBuilder_.dispose();
              mcardsBuilder_ = null;
              mcards_ = other.mcards_;
              bitField0_ = (bitField0_ & ~0x00080000);
              mcardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMcardsFieldBuilder() : null;
            } else {
              mcardsBuilder_.addAllMessages(other.mcards_);
            }
          }
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        if (other.hasGold()) {
          bitField0_ |= 0x00200000;
          gold_ = other.gold_;
          onChanged();
        }
        if (other.hasCredit()) {
          setCredit(other.getCredit());
        }
        if (other.hasWinLoseCredit()) {
          setWinLoseCredit(other.getWinLoseCredit());
        }
        if (other.hasCommissionCredit()) {
          setCommissionCredit(other.getCommissionCredit());
        }
        if (other.hasGoldFlag()) {
          setGoldFlag(other.getGoldFlag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeat()) {
          
          return false;
        }
        for (int i = 0; i < getMcardsCount(); i++) {
          if (!getMcards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.ClosingPlayerInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 leftCardNum = 3;
      private int leftCardNum_ ;
      /**
       * <code>optional int32 leftCardNum = 3;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public boolean hasLeftCardNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 leftCardNum = 3;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public int getLeftCardNum() {
        return leftCardNum_;
      }
      /**
       * <code>optional int32 leftCardNum = 3;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public Builder setLeftCardNum(int value) {
        bitField0_ |= 0x00000004;
        leftCardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 leftCardNum = 3;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public Builder clearLeftCardNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        leftCardNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 point = 4;
      private int point_ ;
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public boolean hasPoint() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public int getPoint() {
        return point_;
      }
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder setPoint(int value) {
        bitField0_ |= 0x00000008;
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder clearPoint() {
        bitField0_ = (bitField0_ & ~0x00000008);
        point_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalPoint = 5;
      private int totalPoint_ ;
      /**
       * <code>optional int32 totalPoint = 5;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public boolean hasTotalPoint() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 totalPoint = 5;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public int getTotalPoint() {
        return totalPoint_;
      }
      /**
       * <code>optional int32 totalPoint = 5;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder setTotalPoint(int value) {
        bitField0_ |= 0x00000010;
        totalPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalPoint = 5;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder clearTotalPoint() {
        bitField0_ = (bitField0_ & ~0x00000010);
        totalPoint_ = 0;
        onChanged();
        return this;
      }

      // optional int32 boom = 6;
      private int boom_ ;
      /**
       * <code>optional int32 boom = 6;</code>
       *
       * <pre>
       *炸弹数
       * </pre>
       */
      public boolean hasBoom() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 boom = 6;</code>
       *
       * <pre>
       *炸弹数
       * </pre>
       */
      public int getBoom() {
        return boom_;
      }
      /**
       * <code>optional int32 boom = 6;</code>
       *
       * <pre>
       *炸弹数
       * </pre>
       */
      public Builder setBoom(int value) {
        bitField0_ |= 0x00000020;
        boom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 boom = 6;</code>
       *
       * <pre>
       *炸弹数
       * </pre>
       */
      public Builder clearBoom() {
        bitField0_ = (bitField0_ & ~0x00000020);
        boom_ = 0;
        onChanged();
        return this;
      }

      // optional int32 winCount = 7;
      private int winCount_ ;
      /**
       * <code>optional int32 winCount = 7;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public boolean hasWinCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 winCount = 7;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public int getWinCount() {
        return winCount_;
      }
      /**
       * <code>optional int32 winCount = 7;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public Builder setWinCount(int value) {
        bitField0_ |= 0x00000040;
        winCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 winCount = 7;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public Builder clearWinCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        winCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lostCount = 8;
      private int lostCount_ ;
      /**
       * <code>optional int32 lostCount = 8;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public boolean hasLostCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 lostCount = 8;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public int getLostCount() {
        return lostCount_;
      }
      /**
       * <code>optional int32 lostCount = 8;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public Builder setLostCount(int value) {
        bitField0_ |= 0x00000080;
        lostCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lostCount = 8;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public Builder clearLostCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        lostCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxPoint = 9;
      private int maxPoint_ ;
      /**
       * <code>optional int32 maxPoint = 9;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public boolean hasMaxPoint() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 maxPoint = 9;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public int getMaxPoint() {
        return maxPoint_;
      }
      /**
       * <code>optional int32 maxPoint = 9;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public Builder setMaxPoint(int value) {
        bitField0_ |= 0x00000100;
        maxPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxPoint = 9;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public Builder clearMaxPoint() {
        bitField0_ = (bitField0_ & ~0x00000100);
        maxPoint_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalBoom = 10;
      private int totalBoom_ ;
      /**
       * <code>optional int32 totalBoom = 10;</code>
       *
       * <pre>
       *总炸弹数
       * </pre>
       */
      public boolean hasTotalBoom() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 totalBoom = 10;</code>
       *
       * <pre>
       *总炸弹数
       * </pre>
       */
      public int getTotalBoom() {
        return totalBoom_;
      }
      /**
       * <code>optional int32 totalBoom = 10;</code>
       *
       * <pre>
       *总炸弹数
       * </pre>
       */
      public Builder setTotalBoom(int value) {
        bitField0_ |= 0x00000200;
        totalBoom_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalBoom = 10;</code>
       *
       * <pre>
       *总炸弹数
       * </pre>
       */
      public Builder clearTotalBoom() {
        bitField0_ = (bitField0_ & ~0x00000200);
        totalBoom_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 11;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int32 cards = 11;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 11;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 11;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 11;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 11;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 11;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 11;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // required int32 seat = 12;
      private int seat_ ;
      /**
       * <code>required int32 seat = 12;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>required int32 seat = 12;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>required int32 seat = 12;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000800;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 seat = 12;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000800);
        seat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 13;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 13;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 sex = 13;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 13;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00001000;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 13;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00001000);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional string icon = 14;
      private java.lang.Object icon_ = "";
      /**
       * <code>optional string icon = 14;</code>
       */
      public boolean hasIcon() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string icon = 14;</code>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string icon = 14;</code>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string icon = 14;</code>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 14;</code>
       */
      public Builder clearIcon() {
        bitField0_ = (bitField0_ & ~0x00002000);
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 14;</code>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        icon_ = value;
        onChanged();
        return this;
      }

      // optional int32 isHu = 15;
      private int isHu_ ;
      /**
       * <code>optional int32 isHu = 15;</code>
       */
      public boolean hasIsHu() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 isHu = 15;</code>
       */
      public int getIsHu() {
        return isHu_;
      }
      /**
       * <code>optional int32 isHu = 15;</code>
       */
      public Builder setIsHu(int value) {
        bitField0_ |= 0x00004000;
        isHu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isHu = 15;</code>
       */
      public Builder clearIsHu() {
        bitField0_ = (bitField0_ & ~0x00004000);
        isHu_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 actionCounts = 16;
      private java.util.List<java.lang.Integer> actionCounts_ = java.util.Collections.emptyList();
      private void ensureActionCountsIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          actionCounts_ = new java.util.ArrayList<java.lang.Integer>(actionCounts_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 actionCounts = 16;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getActionCountsList() {
        return java.util.Collections.unmodifiableList(actionCounts_);
      }
      /**
       * <code>repeated int32 actionCounts = 16;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public int getActionCountsCount() {
        return actionCounts_.size();
      }
      /**
       * <code>repeated int32 actionCounts = 16;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public int getActionCounts(int index) {
        return actionCounts_.get(index);
      }
      /**
       * <code>repeated int32 actionCounts = 16;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder setActionCounts(
          int index, int value) {
        ensureActionCountsIsMutable();
        actionCounts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionCounts = 16;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder addActionCounts(int value) {
        ensureActionCountsIsMutable();
        actionCounts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionCounts = 16;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder addAllActionCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActionCountsIsMutable();
        super.addAll(values, actionCounts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionCounts = 16;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder clearActionCounts() {
        actionCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // repeated int32 gangIds = 17;
      private java.util.List<java.lang.Integer> gangIds_ = java.util.Collections.emptyList();
      private void ensureGangIdsIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          gangIds_ = new java.util.ArrayList<java.lang.Integer>(gangIds_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 gangIds = 17;</code>
       *
       * <pre>
       *杠
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGangIdsList() {
        return java.util.Collections.unmodifiableList(gangIds_);
      }
      /**
       * <code>repeated int32 gangIds = 17;</code>
       *
       * <pre>
       *杠
       * </pre>
       */
      public int getGangIdsCount() {
        return gangIds_.size();
      }
      /**
       * <code>repeated int32 gangIds = 17;</code>
       *
       * <pre>
       *杠
       * </pre>
       */
      public int getGangIds(int index) {
        return gangIds_.get(index);
      }
      /**
       * <code>repeated int32 gangIds = 17;</code>
       *
       * <pre>
       *杠
       * </pre>
       */
      public Builder setGangIds(
          int index, int value) {
        ensureGangIdsIsMutable();
        gangIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gangIds = 17;</code>
       *
       * <pre>
       *杠
       * </pre>
       */
      public Builder addGangIds(int value) {
        ensureGangIdsIsMutable();
        gangIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gangIds = 17;</code>
       *
       * <pre>
       *杠
       * </pre>
       */
      public Builder addAllGangIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGangIdsIsMutable();
        super.addAll(values, gangIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gangIds = 17;</code>
       *
       * <pre>
       *杠
       * </pre>
       */
      public Builder clearGangIds() {
        gangIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // repeated int32 dahus = 18;
      private java.util.List<java.lang.Integer> dahus_ = java.util.Collections.emptyList();
      private void ensureDahusIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          dahus_ = new java.util.ArrayList<java.lang.Integer>(dahus_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 dahus = 18;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDahusList() {
        return java.util.Collections.unmodifiableList(dahus_);
      }
      /**
       * <code>repeated int32 dahus = 18;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public int getDahusCount() {
        return dahus_.size();
      }
      /**
       * <code>repeated int32 dahus = 18;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public int getDahus(int index) {
        return dahus_.get(index);
      }
      /**
       * <code>repeated int32 dahus = 18;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public Builder setDahus(
          int index, int value) {
        ensureDahusIsMutable();
        dahus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 18;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public Builder addDahus(int value) {
        ensureDahusIsMutable();
        dahus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 18;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public Builder addAllDahus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDahusIsMutable();
        super.addAll(values, dahus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 18;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public Builder clearDahus() {
        dahus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // repeated int32 xiaohus = 19;
      private java.util.List<java.lang.Integer> xiaohus_ = java.util.Collections.emptyList();
      private void ensureXiaohusIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          xiaohus_ = new java.util.ArrayList<java.lang.Integer>(xiaohus_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 xiaohus = 19;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getXiaohusList() {
        return java.util.Collections.unmodifiableList(xiaohus_);
      }
      /**
       * <code>repeated int32 xiaohus = 19;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public int getXiaohusCount() {
        return xiaohus_.size();
      }
      /**
       * <code>repeated int32 xiaohus = 19;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public int getXiaohus(int index) {
        return xiaohus_.get(index);
      }
      /**
       * <code>repeated int32 xiaohus = 19;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public Builder setXiaohus(
          int index, int value) {
        ensureXiaohusIsMutable();
        xiaohus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohus = 19;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public Builder addXiaohus(int value) {
        ensureXiaohusIsMutable();
        xiaohus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohus = 19;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public Builder addAllXiaohus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureXiaohusIsMutable();
        super.addAll(values, xiaohus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohus = 19;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public Builder clearXiaohus() {
        xiaohus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> mcards_ =
        java.util.Collections.emptyList();
      private void ensureMcardsIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          mcards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>(mcards_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> mcardsBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMcardsList() {
        if (mcardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mcards_);
        } else {
          return mcardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public int getMcardsCount() {
        if (mcardsBuilder_ == null) {
          return mcards_.size();
        } else {
          return mcardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMcards(int index) {
        if (mcardsBuilder_ == null) {
          return mcards_.get(index);
        } else {
          return mcardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (mcardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMcardsIsMutable();
          mcards_.set(index, value);
          onChanged();
        } else {
          mcardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.set(index, builderForValue.build());
          onChanged();
        } else {
          mcardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (mcardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMcardsIsMutable();
          mcards_.add(value);
          onChanged();
        } else {
          mcardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (mcardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMcardsIsMutable();
          mcards_.add(index, value);
          onChanged();
        } else {
          mcardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.add(builderForValue.build());
          onChanged();
        } else {
          mcardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.add(index, builderForValue.build());
          onChanged();
        } else {
          mcardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addAllMcards(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> values) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          super.addAll(values, mcards_);
          onChanged();
        } else {
          mcardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder clearMcards() {
        if (mcardsBuilder_ == null) {
          mcards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          mcardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder removeMcards(int index) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.remove(index);
          onChanged();
        } else {
          mcardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder getMcardsBuilder(
          int index) {
        return getMcardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMcardsOrBuilder(
          int index) {
        if (mcardsBuilder_ == null) {
          return mcards_.get(index);  } else {
          return mcardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
           getMcardsOrBuilderList() {
        if (mcardsBuilder_ != null) {
          return mcardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mcards_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMcardsBuilder() {
        return getMcardsFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMcardsBuilder(
          int index) {
        return getMcardsFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder> 
           getMcardsBuilderList() {
        return getMcardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
          getMcardsFieldBuilder() {
        if (mcardsBuilder_ == null) {
          mcardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder>(
                  mcards_,
                  ((bitField0_ & 0x00080000) == 0x00080000),
                  getParentForChildren(),
                  isClean());
          mcards_ = null;
        }
        return mcardsBuilder_;
      }

      // repeated string ext = 21;
      private com.google.protobuf.LazyStringList ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          ext_ = new com.google.protobuf.LazyStringArrayList(ext_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated string ext = 21;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public java.util.List<java.lang.String>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated string ext = 21;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated string ext = 21;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public java.lang.String getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated string ext = 21;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtBytes(int index) {
        return ext_.getByteString(index);
      }
      /**
       * <code>repeated string ext = 21;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public Builder setExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 21;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public Builder addExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 21;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 21;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public Builder clearExt() {
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 21;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public Builder addExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }

      // optional string gold = 22;
      private java.lang.Object gold_ = "";
      /**
       * <code>optional string gold = 22;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public boolean hasGold() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional string gold = 22;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public java.lang.String getGold() {
        java.lang.Object ref = gold_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          gold_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gold = 22;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGoldBytes() {
        java.lang.Object ref = gold_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gold_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gold = 22;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public Builder setGold(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        gold_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gold = 22;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public Builder clearGold() {
        bitField0_ = (bitField0_ & ~0x00200000);
        gold_ = getDefaultInstance().getGold();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gold = 22;</code>
       *
       * <pre>
       *玩家身上的金币
       * </pre>
       */
      public Builder setGoldBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00200000;
        gold_ = value;
        onChanged();
        return this;
      }

      // optional int32 credit = 23;
      private int credit_ ;
      /**
       * <code>optional int32 credit = 23;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public boolean hasCredit() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 credit = 23;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public int getCredit() {
        return credit_;
      }
      /**
       * <code>optional int32 credit = 23;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public Builder setCredit(int value) {
        bitField0_ |= 0x00400000;
        credit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 credit = 23;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public Builder clearCredit() {
        bitField0_ = (bitField0_ & ~0x00400000);
        credit_ = 0;
        onChanged();
        return this;
      }

      // optional int64 winLoseCredit = 24;
      private long winLoseCredit_ ;
      /**
       * <code>optional int64 winLoseCredit = 24;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public boolean hasWinLoseCredit() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 winLoseCredit = 24;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public long getWinLoseCredit() {
        return winLoseCredit_;
      }
      /**
       * <code>optional int64 winLoseCredit = 24;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public Builder setWinLoseCredit(long value) {
        bitField0_ |= 0x00800000;
        winLoseCredit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 winLoseCredit = 24;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public Builder clearWinLoseCredit() {
        bitField0_ = (bitField0_ & ~0x00800000);
        winLoseCredit_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 commissionCredit = 25;
      private long commissionCredit_ ;
      /**
       * <code>optional int64 commissionCredit = 25;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public boolean hasCommissionCredit() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 commissionCredit = 25;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public long getCommissionCredit() {
        return commissionCredit_;
      }
      /**
       * <code>optional int64 commissionCredit = 25;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public Builder setCommissionCredit(long value) {
        bitField0_ |= 0x01000000;
        commissionCredit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 commissionCredit = 25;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public Builder clearCommissionCredit() {
        bitField0_ = (bitField0_ & ~0x01000000);
        commissionCredit_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 goldFlag = 26;
      private int goldFlag_ ;
      /**
       * <code>optional int32 goldFlag = 26;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public boolean hasGoldFlag() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int32 goldFlag = 26;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public int getGoldFlag() {
        return goldFlag_;
      }
      /**
       * <code>optional int32 goldFlag = 26;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public Builder setGoldFlag(int value) {
        bitField0_ |= 0x02000000;
        goldFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 goldFlag = 26;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public Builder clearGoldFlag() {
        bitField0_ = (bitField0_ & ~0x02000000);
        goldFlag_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes)
    }

    static {
      defaultInstance = new ClosingPlayerInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.ClosingPlayerInfoRes)
  }

  public interface GangCardOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 cards = 1;
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *杠的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *杠的牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *杠的牌
     * </pre>
     */
    int getCards(int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.GangCard}
   */
  public static final class GangCard extends
      com.google.protobuf.GeneratedMessage
      implements GangCardOrBuilder {
    // Use GangCard.newBuilder() to construct.
    private GangCard(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private GangCard(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final GangCard defaultInstance;
    public static GangCard getDefaultInstance() {
      return defaultInstance;
    }

    public GangCard getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private GangCard(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_GangCard_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_GangCard_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.GangCard.class, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder.class);
    }

    public static com.google.protobuf.Parser<GangCard> PARSER =
        new com.google.protobuf.AbstractParser<GangCard>() {
      public GangCard parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new GangCard(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<GangCard> getParserForType() {
      return PARSER;
    }

    // repeated int32 cards = 1;
    public static final int CARDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *杠的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *杠的牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 1;</code>
     *
     * <pre>
     *杠的牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    private void initFields() {
      cards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(1, cards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.GangCard parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.GangCard parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.GangCard parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.GangCard parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.GangCard parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.GangCard parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.GangCard parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.GangCard parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.GangCard parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.GangCard parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.GangCard prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.GangCard}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_GangCard_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_GangCard_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.GangCard.class, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.GangCard.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_GangCard_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.GangCard getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.GangCard.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.GangCard build() {
        com.sy599.game.msg.serverPacket.TableRes.GangCard result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.GangCard buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.GangCard result = new com.sy599.game.msg.serverPacket.TableRes.GangCard(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.cards_ = cards_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.GangCard) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.GangCard)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.GangCard other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.GangCard.getDefaultInstance()) return this;
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.GangCard parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.GangCard) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 cards = 1;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *杠的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *杠的牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *杠的牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *杠的牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *杠的牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *杠的牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 1;</code>
       *
       * <pre>
       *杠的牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.GangCard)
    }

    static {
      defaultInstance = new GangCard(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.GangCard)
  }

  public interface YjClosingPlayerInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string userId = 1;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 leftCardNum = 3;
    /**
     * <code>optional int32 leftCardNum = 3;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    boolean hasLeftCardNum();
    /**
     * <code>optional int32 leftCardNum = 3;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    int getLeftCardNum();

    // optional int32 point = 4;
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *局积分
     * </pre>
     */
    boolean hasPoint();
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *局积分
     * </pre>
     */
    int getPoint();

    // optional int32 totalPoint = 5;
    /**
     * <code>optional int32 totalPoint = 5;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    boolean hasTotalPoint();
    /**
     * <code>optional int32 totalPoint = 5;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    int getTotalPoint();

    // optional int32 zimoCount = 6;
    /**
     * <code>optional int32 zimoCount = 6;</code>
     *
     * <pre>
     *自摸次数
     * </pre>
     */
    boolean hasZimoCount();
    /**
     * <code>optional int32 zimoCount = 6;</code>
     *
     * <pre>
     *自摸次数
     * </pre>
     */
    int getZimoCount();

    // optional int32 jiePaoCount = 7;
    /**
     * <code>optional int32 jiePaoCount = 7;</code>
     *
     * <pre>
     *接炮次数
     * </pre>
     */
    boolean hasJiePaoCount();
    /**
     * <code>optional int32 jiePaoCount = 7;</code>
     *
     * <pre>
     *接炮次数
     * </pre>
     */
    int getJiePaoCount();

    // optional int32 fangPaoCount = 8;
    /**
     * <code>optional int32 fangPaoCount = 8;</code>
     *
     * <pre>
     *放炮次数
     * </pre>
     */
    boolean hasFangPaoCount();
    /**
     * <code>optional int32 fangPaoCount = 8;</code>
     *
     * <pre>
     *放炮次数
     * </pre>
     */
    int getFangPaoCount();

    // required int32 seat = 9;
    /**
     * <code>required int32 seat = 9;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>required int32 seat = 9;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    int getSeat();

    // optional int32 sex = 10;
    /**
     * <code>optional int32 sex = 10;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 10;</code>
     */
    int getSex();

    // optional string icon = 11;
    /**
     * <code>optional string icon = 11;</code>
     */
    boolean hasIcon();
    /**
     * <code>optional string icon = 11;</code>
     */
    java.lang.String getIcon();
    /**
     * <code>optional string icon = 11;</code>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    // optional int32 isHu = 12;
    /**
     * <code>optional int32 isHu = 12;</code>
     *
     * <pre>
     * 胡的麻将
     * </pre>
     */
    boolean hasIsHu();
    /**
     * <code>optional int32 isHu = 12;</code>
     *
     * <pre>
     * 胡的麻将
     * </pre>
     */
    int getIsHu();

    // repeated int32 actionCounts = 13;
    /**
     * <code>repeated int32 actionCounts = 13;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    java.util.List<java.lang.Integer> getActionCountsList();
    /**
     * <code>repeated int32 actionCounts = 13;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    int getActionCountsCount();
    /**
     * <code>repeated int32 actionCounts = 13;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    int getActionCounts(int index);

    // repeated int32 cards = 14;
    /**
     * <code>repeated int32 cards = 14;</code>
     *
     * <pre>
     *手上的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 14;</code>
     *
     * <pre>
     *手上的牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 14;</code>
     *
     * <pre>
     *手上的牌
     * </pre>
     */
    int getCards(int index);

    // repeated int32 pengs = 15;
    /**
     * <code>repeated int32 pengs = 15;</code>
     *
     * <pre>
     *碰的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getPengsList();
    /**
     * <code>repeated int32 pengs = 15;</code>
     *
     * <pre>
     *碰的牌
     * </pre>
     */
    int getPengsCount();
    /**
     * <code>repeated int32 pengs = 15;</code>
     *
     * <pre>
     *碰的牌
     * </pre>
     */
    int getPengs(int index);

    // repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> 
        getMGangList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.GangCard getMGang(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    int getMGangCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
        getMGangOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder getMGangOrBuilder(
        int index);

    // repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> 
        getAGangList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.GangCard getAGang(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    int getAGangCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
        getAGangOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder getAGangOrBuilder(
        int index);

    // repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
     *
     * <pre>
     *接杠
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> 
        getJGangList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
     *
     * <pre>
     *接杠
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.GangCard getJGang(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
     *
     * <pre>
     *接杠
     * </pre>
     */
    int getJGangCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
     *
     * <pre>
     *接杠
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
        getJGangOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
     *
     * <pre>
     *接杠
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder getJGangOrBuilder(
        int index);

    // repeated int32 dahus = 19;
    /**
     * <code>repeated int32 dahus = 19;</code>
     *
     * <pre>
     *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    java.util.List<java.lang.Integer> getDahusList();
    /**
     * <code>repeated int32 dahus = 19;</code>
     *
     * <pre>
     *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    int getDahusCount();
    /**
     * <code>repeated int32 dahus = 19;</code>
     *
     * <pre>
     *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    int getDahus(int index);

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> 
        getMcardsList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMcards(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    int getMcardsCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMcardsOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMcardsOrBuilder(
        int index);

    // repeated int32 gangInfos = 21;
    /**
     * <code>repeated int32 gangInfos = 21;</code>
     *
     * <pre>
     *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getGangInfosList();
    /**
     * <code>repeated int32 gangInfos = 21;</code>
     *
     * <pre>
     *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
     * </pre>
     */
    int getGangInfosCount();
    /**
     * <code>repeated int32 gangInfos = 21;</code>
     *
     * <pre>
     *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
     * </pre>
     */
    int getGangInfos(int index);

    // repeated string ext = 22;
    /**
     * <code>repeated string ext = 22;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    java.util.List<java.lang.String>
    getExtList();
    /**
     * <code>repeated string ext = 22;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated string ext = 22;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    java.lang.String getExt(int index);
    /**
     * <code>repeated string ext = 22;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtBytes(int index);

    // repeated int32 dahuCounts = 23;
    /**
     * <code>repeated int32 dahuCounts = 23;</code>
     *
     * <pre>
     *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    java.util.List<java.lang.Integer> getDahuCountsList();
    /**
     * <code>repeated int32 dahuCounts = 23;</code>
     *
     * <pre>
     *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    int getDahuCountsCount();
    /**
     * <code>repeated int32 dahuCounts = 23;</code>
     *
     * <pre>
     *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    int getDahuCounts(int index);

    // optional int32 credit = 24;
    /**
     * <code>optional int32 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    boolean hasCredit();
    /**
     * <code>optional int32 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    int getCredit();

    // optional int64 winLoseCredit = 25;
    /**
     * <code>optional int64 winLoseCredit = 25;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    boolean hasWinLoseCredit();
    /**
     * <code>optional int64 winLoseCredit = 25;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    long getWinLoseCredit();

    // optional int64 commissionCredit = 26;
    /**
     * <code>optional int64 commissionCredit = 26;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    boolean hasCommissionCredit();
    /**
     * <code>optional int64 commissionCredit = 26;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    long getCommissionCredit();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes}
   *
   * <pre>
   *沅江麻将单个玩家结算
   * </pre>
   */
  public static final class YjClosingPlayerInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements YjClosingPlayerInfoResOrBuilder {
    // Use YjClosingPlayerInfoRes.newBuilder() to construct.
    private YjClosingPlayerInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private YjClosingPlayerInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final YjClosingPlayerInfoRes defaultInstance;
    public static YjClosingPlayerInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public YjClosingPlayerInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private YjClosingPlayerInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              leftCardNum_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              point_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              totalPoint_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              zimoCount_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              jiePaoCount_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              fangPaoCount_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              seat_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              sex_ = input.readInt32();
              break;
            }
            case 90: {
              bitField0_ |= 0x00000400;
              icon_ = input.readBytes();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              isHu_ = input.readInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                actionCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              actionCounts_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                actionCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                actionCounts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                pengs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              pengs_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                pengs_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                pengs_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                mGang_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.GangCard>();
                mutable_bitField0_ |= 0x00008000;
              }
              mGang_.add(input.readMessage(com.sy599.game.msg.serverPacket.TableRes.GangCard.PARSER, extensionRegistry));
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                aGang_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.GangCard>();
                mutable_bitField0_ |= 0x00010000;
              }
              aGang_.add(input.readMessage(com.sy599.game.msg.serverPacket.TableRes.GangCard.PARSER, extensionRegistry));
              break;
            }
            case 146: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                jGang_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.GangCard>();
                mutable_bitField0_ |= 0x00020000;
              }
              jGang_.add(input.readMessage(com.sy599.game.msg.serverPacket.TableRes.GangCard.PARSER, extensionRegistry));
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                dahus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              dahus_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                dahus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                dahus_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                mcards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>();
                mutable_bitField0_ |= 0x00080000;
              }
              mcards_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.PARSER, extensionRegistry));
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                gangInfos_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              gangInfos_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                gangInfos_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                gangInfos_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 178: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                ext_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00200000;
              }
              ext_.add(input.readBytes());
              break;
            }
            case 184: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                dahuCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00400000;
              }
              dahuCounts_.add(input.readInt32());
              break;
            }
            case 186: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000) && input.getBytesUntilLimit() > 0) {
                dahuCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00400000;
              }
              while (input.getBytesUntilLimit() > 0) {
                dahuCounts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 192: {
              bitField0_ |= 0x00001000;
              credit_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00002000;
              winLoseCredit_ = input.readInt64();
              break;
            }
            case 208: {
              bitField0_ |= 0x00004000;
              commissionCredit_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          actionCounts_ = java.util.Collections.unmodifiableList(actionCounts_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          pengs_ = java.util.Collections.unmodifiableList(pengs_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          mGang_ = java.util.Collections.unmodifiableList(mGang_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          aGang_ = java.util.Collections.unmodifiableList(aGang_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          jGang_ = java.util.Collections.unmodifiableList(jGang_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          dahus_ = java.util.Collections.unmodifiableList(dahus_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          mcards_ = java.util.Collections.unmodifiableList(mcards_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          gangInfos_ = java.util.Collections.unmodifiableList(gangInfos_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(ext_);
        }
        if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
          dahuCounts_ = java.util.Collections.unmodifiableList(dahuCounts_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjClosingPlayerInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjClosingPlayerInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<YjClosingPlayerInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<YjClosingPlayerInfoRes>() {
      public YjClosingPlayerInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new YjClosingPlayerInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<YjClosingPlayerInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 leftCardNum = 3;
    public static final int LEFTCARDNUM_FIELD_NUMBER = 3;
    private int leftCardNum_;
    /**
     * <code>optional int32 leftCardNum = 3;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    public boolean hasLeftCardNum() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 leftCardNum = 3;</code>
     *
     * <pre>
     *剩余牌数
     * </pre>
     */
    public int getLeftCardNum() {
      return leftCardNum_;
    }

    // optional int32 point = 4;
    public static final int POINT_FIELD_NUMBER = 4;
    private int point_;
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *局积分
     * </pre>
     */
    public boolean hasPoint() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 point = 4;</code>
     *
     * <pre>
     *局积分
     * </pre>
     */
    public int getPoint() {
      return point_;
    }

    // optional int32 totalPoint = 5;
    public static final int TOTALPOINT_FIELD_NUMBER = 5;
    private int totalPoint_;
    /**
     * <code>optional int32 totalPoint = 5;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public boolean hasTotalPoint() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 totalPoint = 5;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public int getTotalPoint() {
      return totalPoint_;
    }

    // optional int32 zimoCount = 6;
    public static final int ZIMOCOUNT_FIELD_NUMBER = 6;
    private int zimoCount_;
    /**
     * <code>optional int32 zimoCount = 6;</code>
     *
     * <pre>
     *自摸次数
     * </pre>
     */
    public boolean hasZimoCount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 zimoCount = 6;</code>
     *
     * <pre>
     *自摸次数
     * </pre>
     */
    public int getZimoCount() {
      return zimoCount_;
    }

    // optional int32 jiePaoCount = 7;
    public static final int JIEPAOCOUNT_FIELD_NUMBER = 7;
    private int jiePaoCount_;
    /**
     * <code>optional int32 jiePaoCount = 7;</code>
     *
     * <pre>
     *接炮次数
     * </pre>
     */
    public boolean hasJiePaoCount() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 jiePaoCount = 7;</code>
     *
     * <pre>
     *接炮次数
     * </pre>
     */
    public int getJiePaoCount() {
      return jiePaoCount_;
    }

    // optional int32 fangPaoCount = 8;
    public static final int FANGPAOCOUNT_FIELD_NUMBER = 8;
    private int fangPaoCount_;
    /**
     * <code>optional int32 fangPaoCount = 8;</code>
     *
     * <pre>
     *放炮次数
     * </pre>
     */
    public boolean hasFangPaoCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 fangPaoCount = 8;</code>
     *
     * <pre>
     *放炮次数
     * </pre>
     */
    public int getFangPaoCount() {
      return fangPaoCount_;
    }

    // required int32 seat = 9;
    public static final int SEAT_FIELD_NUMBER = 9;
    private int seat_;
    /**
     * <code>required int32 seat = 9;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>required int32 seat = 9;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // optional int32 sex = 10;
    public static final int SEX_FIELD_NUMBER = 10;
    private int sex_;
    /**
     * <code>optional int32 sex = 10;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 sex = 10;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional string icon = 11;
    public static final int ICON_FIELD_NUMBER = 11;
    private java.lang.Object icon_;
    /**
     * <code>optional string icon = 11;</code>
     */
    public boolean hasIcon() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string icon = 11;</code>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          icon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string icon = 11;</code>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 isHu = 12;
    public static final int ISHU_FIELD_NUMBER = 12;
    private int isHu_;
    /**
     * <code>optional int32 isHu = 12;</code>
     *
     * <pre>
     * 胡的麻将
     * </pre>
     */
    public boolean hasIsHu() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 isHu = 12;</code>
     *
     * <pre>
     * 胡的麻将
     * </pre>
     */
    public int getIsHu() {
      return isHu_;
    }

    // repeated int32 actionCounts = 13;
    public static final int ACTIONCOUNTS_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> actionCounts_;
    /**
     * <code>repeated int32 actionCounts = 13;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getActionCountsList() {
      return actionCounts_;
    }
    /**
     * <code>repeated int32 actionCounts = 13;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    public int getActionCountsCount() {
      return actionCounts_.size();
    }
    /**
     * <code>repeated int32 actionCounts = 13;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    public int getActionCounts(int index) {
      return actionCounts_.get(index);
    }

    // repeated int32 cards = 14;
    public static final int CARDS_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 14;</code>
     *
     * <pre>
     *手上的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 14;</code>
     *
     * <pre>
     *手上的牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 14;</code>
     *
     * <pre>
     *手上的牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // repeated int32 pengs = 15;
    public static final int PENGS_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> pengs_;
    /**
     * <code>repeated int32 pengs = 15;</code>
     *
     * <pre>
     *碰的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPengsList() {
      return pengs_;
    }
    /**
     * <code>repeated int32 pengs = 15;</code>
     *
     * <pre>
     *碰的牌
     * </pre>
     */
    public int getPengsCount() {
      return pengs_.size();
    }
    /**
     * <code>repeated int32 pengs = 15;</code>
     *
     * <pre>
     *碰的牌
     * </pre>
     */
    public int getPengs(int index) {
      return pengs_.get(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;
    public static final int MGANG_FIELD_NUMBER = 16;
    private java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> mGang_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> getMGangList() {
      return mGang_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
        getMGangOrBuilderList() {
      return mGang_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    public int getMGangCount() {
      return mGang_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.GangCard getMGang(int index) {
      return mGang_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
     *
     * <pre>
     *明杠
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder getMGangOrBuilder(
        int index) {
      return mGang_.get(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;
    public static final int AGANG_FIELD_NUMBER = 17;
    private java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> aGang_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> getAGangList() {
      return aGang_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
        getAGangOrBuilderList() {
      return aGang_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    public int getAGangCount() {
      return aGang_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.GangCard getAGang(int index) {
      return aGang_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
     *
     * <pre>
     *暗杠
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder getAGangOrBuilder(
        int index) {
      return aGang_.get(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;
    public static final int JGANG_FIELD_NUMBER = 18;
    private java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> jGang_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
     *
     * <pre>
     *接杠
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> getJGangList() {
      return jGang_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
     *
     * <pre>
     *接杠
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
        getJGangOrBuilderList() {
      return jGang_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
     *
     * <pre>
     *接杠
     * </pre>
     */
    public int getJGangCount() {
      return jGang_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
     *
     * <pre>
     *接杠
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.GangCard getJGang(int index) {
      return jGang_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
     *
     * <pre>
     *接杠
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder getJGangOrBuilder(
        int index) {
      return jGang_.get(index);
    }

    // repeated int32 dahus = 19;
    public static final int DAHUS_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> dahus_;
    /**
     * <code>repeated int32 dahus = 19;</code>
     *
     * <pre>
     *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDahusList() {
      return dahus_;
    }
    /**
     * <code>repeated int32 dahus = 19;</code>
     *
     * <pre>
     *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    public int getDahusCount() {
      return dahus_.size();
    }
    /**
     * <code>repeated int32 dahus = 19;</code>
     *
     * <pre>
     *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    public int getDahus(int index) {
      return dahus_.get(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;
    public static final int MCARDS_FIELD_NUMBER = 20;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> mcards_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMcardsList() {
      return mcards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMcardsOrBuilderList() {
      return mcards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public int getMcardsCount() {
      return mcards_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMcards(int index) {
      return mcards_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMcardsOrBuilder(
        int index) {
      return mcards_.get(index);
    }

    // repeated int32 gangInfos = 21;
    public static final int GANGINFOS_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> gangInfos_;
    /**
     * <code>repeated int32 gangInfos = 21;</code>
     *
     * <pre>
     *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getGangInfosList() {
      return gangInfos_;
    }
    /**
     * <code>repeated int32 gangInfos = 21;</code>
     *
     * <pre>
     *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
     * </pre>
     */
    public int getGangInfosCount() {
      return gangInfos_.size();
    }
    /**
     * <code>repeated int32 gangInfos = 21;</code>
     *
     * <pre>
     *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
     * </pre>
     */
    public int getGangInfos(int index) {
      return gangInfos_.get(index);
    }

    // repeated string ext = 22;
    public static final int EXT_FIELD_NUMBER = 22;
    private com.google.protobuf.LazyStringList ext_;
    /**
     * <code>repeated string ext = 22;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    public java.util.List<java.lang.String>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated string ext = 22;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated string ext = 22;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    public java.lang.String getExt(int index) {
      return ext_.get(index);
    }
    /**
     * <code>repeated string ext = 22;</code>
     *
     * <pre>
     *拓展字段
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtBytes(int index) {
      return ext_.getByteString(index);
    }

    // repeated int32 dahuCounts = 23;
    public static final int DAHUCOUNTS_FIELD_NUMBER = 23;
    private java.util.List<java.lang.Integer> dahuCounts_;
    /**
     * <code>repeated int32 dahuCounts = 23;</code>
     *
     * <pre>
     *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDahuCountsList() {
      return dahuCounts_;
    }
    /**
     * <code>repeated int32 dahuCounts = 23;</code>
     *
     * <pre>
     *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    public int getDahuCountsCount() {
      return dahuCounts_.size();
    }
    /**
     * <code>repeated int32 dahuCounts = 23;</code>
     *
     * <pre>
     *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
     * </pre>
     */
    public int getDahuCounts(int index) {
      return dahuCounts_.get(index);
    }

    // optional int32 credit = 24;
    public static final int CREDIT_FIELD_NUMBER = 24;
    private int credit_;
    /**
     * <code>optional int32 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    public boolean hasCredit() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    public int getCredit() {
      return credit_;
    }

    // optional int64 winLoseCredit = 25;
    public static final int WINLOSECREDIT_FIELD_NUMBER = 25;
    private long winLoseCredit_;
    /**
     * <code>optional int64 winLoseCredit = 25;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    public boolean hasWinLoseCredit() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 winLoseCredit = 25;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    public long getWinLoseCredit() {
      return winLoseCredit_;
    }

    // optional int64 commissionCredit = 26;
    public static final int COMMISSIONCREDIT_FIELD_NUMBER = 26;
    private long commissionCredit_;
    /**
     * <code>optional int64 commissionCredit = 26;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    public boolean hasCommissionCredit() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 commissionCredit = 26;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    public long getCommissionCredit() {
      return commissionCredit_;
    }

    private void initFields() {
      userId_ = "";
      name_ = "";
      leftCardNum_ = 0;
      point_ = 0;
      totalPoint_ = 0;
      zimoCount_ = 0;
      jiePaoCount_ = 0;
      fangPaoCount_ = 0;
      seat_ = 0;
      sex_ = 0;
      icon_ = "";
      isHu_ = 0;
      actionCounts_ = java.util.Collections.emptyList();
      cards_ = java.util.Collections.emptyList();
      pengs_ = java.util.Collections.emptyList();
      mGang_ = java.util.Collections.emptyList();
      aGang_ = java.util.Collections.emptyList();
      jGang_ = java.util.Collections.emptyList();
      dahus_ = java.util.Collections.emptyList();
      mcards_ = java.util.Collections.emptyList();
      gangInfos_ = java.util.Collections.emptyList();
      ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      dahuCounts_ = java.util.Collections.emptyList();
      credit_ = 0;
      winLoseCredit_ = 0L;
      commissionCredit_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMcardsCount(); i++) {
        if (!getMcards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, leftCardNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, point_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, totalPoint_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, zimoCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, jiePaoCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, fangPaoCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, seat_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, sex_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(11, getIconBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, isHu_);
      }
      for (int i = 0; i < actionCounts_.size(); i++) {
        output.writeInt32(13, actionCounts_.get(i));
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(14, cards_.get(i));
      }
      for (int i = 0; i < pengs_.size(); i++) {
        output.writeInt32(15, pengs_.get(i));
      }
      for (int i = 0; i < mGang_.size(); i++) {
        output.writeMessage(16, mGang_.get(i));
      }
      for (int i = 0; i < aGang_.size(); i++) {
        output.writeMessage(17, aGang_.get(i));
      }
      for (int i = 0; i < jGang_.size(); i++) {
        output.writeMessage(18, jGang_.get(i));
      }
      for (int i = 0; i < dahus_.size(); i++) {
        output.writeInt32(19, dahus_.get(i));
      }
      for (int i = 0; i < mcards_.size(); i++) {
        output.writeMessage(20, mcards_.get(i));
      }
      for (int i = 0; i < gangInfos_.size(); i++) {
        output.writeInt32(21, gangInfos_.get(i));
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeBytes(22, ext_.getByteString(i));
      }
      for (int i = 0; i < dahuCounts_.size(); i++) {
        output.writeInt32(23, dahuCounts_.get(i));
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(24, credit_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(25, winLoseCredit_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(26, commissionCredit_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, leftCardNum_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, point_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, totalPoint_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, zimoCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, jiePaoCount_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, fangPaoCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, seat_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, sex_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getIconBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, isHu_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < actionCounts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(actionCounts_.get(i));
        }
        size += dataSize;
        size += 1 * getActionCountsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pengs_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(pengs_.get(i));
        }
        size += dataSize;
        size += 1 * getPengsList().size();
      }
      for (int i = 0; i < mGang_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, mGang_.get(i));
      }
      for (int i = 0; i < aGang_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, aGang_.get(i));
      }
      for (int i = 0; i < jGang_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(18, jGang_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dahus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dahus_.get(i));
        }
        size += dataSize;
        size += 2 * getDahusList().size();
      }
      for (int i = 0; i < mcards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, mcards_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < gangInfos_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(gangInfos_.get(i));
        }
        size += dataSize;
        size += 2 * getGangInfosList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ext_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getExtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dahuCounts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dahuCounts_.get(i));
        }
        size += dataSize;
        size += 2 * getDahuCountsList().size();
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, credit_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(25, winLoseCredit_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(26, commissionCredit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes}
     *
     * <pre>
     *沅江麻将单个玩家结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjClosingPlayerInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjClosingPlayerInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMGangFieldBuilder();
          getAGangFieldBuilder();
          getJGangFieldBuilder();
          getMcardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        leftCardNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        point_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        totalPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        zimoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        jiePaoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        fangPaoCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        icon_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        isHu_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        actionCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        pengs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        if (mGangBuilder_ == null) {
          mGang_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          mGangBuilder_.clear();
        }
        if (aGangBuilder_ == null) {
          aGang_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          aGangBuilder_.clear();
        }
        if (jGangBuilder_ == null) {
          jGang_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          jGangBuilder_.clear();
        }
        dahus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        if (mcardsBuilder_ == null) {
          mcards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
        } else {
          mcardsBuilder_.clear();
        }
        gangInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00200000);
        dahuCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        credit_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        winLoseCredit_ = 0L;
        bitField0_ = (bitField0_ & ~0x01000000);
        commissionCredit_ = 0L;
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjClosingPlayerInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes build() {
        com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes result = new com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.leftCardNum_ = leftCardNum_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.point_ = point_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.totalPoint_ = totalPoint_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.zimoCount_ = zimoCount_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.jiePaoCount_ = jiePaoCount_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.fangPaoCount_ = fangPaoCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.icon_ = icon_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isHu_ = isHu_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          actionCounts_ = java.util.Collections.unmodifiableList(actionCounts_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.actionCounts_ = actionCounts_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.cards_ = cards_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          pengs_ = java.util.Collections.unmodifiableList(pengs_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.pengs_ = pengs_;
        if (mGangBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            mGang_ = java.util.Collections.unmodifiableList(mGang_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.mGang_ = mGang_;
        } else {
          result.mGang_ = mGangBuilder_.build();
        }
        if (aGangBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            aGang_ = java.util.Collections.unmodifiableList(aGang_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.aGang_ = aGang_;
        } else {
          result.aGang_ = aGangBuilder_.build();
        }
        if (jGangBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            jGang_ = java.util.Collections.unmodifiableList(jGang_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.jGang_ = jGang_;
        } else {
          result.jGang_ = jGangBuilder_.build();
        }
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          dahus_ = java.util.Collections.unmodifiableList(dahus_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.dahus_ = dahus_;
        if (mcardsBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000)) {
            mcards_ = java.util.Collections.unmodifiableList(mcards_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.mcards_ = mcards_;
        } else {
          result.mcards_ = mcardsBuilder_.build();
        }
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          gangInfos_ = java.util.Collections.unmodifiableList(gangInfos_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.gangInfos_ = gangInfos_;
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(
              ext_);
          bitField0_ = (bitField0_ & ~0x00200000);
        }
        result.ext_ = ext_;
        if (((bitField0_ & 0x00400000) == 0x00400000)) {
          dahuCounts_ = java.util.Collections.unmodifiableList(dahuCounts_);
          bitField0_ = (bitField0_ & ~0x00400000);
        }
        result.dahuCounts_ = dahuCounts_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.credit_ = credit_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.winLoseCredit_ = winLoseCredit_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.commissionCredit_ = commissionCredit_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasLeftCardNum()) {
          setLeftCardNum(other.getLeftCardNum());
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        if (other.hasTotalPoint()) {
          setTotalPoint(other.getTotalPoint());
        }
        if (other.hasZimoCount()) {
          setZimoCount(other.getZimoCount());
        }
        if (other.hasJiePaoCount()) {
          setJiePaoCount(other.getJiePaoCount());
        }
        if (other.hasFangPaoCount()) {
          setFangPaoCount(other.getFangPaoCount());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasIcon()) {
          bitField0_ |= 0x00000400;
          icon_ = other.icon_;
          onChanged();
        }
        if (other.hasIsHu()) {
          setIsHu(other.getIsHu());
        }
        if (!other.actionCounts_.isEmpty()) {
          if (actionCounts_.isEmpty()) {
            actionCounts_ = other.actionCounts_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureActionCountsIsMutable();
            actionCounts_.addAll(other.actionCounts_);
          }
          onChanged();
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (!other.pengs_.isEmpty()) {
          if (pengs_.isEmpty()) {
            pengs_ = other.pengs_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensurePengsIsMutable();
            pengs_.addAll(other.pengs_);
          }
          onChanged();
        }
        if (mGangBuilder_ == null) {
          if (!other.mGang_.isEmpty()) {
            if (mGang_.isEmpty()) {
              mGang_ = other.mGang_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureMGangIsMutable();
              mGang_.addAll(other.mGang_);
            }
            onChanged();
          }
        } else {
          if (!other.mGang_.isEmpty()) {
            if (mGangBuilder_.isEmpty()) {
              mGangBuilder_.dispose();
              mGangBuilder_ = null;
              mGang_ = other.mGang_;
              bitField0_ = (bitField0_ & ~0x00008000);
              mGangBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMGangFieldBuilder() : null;
            } else {
              mGangBuilder_.addAllMessages(other.mGang_);
            }
          }
        }
        if (aGangBuilder_ == null) {
          if (!other.aGang_.isEmpty()) {
            if (aGang_.isEmpty()) {
              aGang_ = other.aGang_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureAGangIsMutable();
              aGang_.addAll(other.aGang_);
            }
            onChanged();
          }
        } else {
          if (!other.aGang_.isEmpty()) {
            if (aGangBuilder_.isEmpty()) {
              aGangBuilder_.dispose();
              aGangBuilder_ = null;
              aGang_ = other.aGang_;
              bitField0_ = (bitField0_ & ~0x00010000);
              aGangBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAGangFieldBuilder() : null;
            } else {
              aGangBuilder_.addAllMessages(other.aGang_);
            }
          }
        }
        if (jGangBuilder_ == null) {
          if (!other.jGang_.isEmpty()) {
            if (jGang_.isEmpty()) {
              jGang_ = other.jGang_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureJGangIsMutable();
              jGang_.addAll(other.jGang_);
            }
            onChanged();
          }
        } else {
          if (!other.jGang_.isEmpty()) {
            if (jGangBuilder_.isEmpty()) {
              jGangBuilder_.dispose();
              jGangBuilder_ = null;
              jGang_ = other.jGang_;
              bitField0_ = (bitField0_ & ~0x00020000);
              jGangBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getJGangFieldBuilder() : null;
            } else {
              jGangBuilder_.addAllMessages(other.jGang_);
            }
          }
        }
        if (!other.dahus_.isEmpty()) {
          if (dahus_.isEmpty()) {
            dahus_ = other.dahus_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureDahusIsMutable();
            dahus_.addAll(other.dahus_);
          }
          onChanged();
        }
        if (mcardsBuilder_ == null) {
          if (!other.mcards_.isEmpty()) {
            if (mcards_.isEmpty()) {
              mcards_ = other.mcards_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureMcardsIsMutable();
              mcards_.addAll(other.mcards_);
            }
            onChanged();
          }
        } else {
          if (!other.mcards_.isEmpty()) {
            if (mcardsBuilder_.isEmpty()) {
              mcardsBuilder_.dispose();
              mcardsBuilder_ = null;
              mcards_ = other.mcards_;
              bitField0_ = (bitField0_ & ~0x00080000);
              mcardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMcardsFieldBuilder() : null;
            } else {
              mcardsBuilder_.addAllMessages(other.mcards_);
            }
          }
        }
        if (!other.gangInfos_.isEmpty()) {
          if (gangInfos_.isEmpty()) {
            gangInfos_ = other.gangInfos_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureGangInfosIsMutable();
            gangInfos_.addAll(other.gangInfos_);
          }
          onChanged();
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00200000);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        if (!other.dahuCounts_.isEmpty()) {
          if (dahuCounts_.isEmpty()) {
            dahuCounts_ = other.dahuCounts_;
            bitField0_ = (bitField0_ & ~0x00400000);
          } else {
            ensureDahuCountsIsMutable();
            dahuCounts_.addAll(other.dahuCounts_);
          }
          onChanged();
        }
        if (other.hasCredit()) {
          setCredit(other.getCredit());
        }
        if (other.hasWinLoseCredit()) {
          setWinLoseCredit(other.getWinLoseCredit());
        }
        if (other.hasCommissionCredit()) {
          setCommissionCredit(other.getCommissionCredit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeat()) {
          
          return false;
        }
        for (int i = 0; i < getMcardsCount(); i++) {
          if (!getMcards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 leftCardNum = 3;
      private int leftCardNum_ ;
      /**
       * <code>optional int32 leftCardNum = 3;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public boolean hasLeftCardNum() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 leftCardNum = 3;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public int getLeftCardNum() {
        return leftCardNum_;
      }
      /**
       * <code>optional int32 leftCardNum = 3;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public Builder setLeftCardNum(int value) {
        bitField0_ |= 0x00000004;
        leftCardNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 leftCardNum = 3;</code>
       *
       * <pre>
       *剩余牌数
       * </pre>
       */
      public Builder clearLeftCardNum() {
        bitField0_ = (bitField0_ & ~0x00000004);
        leftCardNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 point = 4;
      private int point_ ;
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *局积分
       * </pre>
       */
      public boolean hasPoint() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *局积分
       * </pre>
       */
      public int getPoint() {
        return point_;
      }
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *局积分
       * </pre>
       */
      public Builder setPoint(int value) {
        bitField0_ |= 0x00000008;
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 point = 4;</code>
       *
       * <pre>
       *局积分
       * </pre>
       */
      public Builder clearPoint() {
        bitField0_ = (bitField0_ & ~0x00000008);
        point_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalPoint = 5;
      private int totalPoint_ ;
      /**
       * <code>optional int32 totalPoint = 5;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public boolean hasTotalPoint() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 totalPoint = 5;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public int getTotalPoint() {
        return totalPoint_;
      }
      /**
       * <code>optional int32 totalPoint = 5;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder setTotalPoint(int value) {
        bitField0_ |= 0x00000010;
        totalPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalPoint = 5;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder clearTotalPoint() {
        bitField0_ = (bitField0_ & ~0x00000010);
        totalPoint_ = 0;
        onChanged();
        return this;
      }

      // optional int32 zimoCount = 6;
      private int zimoCount_ ;
      /**
       * <code>optional int32 zimoCount = 6;</code>
       *
       * <pre>
       *自摸次数
       * </pre>
       */
      public boolean hasZimoCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 zimoCount = 6;</code>
       *
       * <pre>
       *自摸次数
       * </pre>
       */
      public int getZimoCount() {
        return zimoCount_;
      }
      /**
       * <code>optional int32 zimoCount = 6;</code>
       *
       * <pre>
       *自摸次数
       * </pre>
       */
      public Builder setZimoCount(int value) {
        bitField0_ |= 0x00000020;
        zimoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zimoCount = 6;</code>
       *
       * <pre>
       *自摸次数
       * </pre>
       */
      public Builder clearZimoCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        zimoCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jiePaoCount = 7;
      private int jiePaoCount_ ;
      /**
       * <code>optional int32 jiePaoCount = 7;</code>
       *
       * <pre>
       *接炮次数
       * </pre>
       */
      public boolean hasJiePaoCount() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 jiePaoCount = 7;</code>
       *
       * <pre>
       *接炮次数
       * </pre>
       */
      public int getJiePaoCount() {
        return jiePaoCount_;
      }
      /**
       * <code>optional int32 jiePaoCount = 7;</code>
       *
       * <pre>
       *接炮次数
       * </pre>
       */
      public Builder setJiePaoCount(int value) {
        bitField0_ |= 0x00000040;
        jiePaoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jiePaoCount = 7;</code>
       *
       * <pre>
       *接炮次数
       * </pre>
       */
      public Builder clearJiePaoCount() {
        bitField0_ = (bitField0_ & ~0x00000040);
        jiePaoCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fangPaoCount = 8;
      private int fangPaoCount_ ;
      /**
       * <code>optional int32 fangPaoCount = 8;</code>
       *
       * <pre>
       *放炮次数
       * </pre>
       */
      public boolean hasFangPaoCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 fangPaoCount = 8;</code>
       *
       * <pre>
       *放炮次数
       * </pre>
       */
      public int getFangPaoCount() {
        return fangPaoCount_;
      }
      /**
       * <code>optional int32 fangPaoCount = 8;</code>
       *
       * <pre>
       *放炮次数
       * </pre>
       */
      public Builder setFangPaoCount(int value) {
        bitField0_ |= 0x00000080;
        fangPaoCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fangPaoCount = 8;</code>
       *
       * <pre>
       *放炮次数
       * </pre>
       */
      public Builder clearFangPaoCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fangPaoCount_ = 0;
        onChanged();
        return this;
      }

      // required int32 seat = 9;
      private int seat_ ;
      /**
       * <code>required int32 seat = 9;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>required int32 seat = 9;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>required int32 seat = 9;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000100;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 seat = 9;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000100);
        seat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 10;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 10;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 sex = 10;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 10;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000200;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 10;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000200);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional string icon = 11;
      private java.lang.Object icon_ = "";
      /**
       * <code>optional string icon = 11;</code>
       */
      public boolean hasIcon() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string icon = 11;</code>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string icon = 11;</code>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string icon = 11;</code>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 11;</code>
       */
      public Builder clearIcon() {
        bitField0_ = (bitField0_ & ~0x00000400);
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 11;</code>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        icon_ = value;
        onChanged();
        return this;
      }

      // optional int32 isHu = 12;
      private int isHu_ ;
      /**
       * <code>optional int32 isHu = 12;</code>
       *
       * <pre>
       * 胡的麻将
       * </pre>
       */
      public boolean hasIsHu() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 isHu = 12;</code>
       *
       * <pre>
       * 胡的麻将
       * </pre>
       */
      public int getIsHu() {
        return isHu_;
      }
      /**
       * <code>optional int32 isHu = 12;</code>
       *
       * <pre>
       * 胡的麻将
       * </pre>
       */
      public Builder setIsHu(int value) {
        bitField0_ |= 0x00000800;
        isHu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isHu = 12;</code>
       *
       * <pre>
       * 胡的麻将
       * </pre>
       */
      public Builder clearIsHu() {
        bitField0_ = (bitField0_ & ~0x00000800);
        isHu_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 actionCounts = 13;
      private java.util.List<java.lang.Integer> actionCounts_ = java.util.Collections.emptyList();
      private void ensureActionCountsIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          actionCounts_ = new java.util.ArrayList<java.lang.Integer>(actionCounts_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 actionCounts = 13;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getActionCountsList() {
        return java.util.Collections.unmodifiableList(actionCounts_);
      }
      /**
       * <code>repeated int32 actionCounts = 13;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public int getActionCountsCount() {
        return actionCounts_.size();
      }
      /**
       * <code>repeated int32 actionCounts = 13;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public int getActionCounts(int index) {
        return actionCounts_.get(index);
      }
      /**
       * <code>repeated int32 actionCounts = 13;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder setActionCounts(
          int index, int value) {
        ensureActionCountsIsMutable();
        actionCounts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionCounts = 13;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder addActionCounts(int value) {
        ensureActionCountsIsMutable();
        actionCounts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionCounts = 13;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder addAllActionCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActionCountsIsMutable();
        super.addAll(values, actionCounts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionCounts = 13;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder clearActionCounts() {
        actionCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // repeated int32 cards = 14;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 cards = 14;</code>
       *
       * <pre>
       *手上的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 14;</code>
       *
       * <pre>
       *手上的牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 14;</code>
       *
       * <pre>
       *手上的牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 14;</code>
       *
       * <pre>
       *手上的牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 14;</code>
       *
       * <pre>
       *手上的牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 14;</code>
       *
       * <pre>
       *手上的牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 14;</code>
       *
       * <pre>
       *手上的牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int32 pengs = 15;
      private java.util.List<java.lang.Integer> pengs_ = java.util.Collections.emptyList();
      private void ensurePengsIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          pengs_ = new java.util.ArrayList<java.lang.Integer>(pengs_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 pengs = 15;</code>
       *
       * <pre>
       *碰的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPengsList() {
        return java.util.Collections.unmodifiableList(pengs_);
      }
      /**
       * <code>repeated int32 pengs = 15;</code>
       *
       * <pre>
       *碰的牌
       * </pre>
       */
      public int getPengsCount() {
        return pengs_.size();
      }
      /**
       * <code>repeated int32 pengs = 15;</code>
       *
       * <pre>
       *碰的牌
       * </pre>
       */
      public int getPengs(int index) {
        return pengs_.get(index);
      }
      /**
       * <code>repeated int32 pengs = 15;</code>
       *
       * <pre>
       *碰的牌
       * </pre>
       */
      public Builder setPengs(
          int index, int value) {
        ensurePengsIsMutable();
        pengs_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pengs = 15;</code>
       *
       * <pre>
       *碰的牌
       * </pre>
       */
      public Builder addPengs(int value) {
        ensurePengsIsMutable();
        pengs_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pengs = 15;</code>
       *
       * <pre>
       *碰的牌
       * </pre>
       */
      public Builder addAllPengs(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePengsIsMutable();
        super.addAll(values, pengs_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pengs = 15;</code>
       *
       * <pre>
       *碰的牌
       * </pre>
       */
      public Builder clearPengs() {
        pengs_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;
      private java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> mGang_ =
        java.util.Collections.emptyList();
      private void ensureMGangIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          mGang_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.GangCard>(mGang_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.GangCard, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder, com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> mGangBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> getMGangList() {
        if (mGangBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mGang_);
        } else {
          return mGangBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public int getMGangCount() {
        if (mGangBuilder_ == null) {
          return mGang_.size();
        } else {
          return mGangBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard getMGang(int index) {
        if (mGangBuilder_ == null) {
          return mGang_.get(index);
        } else {
          return mGangBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public Builder setMGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard value) {
        if (mGangBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMGangIsMutable();
          mGang_.set(index, value);
          onChanged();
        } else {
          mGangBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public Builder setMGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder builderForValue) {
        if (mGangBuilder_ == null) {
          ensureMGangIsMutable();
          mGang_.set(index, builderForValue.build());
          onChanged();
        } else {
          mGangBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public Builder addMGang(com.sy599.game.msg.serverPacket.TableRes.GangCard value) {
        if (mGangBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMGangIsMutable();
          mGang_.add(value);
          onChanged();
        } else {
          mGangBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public Builder addMGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard value) {
        if (mGangBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMGangIsMutable();
          mGang_.add(index, value);
          onChanged();
        } else {
          mGangBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public Builder addMGang(
          com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder builderForValue) {
        if (mGangBuilder_ == null) {
          ensureMGangIsMutable();
          mGang_.add(builderForValue.build());
          onChanged();
        } else {
          mGangBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public Builder addMGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder builderForValue) {
        if (mGangBuilder_ == null) {
          ensureMGangIsMutable();
          mGang_.add(index, builderForValue.build());
          onChanged();
        } else {
          mGangBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public Builder addAllMGang(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TableRes.GangCard> values) {
        if (mGangBuilder_ == null) {
          ensureMGangIsMutable();
          super.addAll(values, mGang_);
          onChanged();
        } else {
          mGangBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public Builder clearMGang() {
        if (mGangBuilder_ == null) {
          mGang_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          mGangBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public Builder removeMGang(int index) {
        if (mGangBuilder_ == null) {
          ensureMGangIsMutable();
          mGang_.remove(index);
          onChanged();
        } else {
          mGangBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder getMGangBuilder(
          int index) {
        return getMGangFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder getMGangOrBuilder(
          int index) {
        if (mGangBuilder_ == null) {
          return mGang_.get(index);  } else {
          return mGangBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
           getMGangOrBuilderList() {
        if (mGangBuilder_ != null) {
          return mGangBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mGang_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder addMGangBuilder() {
        return getMGangFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TableRes.GangCard.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder addMGangBuilder(
          int index) {
        return getMGangFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TableRes.GangCard.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard mGang = 16;</code>
       *
       * <pre>
       *明杠
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder> 
           getMGangBuilderList() {
        return getMGangFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.GangCard, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder, com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
          getMGangFieldBuilder() {
        if (mGangBuilder_ == null) {
          mGangBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TableRes.GangCard, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder, com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder>(
                  mGang_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          mGang_ = null;
        }
        return mGangBuilder_;
      }

      // repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;
      private java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> aGang_ =
        java.util.Collections.emptyList();
      private void ensureAGangIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          aGang_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.GangCard>(aGang_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.GangCard, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder, com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> aGangBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> getAGangList() {
        if (aGangBuilder_ == null) {
          return java.util.Collections.unmodifiableList(aGang_);
        } else {
          return aGangBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public int getAGangCount() {
        if (aGangBuilder_ == null) {
          return aGang_.size();
        } else {
          return aGangBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard getAGang(int index) {
        if (aGangBuilder_ == null) {
          return aGang_.get(index);
        } else {
          return aGangBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public Builder setAGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard value) {
        if (aGangBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAGangIsMutable();
          aGang_.set(index, value);
          onChanged();
        } else {
          aGangBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public Builder setAGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder builderForValue) {
        if (aGangBuilder_ == null) {
          ensureAGangIsMutable();
          aGang_.set(index, builderForValue.build());
          onChanged();
        } else {
          aGangBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public Builder addAGang(com.sy599.game.msg.serverPacket.TableRes.GangCard value) {
        if (aGangBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAGangIsMutable();
          aGang_.add(value);
          onChanged();
        } else {
          aGangBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public Builder addAGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard value) {
        if (aGangBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAGangIsMutable();
          aGang_.add(index, value);
          onChanged();
        } else {
          aGangBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public Builder addAGang(
          com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder builderForValue) {
        if (aGangBuilder_ == null) {
          ensureAGangIsMutable();
          aGang_.add(builderForValue.build());
          onChanged();
        } else {
          aGangBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public Builder addAGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder builderForValue) {
        if (aGangBuilder_ == null) {
          ensureAGangIsMutable();
          aGang_.add(index, builderForValue.build());
          onChanged();
        } else {
          aGangBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public Builder addAllAGang(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TableRes.GangCard> values) {
        if (aGangBuilder_ == null) {
          ensureAGangIsMutable();
          super.addAll(values, aGang_);
          onChanged();
        } else {
          aGangBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public Builder clearAGang() {
        if (aGangBuilder_ == null) {
          aGang_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          aGangBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public Builder removeAGang(int index) {
        if (aGangBuilder_ == null) {
          ensureAGangIsMutable();
          aGang_.remove(index);
          onChanged();
        } else {
          aGangBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder getAGangBuilder(
          int index) {
        return getAGangFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder getAGangOrBuilder(
          int index) {
        if (aGangBuilder_ == null) {
          return aGang_.get(index);  } else {
          return aGangBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
           getAGangOrBuilderList() {
        if (aGangBuilder_ != null) {
          return aGangBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(aGang_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder addAGangBuilder() {
        return getAGangFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TableRes.GangCard.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder addAGangBuilder(
          int index) {
        return getAGangFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TableRes.GangCard.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard aGang = 17;</code>
       *
       * <pre>
       *暗杠
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder> 
           getAGangBuilderList() {
        return getAGangFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.GangCard, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder, com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
          getAGangFieldBuilder() {
        if (aGangBuilder_ == null) {
          aGangBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TableRes.GangCard, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder, com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder>(
                  aGang_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          aGang_ = null;
        }
        return aGangBuilder_;
      }

      // repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;
      private java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> jGang_ =
        java.util.Collections.emptyList();
      private void ensureJGangIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          jGang_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.GangCard>(jGang_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.GangCard, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder, com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> jGangBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard> getJGangList() {
        if (jGangBuilder_ == null) {
          return java.util.Collections.unmodifiableList(jGang_);
        } else {
          return jGangBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public int getJGangCount() {
        if (jGangBuilder_ == null) {
          return jGang_.size();
        } else {
          return jGangBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard getJGang(int index) {
        if (jGangBuilder_ == null) {
          return jGang_.get(index);
        } else {
          return jGangBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public Builder setJGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard value) {
        if (jGangBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJGangIsMutable();
          jGang_.set(index, value);
          onChanged();
        } else {
          jGangBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public Builder setJGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder builderForValue) {
        if (jGangBuilder_ == null) {
          ensureJGangIsMutable();
          jGang_.set(index, builderForValue.build());
          onChanged();
        } else {
          jGangBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public Builder addJGang(com.sy599.game.msg.serverPacket.TableRes.GangCard value) {
        if (jGangBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJGangIsMutable();
          jGang_.add(value);
          onChanged();
        } else {
          jGangBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public Builder addJGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard value) {
        if (jGangBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureJGangIsMutable();
          jGang_.add(index, value);
          onChanged();
        } else {
          jGangBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public Builder addJGang(
          com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder builderForValue) {
        if (jGangBuilder_ == null) {
          ensureJGangIsMutable();
          jGang_.add(builderForValue.build());
          onChanged();
        } else {
          jGangBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public Builder addJGang(
          int index, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder builderForValue) {
        if (jGangBuilder_ == null) {
          ensureJGangIsMutable();
          jGang_.add(index, builderForValue.build());
          onChanged();
        } else {
          jGangBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public Builder addAllJGang(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TableRes.GangCard> values) {
        if (jGangBuilder_ == null) {
          ensureJGangIsMutable();
          super.addAll(values, jGang_);
          onChanged();
        } else {
          jGangBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public Builder clearJGang() {
        if (jGangBuilder_ == null) {
          jGang_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          jGangBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public Builder removeJGang(int index) {
        if (jGangBuilder_ == null) {
          ensureJGangIsMutable();
          jGang_.remove(index);
          onChanged();
        } else {
          jGangBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder getJGangBuilder(
          int index) {
        return getJGangFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder getJGangOrBuilder(
          int index) {
        if (jGangBuilder_ == null) {
          return jGang_.get(index);  } else {
          return jGangBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
           getJGangOrBuilderList() {
        if (jGangBuilder_ != null) {
          return jGangBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(jGang_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder addJGangBuilder() {
        return getJGangFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TableRes.GangCard.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder addJGangBuilder(
          int index) {
        return getJGangFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TableRes.GangCard.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.GangCard jGang = 18;</code>
       *
       * <pre>
       *接杠
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder> 
           getJGangBuilderList() {
        return getJGangFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.GangCard, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder, com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder> 
          getJGangFieldBuilder() {
        if (jGangBuilder_ == null) {
          jGangBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TableRes.GangCard, com.sy599.game.msg.serverPacket.TableRes.GangCard.Builder, com.sy599.game.msg.serverPacket.TableRes.GangCardOrBuilder>(
                  jGang_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          jGang_ = null;
        }
        return jGangBuilder_;
      }

      // repeated int32 dahus = 19;
      private java.util.List<java.lang.Integer> dahus_ = java.util.Collections.emptyList();
      private void ensureDahusIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          dahus_ = new java.util.ArrayList<java.lang.Integer>(dahus_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 dahus = 19;</code>
       *
       * <pre>
       *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDahusList() {
        return java.util.Collections.unmodifiableList(dahus_);
      }
      /**
       * <code>repeated int32 dahus = 19;</code>
       *
       * <pre>
       *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public int getDahusCount() {
        return dahus_.size();
      }
      /**
       * <code>repeated int32 dahus = 19;</code>
       *
       * <pre>
       *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public int getDahus(int index) {
        return dahus_.get(index);
      }
      /**
       * <code>repeated int32 dahus = 19;</code>
       *
       * <pre>
       *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public Builder setDahus(
          int index, int value) {
        ensureDahusIsMutable();
        dahus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 19;</code>
       *
       * <pre>
       *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public Builder addDahus(int value) {
        ensureDahusIsMutable();
        dahus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 19;</code>
       *
       * <pre>
       *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public Builder addAllDahus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDahusIsMutable();
        super.addAll(values, dahus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 19;</code>
       *
       * <pre>
       *大胡  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public Builder clearDahus() {
        dahus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> mcards_ =
        java.util.Collections.emptyList();
      private void ensureMcardsIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          mcards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>(mcards_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> mcardsBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMcardsList() {
        if (mcardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mcards_);
        } else {
          return mcardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public int getMcardsCount() {
        if (mcardsBuilder_ == null) {
          return mcards_.size();
        } else {
          return mcardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMcards(int index) {
        if (mcardsBuilder_ == null) {
          return mcards_.get(index);
        } else {
          return mcardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (mcardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMcardsIsMutable();
          mcards_.set(index, value);
          onChanged();
        } else {
          mcardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.set(index, builderForValue.build());
          onChanged();
        } else {
          mcardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (mcardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMcardsIsMutable();
          mcards_.add(value);
          onChanged();
        } else {
          mcardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (mcardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMcardsIsMutable();
          mcards_.add(index, value);
          onChanged();
        } else {
          mcardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.add(builderForValue.build());
          onChanged();
        } else {
          mcardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.add(index, builderForValue.build());
          onChanged();
        } else {
          mcardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addAllMcards(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> values) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          super.addAll(values, mcards_);
          onChanged();
        } else {
          mcardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder clearMcards() {
        if (mcardsBuilder_ == null) {
          mcards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          mcardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder removeMcards(int index) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.remove(index);
          onChanged();
        } else {
          mcardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder getMcardsBuilder(
          int index) {
        return getMcardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMcardsOrBuilder(
          int index) {
        if (mcardsBuilder_ == null) {
          return mcards_.get(index);  } else {
          return mcardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
           getMcardsOrBuilderList() {
        if (mcardsBuilder_ != null) {
          return mcardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mcards_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMcardsBuilder() {
        return getMcardsFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMcardsBuilder(
          int index) {
        return getMcardsFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder> 
           getMcardsBuilderList() {
        return getMcardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
          getMcardsFieldBuilder() {
        if (mcardsBuilder_ == null) {
          mcardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder>(
                  mcards_,
                  ((bitField0_ & 0x00080000) == 0x00080000),
                  getParentForChildren(),
                  isClean());
          mcards_ = null;
        }
        return mcardsBuilder_;
      }

      // repeated int32 gangInfos = 21;
      private java.util.List<java.lang.Integer> gangInfos_ = java.util.Collections.emptyList();
      private void ensureGangInfosIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          gangInfos_ = new java.util.ArrayList<java.lang.Integer>(gangInfos_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 gangInfos = 21;</code>
       *
       * <pre>
       *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getGangInfosList() {
        return java.util.Collections.unmodifiableList(gangInfos_);
      }
      /**
       * <code>repeated int32 gangInfos = 21;</code>
       *
       * <pre>
       *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
       * </pre>
       */
      public int getGangInfosCount() {
        return gangInfos_.size();
      }
      /**
       * <code>repeated int32 gangInfos = 21;</code>
       *
       * <pre>
       *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
       * </pre>
       */
      public int getGangInfos(int index) {
        return gangInfos_.get(index);
      }
      /**
       * <code>repeated int32 gangInfos = 21;</code>
       *
       * <pre>
       *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
       * </pre>
       */
      public Builder setGangInfos(
          int index, int value) {
        ensureGangInfosIsMutable();
        gangInfos_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gangInfos = 21;</code>
       *
       * <pre>
       *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
       * </pre>
       */
      public Builder addGangInfos(int value) {
        ensureGangInfosIsMutable();
        gangInfos_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gangInfos = 21;</code>
       *
       * <pre>
       *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
       * </pre>
       */
      public Builder addAllGangInfos(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureGangInfosIsMutable();
        super.addAll(values, gangInfos_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 gangInfos = 21;</code>
       *
       * <pre>
       *杠相关信息    0暗杠次数 1摸杠次数 2接杠次数 3放杠次数
       * </pre>
       */
      public Builder clearGangInfos() {
        gangInfos_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // repeated string ext = 22;
      private com.google.protobuf.LazyStringList ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          ext_ = new com.google.protobuf.LazyStringArrayList(ext_);
          bitField0_ |= 0x00200000;
         }
      }
      /**
       * <code>repeated string ext = 22;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public java.util.List<java.lang.String>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated string ext = 22;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated string ext = 22;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public java.lang.String getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated string ext = 22;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtBytes(int index) {
        return ext_.getByteString(index);
      }
      /**
       * <code>repeated string ext = 22;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public Builder setExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 22;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public Builder addExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 22;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 22;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public Builder clearExt() {
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00200000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 22;</code>
       *
       * <pre>
       *拓展字段
       * </pre>
       */
      public Builder addExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }

      // repeated int32 dahuCounts = 23;
      private java.util.List<java.lang.Integer> dahuCounts_ = java.util.Collections.emptyList();
      private void ensureDahuCountsIsMutable() {
        if (!((bitField0_ & 0x00400000) == 0x00400000)) {
          dahuCounts_ = new java.util.ArrayList<java.lang.Integer>(dahuCounts_);
          bitField0_ |= 0x00400000;
         }
      }
      /**
       * <code>repeated int32 dahuCounts = 23;</code>
       *
       * <pre>
       *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDahuCountsList() {
        return java.util.Collections.unmodifiableList(dahuCounts_);
      }
      /**
       * <code>repeated int32 dahuCounts = 23;</code>
       *
       * <pre>
       *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public int getDahuCountsCount() {
        return dahuCounts_.size();
      }
      /**
       * <code>repeated int32 dahuCounts = 23;</code>
       *
       * <pre>
       *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public int getDahuCounts(int index) {
        return dahuCounts_.get(index);
      }
      /**
       * <code>repeated int32 dahuCounts = 23;</code>
       *
       * <pre>
       *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public Builder setDahuCounts(
          int index, int value) {
        ensureDahuCountsIsMutable();
        dahuCounts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahuCounts = 23;</code>
       *
       * <pre>
       *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public Builder addDahuCounts(int value) {
        ensureDahuCountsIsMutable();
        dahuCounts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahuCounts = 23;</code>
       *
       * <pre>
       *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public Builder addAllDahuCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDahuCountsIsMutable();
        super.addAll(values, dahuCounts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahuCounts = 23;</code>
       *
       * <pre>
       *大胡次数  0碰碰胡  1将将胡 2清一色 3七小队 4豪华七小队 5双豪华七小队 6三豪华七小队 7杠爆 8抢杠胡 9海底捞 10一条龙 11门清 12天胡 13一字翘
       * </pre>
       */
      public Builder clearDahuCounts() {
        dahuCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00400000);
        onChanged();
        return this;
      }

      // optional int32 credit = 24;
      private int credit_ ;
      /**
       * <code>optional int32 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public boolean hasCredit() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public int getCredit() {
        return credit_;
      }
      /**
       * <code>optional int32 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public Builder setCredit(int value) {
        bitField0_ |= 0x00800000;
        credit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public Builder clearCredit() {
        bitField0_ = (bitField0_ & ~0x00800000);
        credit_ = 0;
        onChanged();
        return this;
      }

      // optional int64 winLoseCredit = 25;
      private long winLoseCredit_ ;
      /**
       * <code>optional int64 winLoseCredit = 25;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public boolean hasWinLoseCredit() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 winLoseCredit = 25;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public long getWinLoseCredit() {
        return winLoseCredit_;
      }
      /**
       * <code>optional int64 winLoseCredit = 25;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public Builder setWinLoseCredit(long value) {
        bitField0_ |= 0x01000000;
        winLoseCredit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 winLoseCredit = 25;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public Builder clearWinLoseCredit() {
        bitField0_ = (bitField0_ & ~0x01000000);
        winLoseCredit_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 commissionCredit = 26;
      private long commissionCredit_ ;
      /**
       * <code>optional int64 commissionCredit = 26;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public boolean hasCommissionCredit() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 commissionCredit = 26;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public long getCommissionCredit() {
        return commissionCredit_;
      }
      /**
       * <code>optional int64 commissionCredit = 26;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public Builder setCommissionCredit(long value) {
        bitField0_ |= 0x02000000;
        commissionCredit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 commissionCredit = 26;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public Builder clearCommissionCredit() {
        bitField0_ = (bitField0_ & ~0x02000000);
        commissionCredit_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes)
    }

    static {
      defaultInstance = new YjClosingPlayerInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes)
  }

  public interface YjClosingInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes> 
        getClosingPlayersList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes getClosingPlayers(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    int getClosingPlayersCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index);

    // repeated int32 bird = 2;
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    java.util.List<java.lang.Integer> getBirdList();
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    int getBirdCount();
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    int getBird(int index);

    // repeated int32 birdSeat = 3;
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    java.util.List<java.lang.Integer> getBirdSeatList();
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    int getBirdSeatCount();
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    int getBirdSeat(int index);

    // optional int32 isBreak = 4;
    /**
     * <code>optional int32 isBreak = 4;</code>
     */
    boolean hasIsBreak();
    /**
     * <code>optional int32 isBreak = 4;</code>
     */
    int getIsBreak();

    // optional int32 wanfa = 5;
    /**
     * <code>optional int32 wanfa = 5;</code>
     */
    boolean hasWanfa();
    /**
     * <code>optional int32 wanfa = 5;</code>
     */
    int getWanfa();

    // repeated string ext = 6;
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.String>
    getExtList();
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    java.lang.String getExt(int index);
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtBytes(int index);

    // repeated string matchExt = 7;
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    java.util.List<java.lang.String>
    getMatchExtList();
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    int getMatchExtCount();
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    java.lang.String getMatchExt(int index);
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    com.google.protobuf.ByteString
        getMatchExtBytes(int index);

    // repeated int32 cutCard = 8;
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCutCardList();
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    int getCutCardCount();
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    int getCutCard(int index);

    // repeated int32 cutDtzCard = 9;
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCutDtzCardList();
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    int getCutDtzCardCount();
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    int getCutDtzCard(int index);

    // repeated int32 leftCards = 10;
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *牌桌上剩下的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getLeftCardsList();
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *牌桌上剩下的牌
     * </pre>
     */
    int getLeftCardsCount();
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *牌桌上剩下的牌
     * </pre>
     */
    int getLeftCards(int index);

    // optional int32 fangPaoSeat = 11;
    /**
     * <code>optional int32 fangPaoSeat = 11;</code>
     *
     * <pre>
     *放炮玩家的座位号
     * </pre>
     */
    boolean hasFangPaoSeat();
    /**
     * <code>optional int32 fangPaoSeat = 11;</code>
     *
     * <pre>
     *放炮玩家的座位号
     * </pre>
     */
    int getFangPaoSeat();

    // repeated int32 jiePaoSeat = 12;
    /**
     * <code>repeated int32 jiePaoSeat = 12;</code>
     *
     * <pre>
     *接炮玩家的座位号
     * </pre>
     */
    java.util.List<java.lang.Integer> getJiePaoSeatList();
    /**
     * <code>repeated int32 jiePaoSeat = 12;</code>
     *
     * <pre>
     *接炮玩家的座位号
     * </pre>
     */
    int getJiePaoSeatCount();
    /**
     * <code>repeated int32 jiePaoSeat = 12;</code>
     *
     * <pre>
     *接炮玩家的座位号
     * </pre>
     */
    int getJiePaoSeat(int index);

    // optional int32 groupLogId = 13;
    /**
     * <code>optional int32 groupLogId = 13;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    boolean hasGroupLogId();
    /**
     * <code>optional int32 groupLogId = 13;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    int getGroupLogId();

    // repeated int32 intParams = 14;
    /**
     * <code>repeated int32 intParams = 14;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    java.util.List<java.lang.Integer> getIntParamsList();
    /**
     * <code>repeated int32 intParams = 14;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    int getIntParamsCount();
    /**
     * <code>repeated int32 intParams = 14;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    int getIntParams(int index);

    // repeated int64 creditConfig = 15;
    /**
     * <code>repeated int64 creditConfig = 15;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    java.util.List<java.lang.Long> getCreditConfigList();
    /**
     * <code>repeated int64 creditConfig = 15;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    int getCreditConfigCount();
    /**
     * <code>repeated int64 creditConfig = 15;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    long getCreditConfig(int index);

    // repeated int32 chouCards = 16;
    /**
     * <code>repeated int32 chouCards = 16;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getChouCardsList();
    /**
     * <code>repeated int32 chouCards = 16;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    int getChouCardsCount();
    /**
     * <code>repeated int32 chouCards = 16;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    int getChouCards(int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.YjClosingInfoRes}
   *
   * <pre>
   *沅江麻将结算
   * </pre>
   */
  public static final class YjClosingInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements YjClosingInfoResOrBuilder {
    // Use YjClosingInfoRes.newBuilder() to construct.
    private YjClosingInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private YjClosingInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final YjClosingInfoRes defaultInstance;
    public static YjClosingInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public YjClosingInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private YjClosingInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes>();
                mutable_bitField0_ |= 0x00000001;
              }
              closingPlayers_.add(input.readMessage(com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                bird_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              bird_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                bird_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                bird_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                birdSeat_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              birdSeat_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                birdSeat_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                birdSeat_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 32: {
              bitField0_ |= 0x00000001;
              isBreak_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000002;
              wanfa_ = input.readInt32();
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                ext_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000020;
              }
              ext_.add(input.readBytes());
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                matchExt_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000040;
              }
              matchExt_.add(input.readBytes());
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
                cutCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              cutCard_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                cutCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                cutCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                cutDtzCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              cutDtzCard_.add(input.readInt32());
              break;
            }
            case 74: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                cutDtzCard_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                cutDtzCard_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
                leftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              leftCards_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000200) == 0x00000200) && input.getBytesUntilLimit() > 0) {
                leftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000200;
              }
              while (input.getBytesUntilLimit() > 0) {
                leftCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              bitField0_ |= 0x00000004;
              fangPaoSeat_ = input.readInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                jiePaoSeat_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              jiePaoSeat_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                jiePaoSeat_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                jiePaoSeat_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              bitField0_ |= 0x00000008;
              groupLogId_ = input.readInt32();
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                intParams_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              intParams_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                intParams_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                intParams_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                creditConfig_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00004000;
              }
              creditConfig_.add(input.readInt64());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                creditConfig_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                creditConfig_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                chouCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              chouCards_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                chouCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                chouCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          bird_ = java.util.Collections.unmodifiableList(bird_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          birdSeat_ = java.util.Collections.unmodifiableList(birdSeat_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(ext_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          matchExt_ = new com.google.protobuf.UnmodifiableLazyStringList(matchExt_);
        }
        if (((mutable_bitField0_ & 0x00000080) == 0x00000080)) {
          cutCard_ = java.util.Collections.unmodifiableList(cutCard_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          cutDtzCard_ = java.util.Collections.unmodifiableList(cutDtzCard_);
        }
        if (((mutable_bitField0_ & 0x00000200) == 0x00000200)) {
          leftCards_ = java.util.Collections.unmodifiableList(leftCards_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          jiePaoSeat_ = java.util.Collections.unmodifiableList(jiePaoSeat_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          intParams_ = java.util.Collections.unmodifiableList(intParams_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          creditConfig_ = java.util.Collections.unmodifiableList(creditConfig_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          chouCards_ = java.util.Collections.unmodifiableList(chouCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjClosingInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjClosingInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<YjClosingInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<YjClosingInfoRes>() {
      public YjClosingInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new YjClosingInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<YjClosingInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;
    public static final int CLOSINGPLAYERS_FIELD_NUMBER = 1;
    private java.util.List<com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes> closingPlayers_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes> getClosingPlayersList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    public int getClosingPlayersCount() {
      return closingPlayers_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    public com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes getClosingPlayers(int index) {
      return closingPlayers_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
     */
    public com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index) {
      return closingPlayers_.get(index);
    }

    // repeated int32 bird = 2;
    public static final int BIRD_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> bird_;
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getBirdList() {
      return bird_;
    }
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    public int getBirdCount() {
      return bird_.size();
    }
    /**
     * <code>repeated int32 bird = 2;</code>
     */
    public int getBird(int index) {
      return bird_.get(index);
    }

    // repeated int32 birdSeat = 3;
    public static final int BIRDSEAT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> birdSeat_;
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    public java.util.List<java.lang.Integer>
        getBirdSeatList() {
      return birdSeat_;
    }
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    public int getBirdSeatCount() {
      return birdSeat_.size();
    }
    /**
     * <code>repeated int32 birdSeat = 3;</code>
     */
    public int getBirdSeat(int index) {
      return birdSeat_.get(index);
    }

    // optional int32 isBreak = 4;
    public static final int ISBREAK_FIELD_NUMBER = 4;
    private int isBreak_;
    /**
     * <code>optional int32 isBreak = 4;</code>
     */
    public boolean hasIsBreak() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 isBreak = 4;</code>
     */
    public int getIsBreak() {
      return isBreak_;
    }

    // optional int32 wanfa = 5;
    public static final int WANFA_FIELD_NUMBER = 5;
    private int wanfa_;
    /**
     * <code>optional int32 wanfa = 5;</code>
     */
    public boolean hasWanfa() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 wanfa = 5;</code>
     */
    public int getWanfa() {
      return wanfa_;
    }

    // repeated string ext = 6;
    public static final int EXT_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList ext_;
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.String>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    public java.lang.String getExt(int index) {
      return ext_.get(index);
    }
    /**
     * <code>repeated string ext = 6;</code>
     *
     * <pre>
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtBytes(int index) {
      return ext_.getByteString(index);
    }

    // repeated string matchExt = 7;
    public static final int MATCHEXT_FIELD_NUMBER = 7;
    private com.google.protobuf.LazyStringList matchExt_;
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public java.util.List<java.lang.String>
        getMatchExtList() {
      return matchExt_;
    }
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public int getMatchExtCount() {
      return matchExt_.size();
    }
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public java.lang.String getMatchExt(int index) {
      return matchExt_.get(index);
    }
    /**
     * <code>repeated string matchExt = 7;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMatchExtBytes(int index) {
      return matchExt_.getByteString(index);
    }

    // repeated int32 cutCard = 8;
    public static final int CUTCARD_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> cutCard_;
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCutCardList() {
      return cutCard_;
    }
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    public int getCutCardCount() {
      return cutCard_.size();
    }
    /**
     * <code>repeated int32 cutCard = 8;</code>
     *
     * <pre>
     *切掉的牌
     * </pre>
     */
    public int getCutCard(int index) {
      return cutCard_.get(index);
    }

    // repeated int32 cutDtzCard = 9;
    public static final int CUTDTZCARD_FIELD_NUMBER = 9;
    private java.util.List<java.lang.Integer> cutDtzCard_;
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCutDtzCardList() {
      return cutDtzCard_;
    }
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    public int getCutDtzCardCount() {
      return cutDtzCard_.size();
    }
    /**
     * <code>repeated int32 cutDtzCard = 9;</code>
     *
     * <pre>
     *打筒子切掉的牌
     * </pre>
     */
    public int getCutDtzCard(int index) {
      return cutDtzCard_.get(index);
    }

    // repeated int32 leftCards = 10;
    public static final int LEFTCARDS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> leftCards_;
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *牌桌上剩下的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLeftCardsList() {
      return leftCards_;
    }
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *牌桌上剩下的牌
     * </pre>
     */
    public int getLeftCardsCount() {
      return leftCards_.size();
    }
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *牌桌上剩下的牌
     * </pre>
     */
    public int getLeftCards(int index) {
      return leftCards_.get(index);
    }

    // optional int32 fangPaoSeat = 11;
    public static final int FANGPAOSEAT_FIELD_NUMBER = 11;
    private int fangPaoSeat_;
    /**
     * <code>optional int32 fangPaoSeat = 11;</code>
     *
     * <pre>
     *放炮玩家的座位号
     * </pre>
     */
    public boolean hasFangPaoSeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 fangPaoSeat = 11;</code>
     *
     * <pre>
     *放炮玩家的座位号
     * </pre>
     */
    public int getFangPaoSeat() {
      return fangPaoSeat_;
    }

    // repeated int32 jiePaoSeat = 12;
    public static final int JIEPAOSEAT_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> jiePaoSeat_;
    /**
     * <code>repeated int32 jiePaoSeat = 12;</code>
     *
     * <pre>
     *接炮玩家的座位号
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getJiePaoSeatList() {
      return jiePaoSeat_;
    }
    /**
     * <code>repeated int32 jiePaoSeat = 12;</code>
     *
     * <pre>
     *接炮玩家的座位号
     * </pre>
     */
    public int getJiePaoSeatCount() {
      return jiePaoSeat_.size();
    }
    /**
     * <code>repeated int32 jiePaoSeat = 12;</code>
     *
     * <pre>
     *接炮玩家的座位号
     * </pre>
     */
    public int getJiePaoSeat(int index) {
      return jiePaoSeat_.get(index);
    }

    // optional int32 groupLogId = 13;
    public static final int GROUPLOGID_FIELD_NUMBER = 13;
    private int groupLogId_;
    /**
     * <code>optional int32 groupLogId = 13;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    public boolean hasGroupLogId() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 groupLogId = 13;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    public int getGroupLogId() {
      return groupLogId_;
    }

    // repeated int32 intParams = 14;
    public static final int INTPARAMS_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> intParams_;
    /**
     * <code>repeated int32 intParams = 14;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIntParamsList() {
      return intParams_;
    }
    /**
     * <code>repeated int32 intParams = 14;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public int getIntParamsCount() {
      return intParams_.size();
    }
    /**
     * <code>repeated int32 intParams = 14;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public int getIntParams(int index) {
      return intParams_.get(index);
    }

    // repeated int64 creditConfig = 15;
    public static final int CREDITCONFIG_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Long> creditConfig_;
    /**
     * <code>repeated int64 creditConfig = 15;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getCreditConfigList() {
      return creditConfig_;
    }
    /**
     * <code>repeated int64 creditConfig = 15;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    public int getCreditConfigCount() {
      return creditConfig_.size();
    }
    /**
     * <code>repeated int64 creditConfig = 15;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    public long getCreditConfig(int index) {
      return creditConfig_.get(index);
    }

    // repeated int32 chouCards = 16;
    public static final int CHOUCARDS_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> chouCards_;
    /**
     * <code>repeated int32 chouCards = 16;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getChouCardsList() {
      return chouCards_;
    }
    /**
     * <code>repeated int32 chouCards = 16;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    public int getChouCardsCount() {
      return chouCards_.size();
    }
    /**
     * <code>repeated int32 chouCards = 16;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    public int getChouCards(int index) {
      return chouCards_.get(index);
    }

    private void initFields() {
      closingPlayers_ = java.util.Collections.emptyList();
      bird_ = java.util.Collections.emptyList();
      birdSeat_ = java.util.Collections.emptyList();
      isBreak_ = 0;
      wanfa_ = 0;
      ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      cutCard_ = java.util.Collections.emptyList();
      cutDtzCard_ = java.util.Collections.emptyList();
      leftCards_ = java.util.Collections.emptyList();
      fangPaoSeat_ = 0;
      jiePaoSeat_ = java.util.Collections.emptyList();
      groupLogId_ = 0;
      intParams_ = java.util.Collections.emptyList();
      creditConfig_ = java.util.Collections.emptyList();
      chouCards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getClosingPlayersCount(); i++) {
        if (!getClosingPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < closingPlayers_.size(); i++) {
        output.writeMessage(1, closingPlayers_.get(i));
      }
      for (int i = 0; i < bird_.size(); i++) {
        output.writeInt32(2, bird_.get(i));
      }
      for (int i = 0; i < birdSeat_.size(); i++) {
        output.writeInt32(3, birdSeat_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(4, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(5, wanfa_);
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeBytes(6, ext_.getByteString(i));
      }
      for (int i = 0; i < matchExt_.size(); i++) {
        output.writeBytes(7, matchExt_.getByteString(i));
      }
      for (int i = 0; i < cutCard_.size(); i++) {
        output.writeInt32(8, cutCard_.get(i));
      }
      for (int i = 0; i < cutDtzCard_.size(); i++) {
        output.writeInt32(9, cutDtzCard_.get(i));
      }
      for (int i = 0; i < leftCards_.size(); i++) {
        output.writeInt32(10, leftCards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(11, fangPaoSeat_);
      }
      for (int i = 0; i < jiePaoSeat_.size(); i++) {
        output.writeInt32(12, jiePaoSeat_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(13, groupLogId_);
      }
      for (int i = 0; i < intParams_.size(); i++) {
        output.writeInt32(14, intParams_.get(i));
      }
      for (int i = 0; i < creditConfig_.size(); i++) {
        output.writeInt64(15, creditConfig_.get(i));
      }
      for (int i = 0; i < chouCards_.size(); i++) {
        output.writeInt32(16, chouCards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < closingPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, closingPlayers_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bird_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bird_.get(i));
        }
        size += dataSize;
        size += 1 * getBirdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < birdSeat_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(birdSeat_.get(i));
        }
        size += dataSize;
        size += 1 * getBirdSeatList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, wanfa_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ext_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getExtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < matchExt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(matchExt_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getMatchExtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cutCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cutCard_.get(i));
        }
        size += dataSize;
        size += 1 * getCutCardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cutDtzCard_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cutDtzCard_.get(i));
        }
        size += dataSize;
        size += 1 * getCutDtzCardList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < leftCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(leftCards_.get(i));
        }
        size += dataSize;
        size += 1 * getLeftCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, fangPaoSeat_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < jiePaoSeat_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(jiePaoSeat_.get(i));
        }
        size += dataSize;
        size += 1 * getJiePaoSeatList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, groupLogId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intParams_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(intParams_.get(i));
        }
        size += dataSize;
        size += 1 * getIntParamsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < creditConfig_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(creditConfig_.get(i));
        }
        size += dataSize;
        size += 1 * getCreditConfigList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < chouCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(chouCards_.get(i));
        }
        size += dataSize;
        size += 2 * getChouCardsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.YjClosingInfoRes}
     *
     * <pre>
     *沅江麻将结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjClosingInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjClosingInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClosingPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          closingPlayersBuilder_.clear();
        }
        bird_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        birdSeat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        isBreak_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        wanfa_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        cutCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        cutDtzCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        leftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        fangPaoSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        jiePaoSeat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        groupLogId_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        intParams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        creditConfig_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        chouCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjClosingInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes build() {
        com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes result = new com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (closingPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.closingPlayers_ = closingPlayers_;
        } else {
          result.closingPlayers_ = closingPlayersBuilder_.build();
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          bird_ = java.util.Collections.unmodifiableList(bird_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.bird_ = bird_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          birdSeat_ = java.util.Collections.unmodifiableList(birdSeat_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.birdSeat_ = birdSeat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isBreak_ = isBreak_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000002;
        }
        result.wanfa_ = wanfa_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(
              ext_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.ext_ = ext_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          matchExt_ = new com.google.protobuf.UnmodifiableLazyStringList(
              matchExt_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.matchExt_ = matchExt_;
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          cutCard_ = java.util.Collections.unmodifiableList(cutCard_);
          bitField0_ = (bitField0_ & ~0x00000080);
        }
        result.cutCard_ = cutCard_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          cutDtzCard_ = java.util.Collections.unmodifiableList(cutDtzCard_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.cutDtzCard_ = cutDtzCard_;
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          leftCards_ = java.util.Collections.unmodifiableList(leftCards_);
          bitField0_ = (bitField0_ & ~0x00000200);
        }
        result.leftCards_ = leftCards_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000004;
        }
        result.fangPaoSeat_ = fangPaoSeat_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          jiePaoSeat_ = java.util.Collections.unmodifiableList(jiePaoSeat_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.jiePaoSeat_ = jiePaoSeat_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000008;
        }
        result.groupLogId_ = groupLogId_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          intParams_ = java.util.Collections.unmodifiableList(intParams_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.intParams_ = intParams_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          creditConfig_ = java.util.Collections.unmodifiableList(creditConfig_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.creditConfig_ = creditConfig_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          chouCards_ = java.util.Collections.unmodifiableList(chouCards_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.chouCards_ = chouCards_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes.getDefaultInstance()) return this;
        if (closingPlayersBuilder_ == null) {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayers_.isEmpty()) {
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureClosingPlayersIsMutable();
              closingPlayers_.addAll(other.closingPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayersBuilder_.isEmpty()) {
              closingPlayersBuilder_.dispose();
              closingPlayersBuilder_ = null;
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              closingPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getClosingPlayersFieldBuilder() : null;
            } else {
              closingPlayersBuilder_.addAllMessages(other.closingPlayers_);
            }
          }
        }
        if (!other.bird_.isEmpty()) {
          if (bird_.isEmpty()) {
            bird_ = other.bird_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureBirdIsMutable();
            bird_.addAll(other.bird_);
          }
          onChanged();
        }
        if (!other.birdSeat_.isEmpty()) {
          if (birdSeat_.isEmpty()) {
            birdSeat_ = other.birdSeat_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureBirdSeatIsMutable();
            birdSeat_.addAll(other.birdSeat_);
          }
          onChanged();
        }
        if (other.hasIsBreak()) {
          setIsBreak(other.getIsBreak());
        }
        if (other.hasWanfa()) {
          setWanfa(other.getWanfa());
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        if (!other.matchExt_.isEmpty()) {
          if (matchExt_.isEmpty()) {
            matchExt_ = other.matchExt_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureMatchExtIsMutable();
            matchExt_.addAll(other.matchExt_);
          }
          onChanged();
        }
        if (!other.cutCard_.isEmpty()) {
          if (cutCard_.isEmpty()) {
            cutCard_ = other.cutCard_;
            bitField0_ = (bitField0_ & ~0x00000080);
          } else {
            ensureCutCardIsMutable();
            cutCard_.addAll(other.cutCard_);
          }
          onChanged();
        }
        if (!other.cutDtzCard_.isEmpty()) {
          if (cutDtzCard_.isEmpty()) {
            cutDtzCard_ = other.cutDtzCard_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureCutDtzCardIsMutable();
            cutDtzCard_.addAll(other.cutDtzCard_);
          }
          onChanged();
        }
        if (!other.leftCards_.isEmpty()) {
          if (leftCards_.isEmpty()) {
            leftCards_ = other.leftCards_;
            bitField0_ = (bitField0_ & ~0x00000200);
          } else {
            ensureLeftCardsIsMutable();
            leftCards_.addAll(other.leftCards_);
          }
          onChanged();
        }
        if (other.hasFangPaoSeat()) {
          setFangPaoSeat(other.getFangPaoSeat());
        }
        if (!other.jiePaoSeat_.isEmpty()) {
          if (jiePaoSeat_.isEmpty()) {
            jiePaoSeat_ = other.jiePaoSeat_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureJiePaoSeatIsMutable();
            jiePaoSeat_.addAll(other.jiePaoSeat_);
          }
          onChanged();
        }
        if (other.hasGroupLogId()) {
          setGroupLogId(other.getGroupLogId());
        }
        if (!other.intParams_.isEmpty()) {
          if (intParams_.isEmpty()) {
            intParams_ = other.intParams_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureIntParamsIsMutable();
            intParams_.addAll(other.intParams_);
          }
          onChanged();
        }
        if (!other.creditConfig_.isEmpty()) {
          if (creditConfig_.isEmpty()) {
            creditConfig_ = other.creditConfig_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureCreditConfigIsMutable();
            creditConfig_.addAll(other.creditConfig_);
          }
          onChanged();
        }
        if (!other.chouCards_.isEmpty()) {
          if (chouCards_.isEmpty()) {
            chouCards_ = other.chouCards_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureChouCardsIsMutable();
            chouCards_.addAll(other.chouCards_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getClosingPlayersCount(); i++) {
          if (!getClosingPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.YjClosingInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;
      private java.util.List<com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes> closingPlayers_ =
        java.util.Collections.emptyList();
      private void ensureClosingPlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes>(closingPlayers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoResOrBuilder> closingPlayersBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes> getClosingPlayersList() {
        if (closingPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        } else {
          return closingPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public int getClosingPlayersCount() {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.size();
        } else {
          return closingPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes getClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);
        } else {
          return closingPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addAllClosingPlayers(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes> values) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          super.addAll(values, closingPlayers_);
          onChanged();
        } else {
          closingPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder clearClosingPlayers() {
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          closingPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder removeClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.remove(index);
          onChanged();
        } else {
          closingPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder getClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
          int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);  } else {
          return closingPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoResOrBuilder> 
           getClosingPlayersOrBuilderList() {
        if (closingPlayersBuilder_ != null) {
          return closingPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder addClosingPlayersBuilder() {
        return getClosingPlayersFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder addClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.YjClosingPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder> 
           getClosingPlayersBuilderList() {
        return getClosingPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoResOrBuilder> 
          getClosingPlayersFieldBuilder() {
        if (closingPlayersBuilder_ == null) {
          closingPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableRes.YjClosingPlayerInfoResOrBuilder>(
                  closingPlayers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          closingPlayers_ = null;
        }
        return closingPlayersBuilder_;
      }

      // repeated int32 bird = 2;
      private java.util.List<java.lang.Integer> bird_ = java.util.Collections.emptyList();
      private void ensureBirdIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          bird_ = new java.util.ArrayList<java.lang.Integer>(bird_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getBirdList() {
        return java.util.Collections.unmodifiableList(bird_);
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public int getBirdCount() {
        return bird_.size();
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public int getBird(int index) {
        return bird_.get(index);
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public Builder setBird(
          int index, int value) {
        ensureBirdIsMutable();
        bird_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public Builder addBird(int value) {
        ensureBirdIsMutable();
        bird_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public Builder addAllBird(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBirdIsMutable();
        super.addAll(values, bird_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird = 2;</code>
       */
      public Builder clearBird() {
        bird_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 birdSeat = 3;
      private java.util.List<java.lang.Integer> birdSeat_ = java.util.Collections.emptyList();
      private void ensureBirdSeatIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          birdSeat_ = new java.util.ArrayList<java.lang.Integer>(birdSeat_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public java.util.List<java.lang.Integer>
          getBirdSeatList() {
        return java.util.Collections.unmodifiableList(birdSeat_);
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public int getBirdSeatCount() {
        return birdSeat_.size();
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public int getBirdSeat(int index) {
        return birdSeat_.get(index);
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public Builder setBirdSeat(
          int index, int value) {
        ensureBirdSeatIsMutable();
        birdSeat_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public Builder addBirdSeat(int value) {
        ensureBirdSeatIsMutable();
        birdSeat_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public Builder addAllBirdSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBirdSeatIsMutable();
        super.addAll(values, birdSeat_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 birdSeat = 3;</code>
       */
      public Builder clearBirdSeat() {
        birdSeat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // optional int32 isBreak = 4;
      private int isBreak_ ;
      /**
       * <code>optional int32 isBreak = 4;</code>
       */
      public boolean hasIsBreak() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 isBreak = 4;</code>
       */
      public int getIsBreak() {
        return isBreak_;
      }
      /**
       * <code>optional int32 isBreak = 4;</code>
       */
      public Builder setIsBreak(int value) {
        bitField0_ |= 0x00000008;
        isBreak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isBreak = 4;</code>
       */
      public Builder clearIsBreak() {
        bitField0_ = (bitField0_ & ~0x00000008);
        isBreak_ = 0;
        onChanged();
        return this;
      }

      // optional int32 wanfa = 5;
      private int wanfa_ ;
      /**
       * <code>optional int32 wanfa = 5;</code>
       */
      public boolean hasWanfa() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 wanfa = 5;</code>
       */
      public int getWanfa() {
        return wanfa_;
      }
      /**
       * <code>optional int32 wanfa = 5;</code>
       */
      public Builder setWanfa(int value) {
        bitField0_ |= 0x00000010;
        wanfa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wanfa = 5;</code>
       */
      public Builder clearWanfa() {
        bitField0_ = (bitField0_ & ~0x00000010);
        wanfa_ = 0;
        onChanged();
        return this;
      }

      // repeated string ext = 6;
      private com.google.protobuf.LazyStringList ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          ext_ = new com.google.protobuf.LazyStringArrayList(ext_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.String>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public java.lang.String getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtBytes(int index) {
        return ext_.getByteString(index);
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearExt() {
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 6;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }

      // repeated string matchExt = 7;
      private com.google.protobuf.LazyStringList matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMatchExtIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          matchExt_ = new com.google.protobuf.LazyStringArrayList(matchExt_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public java.util.List<java.lang.String>
          getMatchExtList() {
        return java.util.Collections.unmodifiableList(matchExt_);
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public int getMatchExtCount() {
        return matchExt_.size();
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public java.lang.String getMatchExt(int index) {
        return matchExt_.get(index);
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMatchExtBytes(int index) {
        return matchExt_.getByteString(index);
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder setMatchExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addMatchExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addAllMatchExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureMatchExtIsMutable();
        super.addAll(values, matchExt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder clearMatchExt() {
        matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 7;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addMatchExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }

      // repeated int32 cutCard = 8;
      private java.util.List<java.lang.Integer> cutCard_ = java.util.Collections.emptyList();
      private void ensureCutCardIsMutable() {
        if (!((bitField0_ & 0x00000080) == 0x00000080)) {
          cutCard_ = new java.util.ArrayList<java.lang.Integer>(cutCard_);
          bitField0_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCutCardList() {
        return java.util.Collections.unmodifiableList(cutCard_);
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public int getCutCardCount() {
        return cutCard_.size();
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public int getCutCard(int index) {
        return cutCard_.get(index);
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public Builder setCutCard(
          int index, int value) {
        ensureCutCardIsMutable();
        cutCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public Builder addCutCard(int value) {
        ensureCutCardIsMutable();
        cutCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public Builder addAllCutCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCutCardIsMutable();
        super.addAll(values, cutCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutCard = 8;</code>
       *
       * <pre>
       *切掉的牌
       * </pre>
       */
      public Builder clearCutCard() {
        cutCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000080);
        onChanged();
        return this;
      }

      // repeated int32 cutDtzCard = 9;
      private java.util.List<java.lang.Integer> cutDtzCard_ = java.util.Collections.emptyList();
      private void ensureCutDtzCardIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          cutDtzCard_ = new java.util.ArrayList<java.lang.Integer>(cutDtzCard_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCutDtzCardList() {
        return java.util.Collections.unmodifiableList(cutDtzCard_);
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public int getCutDtzCardCount() {
        return cutDtzCard_.size();
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public int getCutDtzCard(int index) {
        return cutDtzCard_.get(index);
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public Builder setCutDtzCard(
          int index, int value) {
        ensureCutDtzCardIsMutable();
        cutDtzCard_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public Builder addCutDtzCard(int value) {
        ensureCutDtzCardIsMutable();
        cutDtzCard_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public Builder addAllCutDtzCard(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCutDtzCardIsMutable();
        super.addAll(values, cutDtzCard_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cutDtzCard = 9;</code>
       *
       * <pre>
       *打筒子切掉的牌
       * </pre>
       */
      public Builder clearCutDtzCard() {
        cutDtzCard_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // repeated int32 leftCards = 10;
      private java.util.List<java.lang.Integer> leftCards_ = java.util.Collections.emptyList();
      private void ensureLeftCardsIsMutable() {
        if (!((bitField0_ & 0x00000200) == 0x00000200)) {
          leftCards_ = new java.util.ArrayList<java.lang.Integer>(leftCards_);
          bitField0_ |= 0x00000200;
         }
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *牌桌上剩下的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLeftCardsList() {
        return java.util.Collections.unmodifiableList(leftCards_);
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *牌桌上剩下的牌
       * </pre>
       */
      public int getLeftCardsCount() {
        return leftCards_.size();
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *牌桌上剩下的牌
       * </pre>
       */
      public int getLeftCards(int index) {
        return leftCards_.get(index);
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *牌桌上剩下的牌
       * </pre>
       */
      public Builder setLeftCards(
          int index, int value) {
        ensureLeftCardsIsMutable();
        leftCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *牌桌上剩下的牌
       * </pre>
       */
      public Builder addLeftCards(int value) {
        ensureLeftCardsIsMutable();
        leftCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *牌桌上剩下的牌
       * </pre>
       */
      public Builder addAllLeftCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLeftCardsIsMutable();
        super.addAll(values, leftCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *牌桌上剩下的牌
       * </pre>
       */
      public Builder clearLeftCards() {
        leftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000200);
        onChanged();
        return this;
      }

      // optional int32 fangPaoSeat = 11;
      private int fangPaoSeat_ ;
      /**
       * <code>optional int32 fangPaoSeat = 11;</code>
       *
       * <pre>
       *放炮玩家的座位号
       * </pre>
       */
      public boolean hasFangPaoSeat() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 fangPaoSeat = 11;</code>
       *
       * <pre>
       *放炮玩家的座位号
       * </pre>
       */
      public int getFangPaoSeat() {
        return fangPaoSeat_;
      }
      /**
       * <code>optional int32 fangPaoSeat = 11;</code>
       *
       * <pre>
       *放炮玩家的座位号
       * </pre>
       */
      public Builder setFangPaoSeat(int value) {
        bitField0_ |= 0x00000400;
        fangPaoSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fangPaoSeat = 11;</code>
       *
       * <pre>
       *放炮玩家的座位号
       * </pre>
       */
      public Builder clearFangPaoSeat() {
        bitField0_ = (bitField0_ & ~0x00000400);
        fangPaoSeat_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 jiePaoSeat = 12;
      private java.util.List<java.lang.Integer> jiePaoSeat_ = java.util.Collections.emptyList();
      private void ensureJiePaoSeatIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          jiePaoSeat_ = new java.util.ArrayList<java.lang.Integer>(jiePaoSeat_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 jiePaoSeat = 12;</code>
       *
       * <pre>
       *接炮玩家的座位号
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getJiePaoSeatList() {
        return java.util.Collections.unmodifiableList(jiePaoSeat_);
      }
      /**
       * <code>repeated int32 jiePaoSeat = 12;</code>
       *
       * <pre>
       *接炮玩家的座位号
       * </pre>
       */
      public int getJiePaoSeatCount() {
        return jiePaoSeat_.size();
      }
      /**
       * <code>repeated int32 jiePaoSeat = 12;</code>
       *
       * <pre>
       *接炮玩家的座位号
       * </pre>
       */
      public int getJiePaoSeat(int index) {
        return jiePaoSeat_.get(index);
      }
      /**
       * <code>repeated int32 jiePaoSeat = 12;</code>
       *
       * <pre>
       *接炮玩家的座位号
       * </pre>
       */
      public Builder setJiePaoSeat(
          int index, int value) {
        ensureJiePaoSeatIsMutable();
        jiePaoSeat_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jiePaoSeat = 12;</code>
       *
       * <pre>
       *接炮玩家的座位号
       * </pre>
       */
      public Builder addJiePaoSeat(int value) {
        ensureJiePaoSeatIsMutable();
        jiePaoSeat_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jiePaoSeat = 12;</code>
       *
       * <pre>
       *接炮玩家的座位号
       * </pre>
       */
      public Builder addAllJiePaoSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureJiePaoSeatIsMutable();
        super.addAll(values, jiePaoSeat_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 jiePaoSeat = 12;</code>
       *
       * <pre>
       *接炮玩家的座位号
       * </pre>
       */
      public Builder clearJiePaoSeat() {
        jiePaoSeat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // optional int32 groupLogId = 13;
      private int groupLogId_ ;
      /**
       * <code>optional int32 groupLogId = 13;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public boolean hasGroupLogId() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 groupLogId = 13;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public int getGroupLogId() {
        return groupLogId_;
      }
      /**
       * <code>optional int32 groupLogId = 13;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public Builder setGroupLogId(int value) {
        bitField0_ |= 0x00001000;
        groupLogId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 groupLogId = 13;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public Builder clearGroupLogId() {
        bitField0_ = (bitField0_ & ~0x00001000);
        groupLogId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 intParams = 14;
      private java.util.List<java.lang.Integer> intParams_ = java.util.Collections.emptyList();
      private void ensureIntParamsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          intParams_ = new java.util.ArrayList<java.lang.Integer>(intParams_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 intParams = 14;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIntParamsList() {
        return java.util.Collections.unmodifiableList(intParams_);
      }
      /**
       * <code>repeated int32 intParams = 14;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public int getIntParamsCount() {
        return intParams_.size();
      }
      /**
       * <code>repeated int32 intParams = 14;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public int getIntParams(int index) {
        return intParams_.get(index);
      }
      /**
       * <code>repeated int32 intParams = 14;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder setIntParams(
          int index, int value) {
        ensureIntParamsIsMutable();
        intParams_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 14;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder addIntParams(int value) {
        ensureIntParamsIsMutable();
        intParams_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 14;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder addAllIntParams(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntParamsIsMutable();
        super.addAll(values, intParams_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 14;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder clearIntParams() {
        intParams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // repeated int64 creditConfig = 15;
      private java.util.List<java.lang.Long> creditConfig_ = java.util.Collections.emptyList();
      private void ensureCreditConfigIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          creditConfig_ = new java.util.ArrayList<java.lang.Long>(creditConfig_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int64 creditConfig = 15;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getCreditConfigList() {
        return java.util.Collections.unmodifiableList(creditConfig_);
      }
      /**
       * <code>repeated int64 creditConfig = 15;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public int getCreditConfigCount() {
        return creditConfig_.size();
      }
      /**
       * <code>repeated int64 creditConfig = 15;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public long getCreditConfig(int index) {
        return creditConfig_.get(index);
      }
      /**
       * <code>repeated int64 creditConfig = 15;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder setCreditConfig(
          int index, long value) {
        ensureCreditConfigIsMutable();
        creditConfig_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creditConfig = 15;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder addCreditConfig(long value) {
        ensureCreditConfigIsMutable();
        creditConfig_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creditConfig = 15;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder addAllCreditConfig(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCreditConfigIsMutable();
        super.addAll(values, creditConfig_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creditConfig = 15;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder clearCreditConfig() {
        creditConfig_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated int32 chouCards = 16;
      private java.util.List<java.lang.Integer> chouCards_ = java.util.Collections.emptyList();
      private void ensureChouCardsIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          chouCards_ = new java.util.ArrayList<java.lang.Integer>(chouCards_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 chouCards = 16;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getChouCardsList() {
        return java.util.Collections.unmodifiableList(chouCards_);
      }
      /**
       * <code>repeated int32 chouCards = 16;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public int getChouCardsCount() {
        return chouCards_.size();
      }
      /**
       * <code>repeated int32 chouCards = 16;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public int getChouCards(int index) {
        return chouCards_.get(index);
      }
      /**
       * <code>repeated int32 chouCards = 16;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder setChouCards(
          int index, int value) {
        ensureChouCardsIsMutable();
        chouCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chouCards = 16;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder addChouCards(int value) {
        ensureChouCardsIsMutable();
        chouCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chouCards = 16;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder addAllChouCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChouCardsIsMutable();
        super.addAll(values, chouCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chouCards = 16;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder clearChouCards() {
        chouCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.YjClosingInfoRes)
    }

    static {
      defaultInstance = new YjClosingInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.YjClosingInfoRes)
  }

  public interface YjDealInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated int32 handCardIds = 1;
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandCardIdsList();
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    int getHandCardIdsCount();
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    int getHandCardIds(int index);

    // required int32 nextSeat = 2;
    /**
     * <code>required int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    boolean hasNextSeat();
    /**
     * <code>required int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    int getNextSeat();

    // optional int32 gameType = 3;
    /**
     * <code>optional int32 gameType = 3;</code>
     *
     * <pre>
     *游戏类型
     * </pre>
     */
    boolean hasGameType();
    /**
     * <code>optional int32 gameType = 3;</code>
     *
     * <pre>
     *游戏类型
     * </pre>
     */
    int getGameType();

    // optional int32 remain = 4;
    /**
     * <code>optional int32 remain = 4;</code>
     */
    boolean hasRemain();
    /**
     * <code>optional int32 remain = 4;</code>
     */
    int getRemain();

    // repeated int32 selfAct = 5;
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.Integer> getSelfActList();
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    int getSelfActCount();
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    int getSelfAct(int index);

    // optional int32 banker = 6;
    /**
     * <code>optional int32 banker = 6;</code>
     *
     * <pre>
     *庄家座位
     * </pre>
     */
    boolean hasBanker();
    /**
     * <code>optional int32 banker = 6;</code>
     *
     * <pre>
     *庄家座位
     * </pre>
     */
    int getBanker();

    // repeated int32 xiaohu = 7;
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    java.util.List<java.lang.Integer> getXiaohuList();
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    int getXiaohuCount();
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    int getXiaohu(int index);

    // optional int32 baoting = 8;
    /**
     * <code>optional int32 baoting = 8;</code>
     *
     * <pre>
     *闲家是否有报听
     * </pre>
     */
    boolean hasBaoting();
    /**
     * <code>optional int32 baoting = 8;</code>
     *
     * <pre>
     *闲家是否有报听
     * </pre>
     */
    int getBaoting();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.YjDealInfoRes}
   *
   * <pre>
   *发牌
   * </pre>
   */
  public static final class YjDealInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements YjDealInfoResOrBuilder {
    // Use YjDealInfoRes.newBuilder() to construct.
    private YjDealInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private YjDealInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final YjDealInfoRes defaultInstance;
    public static YjDealInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public YjDealInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private YjDealInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                handCardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              handCardIds_.add(input.readInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                handCardIds_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                handCardIds_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              nextSeat_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              gameType_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              remain_ = input.readInt32();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              selfAct_.add(input.readInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                selfAct_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                selfAct_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              bitField0_ |= 0x00000008;
              banker_ = input.readInt32();
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                xiaohu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              xiaohu_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                xiaohu_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                xiaohu_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000010;
              baoting_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          handCardIds_ = java.util.Collections.unmodifiableList(handCardIds_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          xiaohu_ = java.util.Collections.unmodifiableList(xiaohu_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjDealInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjDealInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<YjDealInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<YjDealInfoRes>() {
      public YjDealInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new YjDealInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<YjDealInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated int32 handCardIds = 1;
    public static final int HANDCARDIDS_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> handCardIds_;
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandCardIdsList() {
      return handCardIds_;
    }
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public int getHandCardIdsCount() {
      return handCardIds_.size();
    }
    /**
     * <code>repeated int32 handCardIds = 1;</code>
     *
     * <pre>
     *手牌
     * </pre>
     */
    public int getHandCardIds(int index) {
      return handCardIds_.get(index);
    }

    // required int32 nextSeat = 2;
    public static final int NEXTSEAT_FIELD_NUMBER = 2;
    private int nextSeat_;
    /**
     * <code>required int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    public boolean hasNextSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 nextSeat = 2;</code>
     *
     * <pre>
     *下次出牌的seat
     * </pre>
     */
    public int getNextSeat() {
      return nextSeat_;
    }

    // optional int32 gameType = 3;
    public static final int GAMETYPE_FIELD_NUMBER = 3;
    private int gameType_;
    /**
     * <code>optional int32 gameType = 3;</code>
     *
     * <pre>
     *游戏类型
     * </pre>
     */
    public boolean hasGameType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 gameType = 3;</code>
     *
     * <pre>
     *游戏类型
     * </pre>
     */
    public int getGameType() {
      return gameType_;
    }

    // optional int32 remain = 4;
    public static final int REMAIN_FIELD_NUMBER = 4;
    private int remain_;
    /**
     * <code>optional int32 remain = 4;</code>
     */
    public boolean hasRemain() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 remain = 4;</code>
     */
    public int getRemain() {
      return remain_;
    }

    // repeated int32 selfAct = 5;
    public static final int SELFACT_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> selfAct_;
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSelfActList() {
      return selfAct_;
    }
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    public int getSelfActCount() {
      return selfAct_.size();
    }
    /**
     * <code>repeated int32 selfAct = 5;</code>
     *
     * <pre>
     * </pre>
     */
    public int getSelfAct(int index) {
      return selfAct_.get(index);
    }

    // optional int32 banker = 6;
    public static final int BANKER_FIELD_NUMBER = 6;
    private int banker_;
    /**
     * <code>optional int32 banker = 6;</code>
     *
     * <pre>
     *庄家座位
     * </pre>
     */
    public boolean hasBanker() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 banker = 6;</code>
     *
     * <pre>
     *庄家座位
     * </pre>
     */
    public int getBanker() {
      return banker_;
    }

    // repeated int32 xiaohu = 7;
    public static final int XIAOHU_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> xiaohu_;
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getXiaohuList() {
      return xiaohu_;
    }
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    public int getXiaohuCount() {
      return xiaohu_.size();
    }
    /**
     * <code>repeated int32 xiaohu = 7;</code>
     *
     * <pre>
     *长沙麻将起牌小胡
     * </pre>
     */
    public int getXiaohu(int index) {
      return xiaohu_.get(index);
    }

    // optional int32 baoting = 8;
    public static final int BAOTING_FIELD_NUMBER = 8;
    private int baoting_;
    /**
     * <code>optional int32 baoting = 8;</code>
     *
     * <pre>
     *闲家是否有报听
     * </pre>
     */
    public boolean hasBaoting() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 baoting = 8;</code>
     *
     * <pre>
     *闲家是否有报听
     * </pre>
     */
    public int getBaoting() {
      return baoting_;
    }

    private void initFields() {
      handCardIds_ = java.util.Collections.emptyList();
      nextSeat_ = 0;
      gameType_ = 0;
      remain_ = 0;
      selfAct_ = java.util.Collections.emptyList();
      banker_ = 0;
      xiaohu_ = java.util.Collections.emptyList();
      baoting_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasNextSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < handCardIds_.size(); i++) {
        output.writeInt32(1, handCardIds_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, nextSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, gameType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(4, remain_);
      }
      for (int i = 0; i < selfAct_.size(); i++) {
        output.writeInt32(5, selfAct_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(6, banker_);
      }
      for (int i = 0; i < xiaohu_.size(); i++) {
        output.writeInt32(7, xiaohu_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(8, baoting_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < handCardIds_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handCardIds_.get(i));
        }
        size += dataSize;
        size += 1 * getHandCardIdsList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, nextSeat_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, gameType_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, remain_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < selfAct_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(selfAct_.get(i));
        }
        size += dataSize;
        size += 1 * getSelfActList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, banker_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < xiaohu_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(xiaohu_.get(i));
        }
        size += dataSize;
        size += 1 * getXiaohuList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, baoting_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.YjDealInfoRes}
     *
     * <pre>
     *发牌
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.YjDealInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjDealInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjDealInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes.class, com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        handCardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        nextSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        gameType_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        remain_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        banker_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        xiaohu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        baoting_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_YjDealInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes build() {
        com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes result = new com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          handCardIds_ = java.util.Collections.unmodifiableList(handCardIds_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.handCardIds_ = handCardIds_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.nextSeat_ = nextSeat_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.gameType_ = gameType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.remain_ = remain_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = java.util.Collections.unmodifiableList(selfAct_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.selfAct_ = selfAct_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.banker_ = banker_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          xiaohu_ = java.util.Collections.unmodifiableList(xiaohu_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.xiaohu_ = xiaohu_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        result.baoting_ = baoting_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes.getDefaultInstance()) return this;
        if (!other.handCardIds_.isEmpty()) {
          if (handCardIds_.isEmpty()) {
            handCardIds_ = other.handCardIds_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureHandCardIdsIsMutable();
            handCardIds_.addAll(other.handCardIds_);
          }
          onChanged();
        }
        if (other.hasNextSeat()) {
          setNextSeat(other.getNextSeat());
        }
        if (other.hasGameType()) {
          setGameType(other.getGameType());
        }
        if (other.hasRemain()) {
          setRemain(other.getRemain());
        }
        if (!other.selfAct_.isEmpty()) {
          if (selfAct_.isEmpty()) {
            selfAct_ = other.selfAct_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSelfActIsMutable();
            selfAct_.addAll(other.selfAct_);
          }
          onChanged();
        }
        if (other.hasBanker()) {
          setBanker(other.getBanker());
        }
        if (!other.xiaohu_.isEmpty()) {
          if (xiaohu_.isEmpty()) {
            xiaohu_ = other.xiaohu_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureXiaohuIsMutable();
            xiaohu_.addAll(other.xiaohu_);
          }
          onChanged();
        }
        if (other.hasBaoting()) {
          setBaoting(other.getBaoting());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasNextSeat()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.YjDealInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated int32 handCardIds = 1;
      private java.util.List<java.lang.Integer> handCardIds_ = java.util.Collections.emptyList();
      private void ensureHandCardIdsIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          handCardIds_ = new java.util.ArrayList<java.lang.Integer>(handCardIds_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandCardIdsList() {
        return java.util.Collections.unmodifiableList(handCardIds_);
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public int getHandCardIdsCount() {
        return handCardIds_.size();
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public int getHandCardIds(int index) {
        return handCardIds_.get(index);
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder setHandCardIds(
          int index, int value) {
        ensureHandCardIdsIsMutable();
        handCardIds_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder addHandCardIds(int value) {
        ensureHandCardIdsIsMutable();
        handCardIds_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder addAllHandCardIds(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandCardIdsIsMutable();
        super.addAll(values, handCardIds_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handCardIds = 1;</code>
       *
       * <pre>
       *手牌
       * </pre>
       */
      public Builder clearHandCardIds() {
        handCardIds_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      // required int32 nextSeat = 2;
      private int nextSeat_ ;
      /**
       * <code>required int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public boolean hasNextSeat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public int getNextSeat() {
        return nextSeat_;
      }
      /**
       * <code>required int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public Builder setNextSeat(int value) {
        bitField0_ |= 0x00000002;
        nextSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 nextSeat = 2;</code>
       *
       * <pre>
       *下次出牌的seat
       * </pre>
       */
      public Builder clearNextSeat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        nextSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 gameType = 3;
      private int gameType_ ;
      /**
       * <code>optional int32 gameType = 3;</code>
       *
       * <pre>
       *游戏类型
       * </pre>
       */
      public boolean hasGameType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 gameType = 3;</code>
       *
       * <pre>
       *游戏类型
       * </pre>
       */
      public int getGameType() {
        return gameType_;
      }
      /**
       * <code>optional int32 gameType = 3;</code>
       *
       * <pre>
       *游戏类型
       * </pre>
       */
      public Builder setGameType(int value) {
        bitField0_ |= 0x00000004;
        gameType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 gameType = 3;</code>
       *
       * <pre>
       *游戏类型
       * </pre>
       */
      public Builder clearGameType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        gameType_ = 0;
        onChanged();
        return this;
      }

      // optional int32 remain = 4;
      private int remain_ ;
      /**
       * <code>optional int32 remain = 4;</code>
       */
      public boolean hasRemain() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 remain = 4;</code>
       */
      public int getRemain() {
        return remain_;
      }
      /**
       * <code>optional int32 remain = 4;</code>
       */
      public Builder setRemain(int value) {
        bitField0_ |= 0x00000008;
        remain_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 remain = 4;</code>
       */
      public Builder clearRemain() {
        bitField0_ = (bitField0_ & ~0x00000008);
        remain_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 selfAct = 5;
      private java.util.List<java.lang.Integer> selfAct_ = java.util.Collections.emptyList();
      private void ensureSelfActIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          selfAct_ = new java.util.ArrayList<java.lang.Integer>(selfAct_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSelfActList() {
        return java.util.Collections.unmodifiableList(selfAct_);
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public int getSelfActCount() {
        return selfAct_.size();
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public int getSelfAct(int index) {
        return selfAct_.get(index);
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setSelfAct(
          int index, int value) {
        ensureSelfActIsMutable();
        selfAct_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addSelfAct(int value) {
        ensureSelfActIsMutable();
        selfAct_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllSelfAct(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSelfActIsMutable();
        super.addAll(values, selfAct_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 selfAct = 5;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearSelfAct() {
        selfAct_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      // optional int32 banker = 6;
      private int banker_ ;
      /**
       * <code>optional int32 banker = 6;</code>
       *
       * <pre>
       *庄家座位
       * </pre>
       */
      public boolean hasBanker() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 banker = 6;</code>
       *
       * <pre>
       *庄家座位
       * </pre>
       */
      public int getBanker() {
        return banker_;
      }
      /**
       * <code>optional int32 banker = 6;</code>
       *
       * <pre>
       *庄家座位
       * </pre>
       */
      public Builder setBanker(int value) {
        bitField0_ |= 0x00000020;
        banker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 banker = 6;</code>
       *
       * <pre>
       *庄家座位
       * </pre>
       */
      public Builder clearBanker() {
        bitField0_ = (bitField0_ & ~0x00000020);
        banker_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 xiaohu = 7;
      private java.util.List<java.lang.Integer> xiaohu_ = java.util.Collections.emptyList();
      private void ensureXiaohuIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          xiaohu_ = new java.util.ArrayList<java.lang.Integer>(xiaohu_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getXiaohuList() {
        return java.util.Collections.unmodifiableList(xiaohu_);
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public int getXiaohuCount() {
        return xiaohu_.size();
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public int getXiaohu(int index) {
        return xiaohu_.get(index);
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public Builder setXiaohu(
          int index, int value) {
        ensureXiaohuIsMutable();
        xiaohu_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public Builder addXiaohu(int value) {
        ensureXiaohuIsMutable();
        xiaohu_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public Builder addAllXiaohu(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureXiaohuIsMutable();
        super.addAll(values, xiaohu_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohu = 7;</code>
       *
       * <pre>
       *长沙麻将起牌小胡
       * </pre>
       */
      public Builder clearXiaohu() {
        xiaohu_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 baoting = 8;
      private int baoting_ ;
      /**
       * <code>optional int32 baoting = 8;</code>
       *
       * <pre>
       *闲家是否有报听
       * </pre>
       */
      public boolean hasBaoting() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 baoting = 8;</code>
       *
       * <pre>
       *闲家是否有报听
       * </pre>
       */
      public int getBaoting() {
        return baoting_;
      }
      /**
       * <code>optional int32 baoting = 8;</code>
       *
       * <pre>
       *闲家是否有报听
       * </pre>
       */
      public Builder setBaoting(int value) {
        bitField0_ |= 0x00000080;
        baoting_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 baoting = 8;</code>
       *
       * <pre>
       *闲家是否有报听
       * </pre>
       */
      public Builder clearBaoting() {
        bitField0_ = (bitField0_ & ~0x00000080);
        baoting_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.YjDealInfoRes)
    }

    static {
      defaultInstance = new YjDealInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.YjDealInfoRes)
  }

  public interface QiZiOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional int32 x = 1;
    /**
     * <code>optional int32 x = 1;</code>
     *
     * <pre>
     * x坐标
     * </pre>
     */
    boolean hasX();
    /**
     * <code>optional int32 x = 1;</code>
     *
     * <pre>
     * x坐标
     * </pre>
     */
    int getX();

    // optional int32 y = 2;
    /**
     * <code>optional int32 y = 2;</code>
     *
     * <pre>
     * y坐标
     * </pre>
     */
    boolean hasY();
    /**
     * <code>optional int32 y = 2;</code>
     *
     * <pre>
     * y坐标
     * </pre>
     */
    int getY();

    // optional int32 val = 3;
    /**
     * <code>optional int32 val = 3;</code>
     *
     * <pre>
     * 值(-1：黑子，1：白子)
     * </pre>
     */
    boolean hasVal();
    /**
     * <code>optional int32 val = 3;</code>
     *
     * <pre>
     * 值(-1：黑子，1：白子)
     * </pre>
     */
    int getVal();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.QiZi}
   *
   * <pre>
   * 棋盘中的棋子
   * </pre>
   */
  public static final class QiZi extends
      com.google.protobuf.GeneratedMessage
      implements QiZiOrBuilder {
    // Use QiZi.newBuilder() to construct.
    private QiZi(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private QiZi(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final QiZi defaultInstance;
    public static QiZi getDefaultInstance() {
      return defaultInstance;
    }

    public QiZi getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private QiZi(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              x_ = input.readInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              y_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              val_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_QiZi_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_QiZi_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableRes.QiZi.class, com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder.class);
    }

    public static com.google.protobuf.Parser<QiZi> PARSER =
        new com.google.protobuf.AbstractParser<QiZi>() {
      public QiZi parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new QiZi(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<QiZi> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional int32 x = 1;
    public static final int X_FIELD_NUMBER = 1;
    private int x_;
    /**
     * <code>optional int32 x = 1;</code>
     *
     * <pre>
     * x坐标
     * </pre>
     */
    public boolean hasX() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 x = 1;</code>
     *
     * <pre>
     * x坐标
     * </pre>
     */
    public int getX() {
      return x_;
    }

    // optional int32 y = 2;
    public static final int Y_FIELD_NUMBER = 2;
    private int y_;
    /**
     * <code>optional int32 y = 2;</code>
     *
     * <pre>
     * y坐标
     * </pre>
     */
    public boolean hasY() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 y = 2;</code>
     *
     * <pre>
     * y坐标
     * </pre>
     */
    public int getY() {
      return y_;
    }

    // optional int32 val = 3;
    public static final int VAL_FIELD_NUMBER = 3;
    private int val_;
    /**
     * <code>optional int32 val = 3;</code>
     *
     * <pre>
     * 值(-1：黑子，1：白子)
     * </pre>
     */
    public boolean hasVal() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 val = 3;</code>
     *
     * <pre>
     * 值(-1：黑子，1：白子)
     * </pre>
     */
    public int getVal() {
      return val_;
    }

    private void initFields() {
      x_ = 0;
      y_ = 0;
      val_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, val_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, x_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, y_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, val_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableRes.QiZi parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.QiZi parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.QiZi parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.QiZi parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.QiZi parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.QiZi parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.QiZi parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.QiZi parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.QiZi parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableRes.QiZi parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableRes.QiZi prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.QiZi}
     *
     * <pre>
     * 棋盘中的棋子
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableRes.QiZiOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_QiZi_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_QiZi_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableRes.QiZi.class, com.sy599.game.msg.serverPacket.TableRes.QiZi.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableRes.QiZi.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        x_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        y_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        val_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableRes.internal_static_com_sy599_game_msg_serverPacket_QiZi_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableRes.QiZi getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableRes.QiZi.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableRes.QiZi build() {
        com.sy599.game.msg.serverPacket.TableRes.QiZi result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableRes.QiZi buildPartial() {
        com.sy599.game.msg.serverPacket.TableRes.QiZi result = new com.sy599.game.msg.serverPacket.TableRes.QiZi(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.x_ = x_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.y_ = y_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.val_ = val_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableRes.QiZi) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableRes.QiZi)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableRes.QiZi other) {
        if (other == com.sy599.game.msg.serverPacket.TableRes.QiZi.getDefaultInstance()) return this;
        if (other.hasX()) {
          setX(other.getX());
        }
        if (other.hasY()) {
          setY(other.getY());
        }
        if (other.hasVal()) {
          setVal(other.getVal());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableRes.QiZi parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableRes.QiZi) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional int32 x = 1;
      private int x_ ;
      /**
       * <code>optional int32 x = 1;</code>
       *
       * <pre>
       * x坐标
       * </pre>
       */
      public boolean hasX() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 x = 1;</code>
       *
       * <pre>
       * x坐标
       * </pre>
       */
      public int getX() {
        return x_;
      }
      /**
       * <code>optional int32 x = 1;</code>
       *
       * <pre>
       * x坐标
       * </pre>
       */
      public Builder setX(int value) {
        bitField0_ |= 0x00000001;
        x_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 x = 1;</code>
       *
       * <pre>
       * x坐标
       * </pre>
       */
      public Builder clearX() {
        bitField0_ = (bitField0_ & ~0x00000001);
        x_ = 0;
        onChanged();
        return this;
      }

      // optional int32 y = 2;
      private int y_ ;
      /**
       * <code>optional int32 y = 2;</code>
       *
       * <pre>
       * y坐标
       * </pre>
       */
      public boolean hasY() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 y = 2;</code>
       *
       * <pre>
       * y坐标
       * </pre>
       */
      public int getY() {
        return y_;
      }
      /**
       * <code>optional int32 y = 2;</code>
       *
       * <pre>
       * y坐标
       * </pre>
       */
      public Builder setY(int value) {
        bitField0_ |= 0x00000002;
        y_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 y = 2;</code>
       *
       * <pre>
       * y坐标
       * </pre>
       */
      public Builder clearY() {
        bitField0_ = (bitField0_ & ~0x00000002);
        y_ = 0;
        onChanged();
        return this;
      }

      // optional int32 val = 3;
      private int val_ ;
      /**
       * <code>optional int32 val = 3;</code>
       *
       * <pre>
       * 值(-1：黑子，1：白子)
       * </pre>
       */
      public boolean hasVal() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 val = 3;</code>
       *
       * <pre>
       * 值(-1：黑子，1：白子)
       * </pre>
       */
      public int getVal() {
        return val_;
      }
      /**
       * <code>optional int32 val = 3;</code>
       *
       * <pre>
       * 值(-1：黑子，1：白子)
       * </pre>
       */
      public Builder setVal(int value) {
        bitField0_ |= 0x00000004;
        val_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 val = 3;</code>
       *
       * <pre>
       * 值(-1：黑子，1：白子)
       * </pre>
       */
      public Builder clearVal() {
        bitField0_ = (bitField0_ & ~0x00000004);
        val_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.QiZi)
    }

    static {
      defaultInstance = new QiZi(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.QiZi)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_CreateTableRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_CreateTableRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_JoinTableRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_JoinTableRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_PlayerInTableRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_PlayerInTableRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_PlayerPointDetail_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_PlayerPointDetail_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_DealInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_DealInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_ClosingInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_ClosingInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_ClosingPlayerInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_ClosingPlayerInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_GangCard_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_GangCard_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_YjClosingPlayerInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_YjClosingPlayerInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_YjClosingInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_YjClosingInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_YjDealInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_YjDealInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_QiZi_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_QiZi_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032proto/files/TableRes.proto\022\037com.sy599." +
      "game.msg.serverPacket\032 proto/files/Table" +
      "PhzResMsg.proto\"\357\005\n\016CreateTableRes\022\017\n\007ta" +
      "bleId\030\001 \002(\t\022\023\n\013nowBurCount\030\002 \002(\005\022\025\n\rtota" +
      "lBurCount\030\003 \002(\005\022B\n\007players\030\004 \003(\01321.com.s" +
      "y599.game.msg.serverPacket.PlayerInTable" +
      "Res\022\020\n\010nextSeat\030\005 \001(\005\022\r\n\005wanfa\030\006 \002(\005\022\016\n\006" +
      "remain\030\007 \001(\005\022\013\n\003ext\030\010 \003(\005\022\023\n\013gotyeRoomId" +
      "\030\t \001(\t\022\020\n\010matchExt\030\n \003(\005\022\016\n\006renshu\030\013 \001(\005" +
      "\022\023\n\013fromOverPop\030\014 \001(\005\022\021\n\tshowRenew\030\r \001(\005",
      "\022\020\n\010isDaiKai\030\016 \001(\005\022\021\n\ttableType\030\017 \001(\005\022\025\n" +
      "\rgroupProperty\030\020 \001(\t\022\017\n\007timeOut\030\021 \003(\005\022\021\n" +
      "\tscoreCard\030\022 \003(\005\022\016\n\006extStr\030\023 \003(\t\022\025\n\rroun" +
      "dCardType\030\024 \001(\005\022\020\n\010masterId\030\025 \001(\t\022\023\n\013las" +
      "tWinSeat\030\026 \001(\005\022\021\n\tcreatorId\030\027 \001(\003\022\020\n\010dea" +
      "lDice\030\030 \001(\005\022\016\n\006strExt\030\031 \003(\t\022\024\n\014creditCon" +
      "fig\030\032 \003(\003\022\021\n\tintParams\030\033 \003(\005\022\021\n\tstrParam" +
      "s\030\034 \003(\t\022\020\n\010roomName\030\035 \001(\t\022\022\n\ngeneralExt\030" +
      "\036 \003(\t\0224\n\005qiPan\030\037 \003(\0132%.com.sy599.game.ms" +
      "g.serverPacket.QiZi\022\017\n\007goldMsg\030  \001(\t\022\030\n\020",
      "goldRoomConfigId\030! \001(\003\022\031\n\021groupTableGold" +
      "Msg\030\" \001(\t\"r\n\014JoinTableRes\022A\n\006player\030\001 \002(" +
      "\01321.com.sy599.game.msg.serverPacket.Play" +
      "erInTableRes\022\020\n\010nextSeat\030\002 \001(\005\022\r\n\005wanfa\030" +
      "\003 \002(\005\"\362\004\n\020PlayerInTableRes\022\016\n\006userId\030\001 \002" +
      "(\t\022\014\n\004name\030\002 \002(\t\022\014\n\004seat\030\003 \002(\005\022\013\n\003sex\030\004 " +
      "\002(\005\022\014\n\004icon\030\005 \002(\t\022\r\n\005point\030\006 \002(\005\022\023\n\013hand" +
      "CardIds\030\007 \003(\005\022\022\n\noutCardIds\030\010 \003(\005\022\016\n\006sta" +
      "tus\030\t \001(\005\022\017\n\007recover\030\n \003(\005\022\n\n\002ip\030\013 \001(\t\022\020" +
      "\n\010outedIds\030\014 \003(\005\022\017\n\007moldIds\030\r \003(\005\022\021\n\tang",
      "angIds\030\016 \003(\005\022\013\n\003ext\030\017 \003(\005\022\024\n\014gameSiteRan" +
      "k\030\020 \001(\005\022\020\n\010matchExt\030\021 \003(\005\022>\n\tmoldCards\030\022" +
      " \003(\0132+.com.sy599.game.msg.serverPacket.P" +
      "hzHuCards\022\013\n\003gps\030\023 \001(\t\022\020\n\010userSate\030\024 \001(\005" +
      "\022\023\n\013designation\030\025 \001(\005\022<\n\007huCards\030\026 \003(\0132+" +
      ".com.sy599.game.msg.serverPacket.PhzHuCa" +
      "rds\022\014\n\004gold\030\027 \001(\t\022\016\n\006credit\030\030 \001(\003\022\021\n\tsco" +
      "reCard\030\031 \003(\005\022\017\n\007intExts\030\032 \003(\005\022\017\n\007strExts" +
      "\030\033 \003(\t\022\024\n\014shiZhongCard\030\034 \001(\005\022\014\n\004coin\030\035 \001" +
      "(\003\022\017\n\007frameId\030\036 \001(\005\022\r\n\005score\030\037 \001(\003\"\023\n\021Pl",
      "ayerPointDetail\"\314\002\n\013DealInfoRes\022\023\n\013handC" +
      "ardIds\030\001 \003(\005\022\020\n\010nextSeat\030\002 \002(\005\022\020\n\010gameTy" +
      "pe\030\003 \001(\005\022\016\n\006remain\030\004 \001(\005\022\017\n\007selfAct\030\005 \003(" +
      "\005\022\016\n\006banker\030\006 \001(\005\022\016\n\006xiaohu\030\007 \003(\005\022\024\n\014lev" +
      "elCardIds\030\010 \003(\005\022\017\n\007baoting\030\t \001(\005\022\014\n\004seat" +
      "\030\n \001(\005\022\020\n\010dealDice\030\013 \001(\005\022\020\n\010laiZiVal\030\014 \001" +
      "(\005\022\020\n\010diCardId\030\r \001(\005\022\022\n\nkingCardId\030\016 \001(\005" +
      "\022\016\n\006horses\030\017 \003(\005\022\030\n\020nextDisCardIndex\030\020 \001" +
      "(\005\022\032\n\022dealDiceFloorIndex\030\021 \001(\005\"\212\002\n\016Closi" +
      "ngInfoRes\022M\n\016closingPlayers\030\001 \003(\01325.com.",
      "sy599.game.msg.serverPacket.ClosingPlaye" +
      "rInfoRes\022\014\n\004bird\030\002 \003(\005\022\020\n\010birdSeat\030\003 \003(\005" +
      "\022\017\n\007isBreak\030\004 \001(\005\022\r\n\005wanfa\030\005 \001(\005\022\013\n\003ext\030" +
      "\006 \003(\t\022\020\n\010matchExt\030\007 \003(\t\022\017\n\007cutCard\030\010 \003(\005" +
      "\022\022\n\ncutDtzCard\030\t \003(\005\022\022\n\ngroupLogId\030\n \001(\005" +
      "\022\021\n\tintParams\030\013 \003(\005\"\374\003\n\024ClosingPlayerInf" +
      "oRes\022\016\n\006userId\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\023\n\013le" +
      "ftCardNum\030\003 \001(\005\022\r\n\005point\030\004 \001(\005\022\022\n\ntotalP" +
      "oint\030\005 \001(\005\022\014\n\004boom\030\006 \001(\005\022\020\n\010winCount\030\007 \001" +
      "(\005\022\021\n\tlostCount\030\010 \001(\005\022\020\n\010maxPoint\030\t \001(\005\022",
      "\021\n\ttotalBoom\030\n \001(\005\022\r\n\005cards\030\013 \003(\005\022\014\n\004sea" +
      "t\030\014 \002(\005\022\013\n\003sex\030\r \001(\005\022\014\n\004icon\030\016 \001(\t\022\014\n\004is" +
      "Hu\030\017 \001(\005\022\024\n\014actionCounts\030\020 \003(\005\022\017\n\007gangId" +
      "s\030\021 \003(\005\022\r\n\005dahus\030\022 \003(\005\022\017\n\007xiaohus\030\023 \003(\005\022" +
      ";\n\006mcards\030\024 \003(\0132+.com.sy599.game.msg.ser" +
      "verPacket.PhzHuCards\022\013\n\003ext\030\025 \003(\t\022\014\n\004gol" +
      "d\030\026 \001(\t\022\016\n\006credit\030\027 \001(\005\022\025\n\rwinLoseCredit" +
      "\030\030 \001(\003\022\030\n\020commissionCredit\030\031 \001(\003\022\020\n\010gold" +
      "Flag\030\032 \001(\005\"\031\n\010GangCard\022\r\n\005cards\030\001 \003(\005\"\206\005" +
      "\n\026YjClosingPlayerInfoRes\022\016\n\006userId\030\001 \001(\t",
      "\022\014\n\004name\030\002 \001(\t\022\023\n\013leftCardNum\030\003 \001(\005\022\r\n\005p" +
      "oint\030\004 \001(\005\022\022\n\ntotalPoint\030\005 \001(\005\022\021\n\tzimoCo" +
      "unt\030\006 \001(\005\022\023\n\013jiePaoCount\030\007 \001(\005\022\024\n\014fangPa" +
      "oCount\030\010 \001(\005\022\014\n\004seat\030\t \002(\005\022\013\n\003sex\030\n \001(\005\022" +
      "\014\n\004icon\030\013 \001(\t\022\014\n\004isHu\030\014 \001(\005\022\024\n\014actionCou" +
      "nts\030\r \003(\005\022\r\n\005cards\030\016 \003(\005\022\r\n\005pengs\030\017 \003(\005\022" +
      "8\n\005mGang\030\020 \003(\0132).com.sy599.game.msg.serv" +
      "erPacket.GangCard\0228\n\005aGang\030\021 \003(\0132).com.s" +
      "y599.game.msg.serverPacket.GangCard\0228\n\005j" +
      "Gang\030\022 \003(\0132).com.sy599.game.msg.serverPa",
      "cket.GangCard\022\r\n\005dahus\030\023 \003(\005\022;\n\006mcards\030\024" +
      " \003(\0132+.com.sy599.game.msg.serverPacket.P" +
      "hzHuCards\022\021\n\tgangInfos\030\025 \003(\005\022\013\n\003ext\030\026 \003(" +
      "\t\022\022\n\ndahuCounts\030\027 \003(\005\022\016\n\006credit\030\030 \001(\005\022\025\n" +
      "\rwinLoseCredit\030\031 \001(\003\022\030\n\020commissionCredit" +
      "\030\032 \001(\003\"\363\002\n\020YjClosingInfoRes\022O\n\016closingPl" +
      "ayers\030\001 \003(\01327.com.sy599.game.msg.serverP" +
      "acket.YjClosingPlayerInfoRes\022\014\n\004bird\030\002 \003" +
      "(\005\022\020\n\010birdSeat\030\003 \003(\005\022\017\n\007isBreak\030\004 \001(\005\022\r\n" +
      "\005wanfa\030\005 \001(\005\022\013\n\003ext\030\006 \003(\t\022\020\n\010matchExt\030\007 ",
      "\003(\t\022\017\n\007cutCard\030\010 \003(\005\022\022\n\ncutDtzCard\030\t \003(\005" +
      "\022\021\n\tleftCards\030\n \003(\005\022\023\n\013fangPaoSeat\030\013 \001(\005" +
      "\022\022\n\njiePaoSeat\030\014 \003(\005\022\022\n\ngroupLogId\030\r \001(\005" +
      "\022\021\n\tintParams\030\016 \003(\005\022\024\n\014creditConfig\030\017 \003(" +
      "\003\022\021\n\tchouCards\030\020 \003(\005\"\232\001\n\rYjDealInfoRes\022\023" +
      "\n\013handCardIds\030\001 \003(\005\022\020\n\010nextSeat\030\002 \002(\005\022\020\n" +
      "\010gameType\030\003 \001(\005\022\016\n\006remain\030\004 \001(\005\022\017\n\007selfA" +
      "ct\030\005 \003(\005\022\016\n\006banker\030\006 \001(\005\022\016\n\006xiaohu\030\007 \003(\005" +
      "\022\017\n\007baoting\030\010 \001(\005\")\n\004QiZi\022\t\n\001x\030\001 \001(\005\022\t\n\001" +
      "y\030\002 \001(\005\022\013\n\003val\030\003 \001(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_sy599_game_msg_serverPacket_CreateTableRes_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_sy599_game_msg_serverPacket_CreateTableRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_CreateTableRes_descriptor,
              new java.lang.String[] { "TableId", "NowBurCount", "TotalBurCount", "Players", "NextSeat", "Wanfa", "Remain", "Ext", "GotyeRoomId", "MatchExt", "Renshu", "FromOverPop", "ShowRenew", "IsDaiKai", "TableType", "GroupProperty", "TimeOut", "ScoreCard", "ExtStr", "RoundCardType", "MasterId", "LastWinSeat", "CreatorId", "DealDice", "StrExt", "CreditConfig", "IntParams", "StrParams", "RoomName", "GeneralExt", "QiPan", "GoldMsg", "GoldRoomConfigId", "GroupTableGoldMsg", });
          internal_static_com_sy599_game_msg_serverPacket_JoinTableRes_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_sy599_game_msg_serverPacket_JoinTableRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_JoinTableRes_descriptor,
              new java.lang.String[] { "Player", "NextSeat", "Wanfa", });
          internal_static_com_sy599_game_msg_serverPacket_PlayerInTableRes_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_sy599_game_msg_serverPacket_PlayerInTableRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_PlayerInTableRes_descriptor,
              new java.lang.String[] { "UserId", "Name", "Seat", "Sex", "Icon", "Point", "HandCardIds", "OutCardIds", "Status", "Recover", "Ip", "OutedIds", "MoldIds", "AngangIds", "Ext", "GameSiteRank", "MatchExt", "MoldCards", "Gps", "UserSate", "Designation", "HuCards", "Gold", "Credit", "ScoreCard", "IntExts", "StrExts", "ShiZhongCard", "Coin", "FrameId", "Score", });
          internal_static_com_sy599_game_msg_serverPacket_PlayerPointDetail_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_sy599_game_msg_serverPacket_PlayerPointDetail_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_PlayerPointDetail_descriptor,
              new java.lang.String[] { });
          internal_static_com_sy599_game_msg_serverPacket_DealInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_sy599_game_msg_serverPacket_DealInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_DealInfoRes_descriptor,
              new java.lang.String[] { "HandCardIds", "NextSeat", "GameType", "Remain", "SelfAct", "Banker", "Xiaohu", "LevelCardIds", "Baoting", "Seat", "DealDice", "LaiZiVal", "DiCardId", "KingCardId", "Horses", "NextDisCardIndex", "DealDiceFloorIndex", });
          internal_static_com_sy599_game_msg_serverPacket_ClosingInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_sy599_game_msg_serverPacket_ClosingInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_ClosingInfoRes_descriptor,
              new java.lang.String[] { "ClosingPlayers", "Bird", "BirdSeat", "IsBreak", "Wanfa", "Ext", "MatchExt", "CutCard", "CutDtzCard", "GroupLogId", "IntParams", });
          internal_static_com_sy599_game_msg_serverPacket_ClosingPlayerInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(6);
          internal_static_com_sy599_game_msg_serverPacket_ClosingPlayerInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_ClosingPlayerInfoRes_descriptor,
              new java.lang.String[] { "UserId", "Name", "LeftCardNum", "Point", "TotalPoint", "Boom", "WinCount", "LostCount", "MaxPoint", "TotalBoom", "Cards", "Seat", "Sex", "Icon", "IsHu", "ActionCounts", "GangIds", "Dahus", "Xiaohus", "Mcards", "Ext", "Gold", "Credit", "WinLoseCredit", "CommissionCredit", "GoldFlag", });
          internal_static_com_sy599_game_msg_serverPacket_GangCard_descriptor =
            getDescriptor().getMessageTypes().get(7);
          internal_static_com_sy599_game_msg_serverPacket_GangCard_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_GangCard_descriptor,
              new java.lang.String[] { "Cards", });
          internal_static_com_sy599_game_msg_serverPacket_YjClosingPlayerInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(8);
          internal_static_com_sy599_game_msg_serverPacket_YjClosingPlayerInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_YjClosingPlayerInfoRes_descriptor,
              new java.lang.String[] { "UserId", "Name", "LeftCardNum", "Point", "TotalPoint", "ZimoCount", "JiePaoCount", "FangPaoCount", "Seat", "Sex", "Icon", "IsHu", "ActionCounts", "Cards", "Pengs", "MGang", "AGang", "JGang", "Dahus", "Mcards", "GangInfos", "Ext", "DahuCounts", "Credit", "WinLoseCredit", "CommissionCredit", });
          internal_static_com_sy599_game_msg_serverPacket_YjClosingInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(9);
          internal_static_com_sy599_game_msg_serverPacket_YjClosingInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_YjClosingInfoRes_descriptor,
              new java.lang.String[] { "ClosingPlayers", "Bird", "BirdSeat", "IsBreak", "Wanfa", "Ext", "MatchExt", "CutCard", "CutDtzCard", "LeftCards", "FangPaoSeat", "JiePaoSeat", "GroupLogId", "IntParams", "CreditConfig", "ChouCards", });
          internal_static_com_sy599_game_msg_serverPacket_YjDealInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(10);
          internal_static_com_sy599_game_msg_serverPacket_YjDealInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_YjDealInfoRes_descriptor,
              new java.lang.String[] { "HandCardIds", "NextSeat", "GameType", "Remain", "SelfAct", "Banker", "Xiaohu", "Baoting", });
          internal_static_com_sy599_game_msg_serverPacket_QiZi_descriptor =
            getDescriptor().getMessageTypes().get(11);
          internal_static_com_sy599_game_msg_serverPacket_QiZi_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_QiZi_descriptor,
              new java.lang.String[] { "X", "Y", "Val", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.sy599.game.msg.serverPacket.TablePhzResMsg.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
