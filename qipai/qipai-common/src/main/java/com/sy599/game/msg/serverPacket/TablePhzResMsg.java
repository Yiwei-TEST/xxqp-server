// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: files/TablePhzResMsg.proto

package com.sy599.game.msg.serverPacket;

public final class TablePhzResMsg {
  private TablePhzResMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface PhzHuCardsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 action = 1;
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    boolean hasAction();
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    int getAction();

    // repeated int32 cards = 2;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    int getCards(int index);

    // optional int32 huxi = 3;
    /**
     * <code>optional int32 huxi = 3;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    boolean hasHuxi();
    /**
     * <code>optional int32 huxi = 3;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    int getHuxi();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.PhzHuCards}
   *
   * <pre>
   *牌组
   * </pre>
   */
  public static final class PhzHuCards extends
      com.google.protobuf.GeneratedMessage
      implements PhzHuCardsOrBuilder {
    // Use PhzHuCards.newBuilder() to construct.
    private PhzHuCards(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PhzHuCards(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PhzHuCards defaultInstance;
    public static PhzHuCards getDefaultInstance() {
      return defaultInstance;
    }

    public PhzHuCards getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PhzHuCards(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              action_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              huxi_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_PhzHuCards_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_PhzHuCards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder.class);
    }

    public static com.google.protobuf.Parser<PhzHuCards> PARSER =
        new com.google.protobuf.AbstractParser<PhzHuCards>() {
      public PhzHuCards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PhzHuCards(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PhzHuCards> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 action = 1;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    public int getAction() {
      return action_;
    }

    // repeated int32 cards = 2;
    public static final int CARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 huxi = 3;
    public static final int HUXI_FIELD_NUMBER = 3;
    private int huxi_;
    /**
     * <code>optional int32 huxi = 3;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    public boolean hasHuxi() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 huxi = 3;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    public int getHuxi() {
      return huxi_;
    }

    private void initFields() {
      action_ = 0;
      cards_ = java.util.Collections.emptyList();
      huxi_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, action_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(2, cards_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, huxi_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, action_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, huxi_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.PhzHuCards}
     *
     * <pre>
     *牌组
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_PhzHuCards_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_PhzHuCards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        huxi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_PhzHuCards_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards build() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards buildPartial() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards result = new com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.action_ = action_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.huxi_ = huxi_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards other) {
        if (other == com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance()) return this;
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasHuxi()) {
          setHuxi(other.getHuxi());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAction()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 action = 1;
      private int action_ ;
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public int getAction() {
        return action_;
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder setAction(int value) {
        bitField0_ |= 0x00000001;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 2;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // optional int32 huxi = 3;
      private int huxi_ ;
      /**
       * <code>optional int32 huxi = 3;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public boolean hasHuxi() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 huxi = 3;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public int getHuxi() {
        return huxi_;
      }
      /**
       * <code>optional int32 huxi = 3;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public Builder setHuxi(int value) {
        bitField0_ |= 0x00000004;
        huxi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huxi = 3;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public Builder clearHuxi() {
        bitField0_ = (bitField0_ & ~0x00000004);
        huxi_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.PhzHuCards)
    }

    static {
      defaultInstance = new PhzHuCards(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.PhzHuCards)
  }

  public interface PhzHuCardListOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 seat = 1;
    /**
     * <code>required int32 seat = 1;</code>
     */
    boolean hasSeat();
    /**
     * <code>required int32 seat = 1;</code>
     */
    int getSeat();

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> 
        getPhzCardList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getPhzCard(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
     */
    int getPhzCardCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getPhzCardOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getPhzCardOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.PhzHuCardList}
   */
  public static final class PhzHuCardList extends
      com.google.protobuf.GeneratedMessage
      implements PhzHuCardListOrBuilder {
    // Use PhzHuCardList.newBuilder() to construct.
    private PhzHuCardList(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private PhzHuCardList(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final PhzHuCardList defaultInstance;
    public static PhzHuCardList getDefaultInstance() {
      return defaultInstance;
    }

    public PhzHuCardList getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private PhzHuCardList(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              seat_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                phzCard_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>();
                mutable_bitField0_ |= 0x00000002;
              }
              phzCard_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          phzCard_ = java.util.Collections.unmodifiableList(phzCard_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_PhzHuCardList_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_PhzHuCardList_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder.class);
    }

    public static com.google.protobuf.Parser<PhzHuCardList> PARSER =
        new com.google.protobuf.AbstractParser<PhzHuCardList>() {
      public PhzHuCardList parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new PhzHuCardList(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<PhzHuCardList> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 seat = 1;
    public static final int SEAT_FIELD_NUMBER = 1;
    private int seat_;
    /**
     * <code>required int32 seat = 1;</code>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 seat = 1;</code>
     */
    public int getSeat() {
      return seat_;
    }

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;
    public static final int PHZCARD_FIELD_NUMBER = 2;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> phzCard_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getPhzCardList() {
      return phzCard_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getPhzCardOrBuilderList() {
      return phzCard_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
     */
    public int getPhzCardCount() {
      return phzCard_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getPhzCard(int index) {
      return phzCard_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getPhzCardOrBuilder(
        int index) {
      return phzCard_.get(index);
    }

    private void initFields() {
      seat_ = 0;
      phzCard_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getPhzCardCount(); i++) {
        if (!getPhzCard(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, seat_);
      }
      for (int i = 0; i < phzCard_.size(); i++) {
        output.writeMessage(2, phzCard_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, seat_);
      }
      for (int i = 0; i < phzCard_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, phzCard_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.PhzHuCardList}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardListOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_PhzHuCardList_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_PhzHuCardList_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getPhzCardFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (phzCardBuilder_ == null) {
          phzCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          phzCardBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_PhzHuCardList_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList build() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList buildPartial() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList result = new com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.seat_ = seat_;
        if (phzCardBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            phzCard_ = java.util.Collections.unmodifiableList(phzCard_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.phzCard_ = phzCard_;
        } else {
          result.phzCard_ = phzCardBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList other) {
        if (other == com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.getDefaultInstance()) return this;
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (phzCardBuilder_ == null) {
          if (!other.phzCard_.isEmpty()) {
            if (phzCard_.isEmpty()) {
              phzCard_ = other.phzCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensurePhzCardIsMutable();
              phzCard_.addAll(other.phzCard_);
            }
            onChanged();
          }
        } else {
          if (!other.phzCard_.isEmpty()) {
            if (phzCardBuilder_.isEmpty()) {
              phzCardBuilder_.dispose();
              phzCardBuilder_ = null;
              phzCard_ = other.phzCard_;
              bitField0_ = (bitField0_ & ~0x00000002);
              phzCardBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getPhzCardFieldBuilder() : null;
            } else {
              phzCardBuilder_.addAllMessages(other.phzCard_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeat()) {
          
          return false;
        }
        for (int i = 0; i < getPhzCardCount(); i++) {
          if (!getPhzCard(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 seat = 1;
      private int seat_ ;
      /**
       * <code>required int32 seat = 1;</code>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 seat = 1;</code>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>required int32 seat = 1;</code>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000001;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 seat = 1;</code>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000001);
        seat_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> phzCard_ =
        java.util.Collections.emptyList();
      private void ensurePhzCardIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          phzCard_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>(phzCard_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> phzCardBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getPhzCardList() {
        if (phzCardBuilder_ == null) {
          return java.util.Collections.unmodifiableList(phzCard_);
        } else {
          return phzCardBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public int getPhzCardCount() {
        if (phzCardBuilder_ == null) {
          return phzCard_.size();
        } else {
          return phzCardBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getPhzCard(int index) {
        if (phzCardBuilder_ == null) {
          return phzCard_.get(index);
        } else {
          return phzCardBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public Builder setPhzCard(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (phzCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhzCardIsMutable();
          phzCard_.set(index, value);
          onChanged();
        } else {
          phzCardBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public Builder setPhzCard(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (phzCardBuilder_ == null) {
          ensurePhzCardIsMutable();
          phzCard_.set(index, builderForValue.build());
          onChanged();
        } else {
          phzCardBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public Builder addPhzCard(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (phzCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhzCardIsMutable();
          phzCard_.add(value);
          onChanged();
        } else {
          phzCardBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public Builder addPhzCard(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (phzCardBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensurePhzCardIsMutable();
          phzCard_.add(index, value);
          onChanged();
        } else {
          phzCardBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public Builder addPhzCard(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (phzCardBuilder_ == null) {
          ensurePhzCardIsMutable();
          phzCard_.add(builderForValue.build());
          onChanged();
        } else {
          phzCardBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public Builder addPhzCard(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (phzCardBuilder_ == null) {
          ensurePhzCardIsMutable();
          phzCard_.add(index, builderForValue.build());
          onChanged();
        } else {
          phzCardBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public Builder addAllPhzCard(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> values) {
        if (phzCardBuilder_ == null) {
          ensurePhzCardIsMutable();
          super.addAll(values, phzCard_);
          onChanged();
        } else {
          phzCardBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public Builder clearPhzCard() {
        if (phzCardBuilder_ == null) {
          phzCard_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          phzCardBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public Builder removePhzCard(int index) {
        if (phzCardBuilder_ == null) {
          ensurePhzCardIsMutable();
          phzCard_.remove(index);
          onChanged();
        } else {
          phzCardBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder getPhzCardBuilder(
          int index) {
        return getPhzCardFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getPhzCardOrBuilder(
          int index) {
        if (phzCardBuilder_ == null) {
          return phzCard_.get(index);  } else {
          return phzCardBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
           getPhzCardOrBuilderList() {
        if (phzCardBuilder_ != null) {
          return phzCardBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(phzCard_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addPhzCardBuilder() {
        return getPhzCardFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addPhzCardBuilder(
          int index) {
        return getPhzCardFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards phzCard = 2;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder> 
           getPhzCardBuilderList() {
        return getPhzCardFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
          getPhzCardFieldBuilder() {
        if (phzCardBuilder_ == null) {
          phzCardBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder>(
                  phzCard_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          phzCard_ = null;
        }
        return phzCardBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.PhzHuCardList)
    }

    static {
      defaultInstance = new PhzHuCardList(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.PhzHuCardList)
  }

  public interface ClosingPhzInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes> 
        getClosingPlayersList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes getClosingPlayers(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    int getClosingPlayersCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index);

    // optional int32 isBreak = 2;
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    boolean hasIsBreak();
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    int getIsBreak();

    // optional int32 wanfa = 3;
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    boolean hasWanfa();
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    int getWanfa();

    // repeated string ext = 4;
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.String>
    getExtList();
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    java.lang.String getExt(int index);
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtBytes(int index);

    // repeated string matchExt = 5;
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    java.util.List<java.lang.String>
    getMatchExtList();
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    int getMatchExtCount();
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    java.lang.String getMatchExt(int index);
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    com.google.protobuf.ByteString
        getMatchExtBytes(int index);

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> 
        getCardsList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getCards(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getCardsOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getCardsOrBuilder(
        int index);

    // repeated int32 leftCards = 7;
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getLeftCardsList();
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    int getLeftCardsCount();
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    int getLeftCards(int index);

    // optional int32 tun = 8;
    /**
     * <code>optional int32 tun = 8;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    boolean hasTun();
    /**
     * <code>optional int32 tun = 8;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    int getTun();

    // optional int32 fan = 9;
    /**
     * <code>optional int32 fan = 9;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    boolean hasFan();
    /**
     * <code>optional int32 fan = 9;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    int getFan();

    // optional int32 huxi = 10;
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    boolean hasHuxi();
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    int getHuxi();

    // optional int32 huSeat = 11;
    /**
     * <code>optional int32 huSeat = 11;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    boolean hasHuSeat();
    /**
     * <code>optional int32 huSeat = 11;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    int getHuSeat();

    // optional int32 huCard = 12;
    /**
     * <code>optional int32 huCard = 12;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    boolean hasHuCard();
    /**
     * <code>optional int32 huCard = 12;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    int getHuCard();

    // optional int32 totalTun = 13;
    /**
     * <code>optional int32 totalTun = 13;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    boolean hasTotalTun();
    /**
     * <code>optional int32 totalTun = 13;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    int getTotalTun();

    // repeated int32 fanTypes = 14;
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getFanTypesList();
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    int getFanTypesCount();
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    int getFanTypes(int index);

    // optional int32 isRenew = 15;
    /**
     * <code>optional int32 isRenew = 15;</code>
     *
     * <pre>
     * 是否续费
     * </pre>
     */
    boolean hasIsRenew();
    /**
     * <code>optional int32 isRenew = 15;</code>
     *
     * <pre>
     * 是否续费
     * </pre>
     */
    int getIsRenew();

    // optional int32 renewCount = 16;
    /**
     * <code>optional int32 renewCount = 16;</code>
     *
     * <pre>
     * 续费次数
     * </pre>
     */
    boolean hasRenewCount();
    /**
     * <code>optional int32 renewCount = 16;</code>
     *
     * <pre>
     * 续费次数
     * </pre>
     */
    int getRenewCount();

    // optional string pointRecord = 17;
    /**
     * <code>optional string pointRecord = 17;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    boolean hasPointRecord();
    /**
     * <code>optional string pointRecord = 17;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    java.lang.String getPointRecord();
    /**
     * <code>optional string pointRecord = 17;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    com.google.protobuf.ByteString
        getPointRecordBytes();

    // repeated int32 startLeftCards = 18;
    /**
     * <code>repeated int32 startLeftCards = 18;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getStartLeftCardsList();
    /**
     * <code>repeated int32 startLeftCards = 18;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    int getStartLeftCardsCount();
    /**
     * <code>repeated int32 startLeftCards = 18;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    int getStartLeftCards(int index);

    // optional int32 groupLogId = 19;
    /**
     * <code>optional int32 groupLogId = 19;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    boolean hasGroupLogId();
    /**
     * <code>optional int32 groupLogId = 19;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    int getGroupLogId();

    // repeated int32 chouCards = 20;
    /**
     * <code>repeated int32 chouCards = 20;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getChouCardsList();
    /**
     * <code>repeated int32 chouCards = 20;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    int getChouCardsCount();
    /**
     * <code>repeated int32 chouCards = 20;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    int getChouCards(int index);

    // repeated int32 intParams = 21;
    /**
     * <code>repeated int32 intParams = 21;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    java.util.List<java.lang.Integer> getIntParamsList();
    /**
     * <code>repeated int32 intParams = 21;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    int getIntParamsCount();
    /**
     * <code>repeated int32 intParams = 21;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    int getIntParams(int index);

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
     *
     * <pre>
     *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList> 
        getAllCardsComboList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
     *
     * <pre>
     *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList getAllCardsCombo(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
     *
     * <pre>
     *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
     * </pre>
     */
    int getAllCardsComboCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
     *
     * <pre>
     *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardListOrBuilder> 
        getAllCardsComboOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
     *
     * <pre>
     *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardListOrBuilder getAllCardsComboOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingPhzInfoRes}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class ClosingPhzInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements ClosingPhzInfoResOrBuilder {
    // Use ClosingPhzInfoRes.newBuilder() to construct.
    private ClosingPhzInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosingPhzInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosingPhzInfoRes defaultInstance;
    public static ClosingPhzInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public ClosingPhzInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosingPhzInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes>();
                mutable_bitField0_ |= 0x00000001;
              }
              closingPlayers_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              isBreak_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              wanfa_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ext_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              ext_.add(input.readBytes());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                matchExt_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              matchExt_.add(input.readBytes());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                cards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>();
                mutable_bitField0_ |= 0x00000020;
              }
              cards_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                leftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              leftCards_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                leftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                leftCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000004;
              tun_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000008;
              fan_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000010;
              huxi_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000020;
              huSeat_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000040;
              huCard_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000080;
              totalTun_ = input.readInt32();
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                fanTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              fanTypes_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                fanTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                fanTypes_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 120: {
              bitField0_ |= 0x00000100;
              isRenew_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00000200;
              renewCount_ = input.readInt32();
              break;
            }
            case 138: {
              bitField0_ |= 0x00000400;
              pointRecord_ = input.readBytes();
              break;
            }
            case 144: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                startLeftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              startLeftCards_.add(input.readInt32());
              break;
            }
            case 146: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000) && input.getBytesUntilLimit() > 0) {
                startLeftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00020000;
              }
              while (input.getBytesUntilLimit() > 0) {
                startLeftCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 152: {
              bitField0_ |= 0x00000800;
              groupLogId_ = input.readInt32();
              break;
            }
            case 160: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                chouCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              chouCards_.add(input.readInt32());
              break;
            }
            case 162: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000) && input.getBytesUntilLimit() > 0) {
                chouCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              while (input.getBytesUntilLimit() > 0) {
                chouCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                intParams_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              intParams_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                intParams_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                intParams_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 178: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                allCardsCombo_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList>();
                mutable_bitField0_ |= 0x00200000;
              }
              allCardsCombo_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(ext_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          matchExt_ = new com.google.protobuf.UnmodifiableLazyStringList(matchExt_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          leftCards_ = java.util.Collections.unmodifiableList(leftCards_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          fanTypes_ = java.util.Collections.unmodifiableList(fanTypes_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          startLeftCards_ = java.util.Collections.unmodifiableList(startLeftCards_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          chouCards_ = java.util.Collections.unmodifiableList(chouCards_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          intParams_ = java.util.Collections.unmodifiableList(intParams_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          allCardsCombo_ = java.util.Collections.unmodifiableList(allCardsCombo_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingPhzInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingPhzInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosingPhzInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<ClosingPhzInfoRes>() {
      public ClosingPhzInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosingPhzInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosingPhzInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;
    public static final int CLOSINGPLAYERS_FIELD_NUMBER = 1;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes> closingPlayers_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes> getClosingPlayersList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public int getClosingPlayersCount() {
      return closingPlayers_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes getClosingPlayers(int index) {
      return closingPlayers_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index) {
      return closingPlayers_.get(index);
    }

    // optional int32 isBreak = 2;
    public static final int ISBREAK_FIELD_NUMBER = 2;
    private int isBreak_;
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    public boolean hasIsBreak() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    public int getIsBreak() {
      return isBreak_;
    }

    // optional int32 wanfa = 3;
    public static final int WANFA_FIELD_NUMBER = 3;
    private int wanfa_;
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    public boolean hasWanfa() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    public int getWanfa() {
      return wanfa_;
    }

    // repeated string ext = 4;
    public static final int EXT_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList ext_;
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.String>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public java.lang.String getExt(int index) {
      return ext_.get(index);
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtBytes(int index) {
      return ext_.getByteString(index);
    }

    // repeated string matchExt = 5;
    public static final int MATCHEXT_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList matchExt_;
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public java.util.List<java.lang.String>
        getMatchExtList() {
      return matchExt_;
    }
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public int getMatchExtCount() {
      return matchExt_.size();
    }
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public java.lang.String getMatchExt(int index) {
      return matchExt_.get(index);
    }
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMatchExtBytes(int index) {
      return matchExt_.getByteString(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;
    public static final int CARDS_FIELD_NUMBER = 6;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> cards_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getCardsOrBuilderList() {
      return cards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getCards(int index) {
      return cards_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getCardsOrBuilder(
        int index) {
      return cards_.get(index);
    }

    // repeated int32 leftCards = 7;
    public static final int LEFTCARDS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> leftCards_;
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLeftCardsList() {
      return leftCards_;
    }
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public int getLeftCardsCount() {
      return leftCards_.size();
    }
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public int getLeftCards(int index) {
      return leftCards_.get(index);
    }

    // optional int32 tun = 8;
    public static final int TUN_FIELD_NUMBER = 8;
    private int tun_;
    /**
     * <code>optional int32 tun = 8;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    public boolean hasTun() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 tun = 8;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    public int getTun() {
      return tun_;
    }

    // optional int32 fan = 9;
    public static final int FAN_FIELD_NUMBER = 9;
    private int fan_;
    /**
     * <code>optional int32 fan = 9;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    public boolean hasFan() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 fan = 9;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    public int getFan() {
      return fan_;
    }

    // optional int32 huxi = 10;
    public static final int HUXI_FIELD_NUMBER = 10;
    private int huxi_;
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    public boolean hasHuxi() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    public int getHuxi() {
      return huxi_;
    }

    // optional int32 huSeat = 11;
    public static final int HUSEAT_FIELD_NUMBER = 11;
    private int huSeat_;
    /**
     * <code>optional int32 huSeat = 11;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    public boolean hasHuSeat() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 huSeat = 11;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    public int getHuSeat() {
      return huSeat_;
    }

    // optional int32 huCard = 12;
    public static final int HUCARD_FIELD_NUMBER = 12;
    private int huCard_;
    /**
     * <code>optional int32 huCard = 12;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    public boolean hasHuCard() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 huCard = 12;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    public int getHuCard() {
      return huCard_;
    }

    // optional int32 totalTun = 13;
    public static final int TOTALTUN_FIELD_NUMBER = 13;
    private int totalTun_;
    /**
     * <code>optional int32 totalTun = 13;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    public boolean hasTotalTun() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 totalTun = 13;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    public int getTotalTun() {
      return totalTun_;
    }

    // repeated int32 fanTypes = 14;
    public static final int FANTYPES_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> fanTypes_;
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFanTypesList() {
      return fanTypes_;
    }
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    public int getFanTypesCount() {
      return fanTypes_.size();
    }
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    public int getFanTypes(int index) {
      return fanTypes_.get(index);
    }

    // optional int32 isRenew = 15;
    public static final int ISRENEW_FIELD_NUMBER = 15;
    private int isRenew_;
    /**
     * <code>optional int32 isRenew = 15;</code>
     *
     * <pre>
     * 是否续费
     * </pre>
     */
    public boolean hasIsRenew() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 isRenew = 15;</code>
     *
     * <pre>
     * 是否续费
     * </pre>
     */
    public int getIsRenew() {
      return isRenew_;
    }

    // optional int32 renewCount = 16;
    public static final int RENEWCOUNT_FIELD_NUMBER = 16;
    private int renewCount_;
    /**
     * <code>optional int32 renewCount = 16;</code>
     *
     * <pre>
     * 续费次数
     * </pre>
     */
    public boolean hasRenewCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 renewCount = 16;</code>
     *
     * <pre>
     * 续费次数
     * </pre>
     */
    public int getRenewCount() {
      return renewCount_;
    }

    // optional string pointRecord = 17;
    public static final int POINTRECORD_FIELD_NUMBER = 17;
    private java.lang.Object pointRecord_;
    /**
     * <code>optional string pointRecord = 17;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    public boolean hasPointRecord() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string pointRecord = 17;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    public java.lang.String getPointRecord() {
      java.lang.Object ref = pointRecord_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pointRecord_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pointRecord = 17;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPointRecordBytes() {
      java.lang.Object ref = pointRecord_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pointRecord_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 startLeftCards = 18;
    public static final int STARTLEFTCARDS_FIELD_NUMBER = 18;
    private java.util.List<java.lang.Integer> startLeftCards_;
    /**
     * <code>repeated int32 startLeftCards = 18;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getStartLeftCardsList() {
      return startLeftCards_;
    }
    /**
     * <code>repeated int32 startLeftCards = 18;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    public int getStartLeftCardsCount() {
      return startLeftCards_.size();
    }
    /**
     * <code>repeated int32 startLeftCards = 18;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    public int getStartLeftCards(int index) {
      return startLeftCards_.get(index);
    }

    // optional int32 groupLogId = 19;
    public static final int GROUPLOGID_FIELD_NUMBER = 19;
    private int groupLogId_;
    /**
     * <code>optional int32 groupLogId = 19;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    public boolean hasGroupLogId() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 groupLogId = 19;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    public int getGroupLogId() {
      return groupLogId_;
    }

    // repeated int32 chouCards = 20;
    public static final int CHOUCARDS_FIELD_NUMBER = 20;
    private java.util.List<java.lang.Integer> chouCards_;
    /**
     * <code>repeated int32 chouCards = 20;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getChouCardsList() {
      return chouCards_;
    }
    /**
     * <code>repeated int32 chouCards = 20;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    public int getChouCardsCount() {
      return chouCards_.size();
    }
    /**
     * <code>repeated int32 chouCards = 20;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    public int getChouCards(int index) {
      return chouCards_.get(index);
    }

    // repeated int32 intParams = 21;
    public static final int INTPARAMS_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> intParams_;
    /**
     * <code>repeated int32 intParams = 21;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIntParamsList() {
      return intParams_;
    }
    /**
     * <code>repeated int32 intParams = 21;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public int getIntParamsCount() {
      return intParams_.size();
    }
    /**
     * <code>repeated int32 intParams = 21;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public int getIntParams(int index) {
      return intParams_.get(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;
    public static final int ALLCARDSCOMBO_FIELD_NUMBER = 22;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList> allCardsCombo_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
     *
     * <pre>
     *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList> getAllCardsComboList() {
      return allCardsCombo_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
     *
     * <pre>
     *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardListOrBuilder> 
        getAllCardsComboOrBuilderList() {
      return allCardsCombo_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
     *
     * <pre>
     *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
     * </pre>
     */
    public int getAllCardsComboCount() {
      return allCardsCombo_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
     *
     * <pre>
     *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList getAllCardsCombo(int index) {
      return allCardsCombo_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
     *
     * <pre>
     *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardListOrBuilder getAllCardsComboOrBuilder(
        int index) {
      return allCardsCombo_.get(index);
    }

    private void initFields() {
      closingPlayers_ = java.util.Collections.emptyList();
      isBreak_ = 0;
      wanfa_ = 0;
      ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      cards_ = java.util.Collections.emptyList();
      leftCards_ = java.util.Collections.emptyList();
      tun_ = 0;
      fan_ = 0;
      huxi_ = 0;
      huSeat_ = 0;
      huCard_ = 0;
      totalTun_ = 0;
      fanTypes_ = java.util.Collections.emptyList();
      isRenew_ = 0;
      renewCount_ = 0;
      pointRecord_ = "";
      startLeftCards_ = java.util.Collections.emptyList();
      groupLogId_ = 0;
      chouCards_ = java.util.Collections.emptyList();
      intParams_ = java.util.Collections.emptyList();
      allCardsCombo_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getClosingPlayersCount(); i++) {
        if (!getClosingPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCardsCount(); i++) {
        if (!getCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getAllCardsComboCount(); i++) {
        if (!getAllCardsCombo(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < closingPlayers_.size(); i++) {
        output.writeMessage(1, closingPlayers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, wanfa_);
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeBytes(4, ext_.getByteString(i));
      }
      for (int i = 0; i < matchExt_.size(); i++) {
        output.writeBytes(5, matchExt_.getByteString(i));
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeMessage(6, cards_.get(i));
      }
      for (int i = 0; i < leftCards_.size(); i++) {
        output.writeInt32(7, leftCards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(8, tun_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(9, fan_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(10, huxi_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(11, huSeat_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(12, huCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(13, totalTun_);
      }
      for (int i = 0; i < fanTypes_.size(); i++) {
        output.writeInt32(14, fanTypes_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(15, isRenew_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(16, renewCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(17, getPointRecordBytes());
      }
      for (int i = 0; i < startLeftCards_.size(); i++) {
        output.writeInt32(18, startLeftCards_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(19, groupLogId_);
      }
      for (int i = 0; i < chouCards_.size(); i++) {
        output.writeInt32(20, chouCards_.get(i));
      }
      for (int i = 0; i < intParams_.size(); i++) {
        output.writeInt32(21, intParams_.get(i));
      }
      for (int i = 0; i < allCardsCombo_.size(); i++) {
        output.writeMessage(22, allCardsCombo_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < closingPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, closingPlayers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, wanfa_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ext_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getExtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < matchExt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(matchExt_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getMatchExtList().size();
      }
      for (int i = 0; i < cards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, cards_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < leftCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(leftCards_.get(i));
        }
        size += dataSize;
        size += 1 * getLeftCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, tun_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, fan_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, huxi_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, huSeat_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, huCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, totalTun_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fanTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(fanTypes_.get(i));
        }
        size += dataSize;
        size += 1 * getFanTypesList().size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, isRenew_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(16, renewCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(17, getPointRecordBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < startLeftCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(startLeftCards_.get(i));
        }
        size += dataSize;
        size += 2 * getStartLeftCardsList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, groupLogId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < chouCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(chouCards_.get(i));
        }
        size += dataSize;
        size += 2 * getChouCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intParams_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(intParams_.get(i));
        }
        size += dataSize;
        size += 2 * getIntParamsList().size();
      }
      for (int i = 0; i < allCardsCombo_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, allCardsCombo_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingPhzInfoRes}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingPhzInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingPhzInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClosingPlayersFieldBuilder();
          getCardsFieldBuilder();
          getAllCardsComboFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          closingPlayersBuilder_.clear();
        }
        isBreak_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        wanfa_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          cardsBuilder_.clear();
        }
        leftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        tun_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        fan_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        huxi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        huSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        huCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        totalTun_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        fanTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        isRenew_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        renewCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        pointRecord_ = "";
        bitField0_ = (bitField0_ & ~0x00010000);
        startLeftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        groupLogId_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        chouCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        intParams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        if (allCardsComboBuilder_ == null) {
          allCardsCombo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
        } else {
          allCardsComboBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingPhzInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes build() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes result = new com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (closingPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.closingPlayers_ = closingPlayers_;
        } else {
          result.closingPlayers_ = closingPlayersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isBreak_ = isBreak_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.wanfa_ = wanfa_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(
              ext_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.ext_ = ext_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          matchExt_ = new com.google.protobuf.UnmodifiableLazyStringList(
              matchExt_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.matchExt_ = matchExt_;
        if (cardsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            cards_ = java.util.Collections.unmodifiableList(cards_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.cards_ = cards_;
        } else {
          result.cards_ = cardsBuilder_.build();
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          leftCards_ = java.util.Collections.unmodifiableList(leftCards_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.leftCards_ = leftCards_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tun_ = tun_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fan_ = fan_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000010;
        }
        result.huxi_ = huxi_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000020;
        }
        result.huSeat_ = huSeat_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000040;
        }
        result.huCard_ = huCard_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.totalTun_ = totalTun_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          fanTypes_ = java.util.Collections.unmodifiableList(fanTypes_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.fanTypes_ = fanTypes_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.isRenew_ = isRenew_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.renewCount_ = renewCount_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.pointRecord_ = pointRecord_;
        if (((bitField0_ & 0x00020000) == 0x00020000)) {
          startLeftCards_ = java.util.Collections.unmodifiableList(startLeftCards_);
          bitField0_ = (bitField0_ & ~0x00020000);
        }
        result.startLeftCards_ = startLeftCards_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.groupLogId_ = groupLogId_;
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          chouCards_ = java.util.Collections.unmodifiableList(chouCards_);
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.chouCards_ = chouCards_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          intParams_ = java.util.Collections.unmodifiableList(intParams_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.intParams_ = intParams_;
        if (allCardsComboBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000)) {
            allCardsCombo_ = java.util.Collections.unmodifiableList(allCardsCombo_);
            bitField0_ = (bitField0_ & ~0x00200000);
          }
          result.allCardsCombo_ = allCardsCombo_;
        } else {
          result.allCardsCombo_ = allCardsComboBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes.getDefaultInstance()) return this;
        if (closingPlayersBuilder_ == null) {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayers_.isEmpty()) {
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureClosingPlayersIsMutable();
              closingPlayers_.addAll(other.closingPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayersBuilder_.isEmpty()) {
              closingPlayersBuilder_.dispose();
              closingPlayersBuilder_ = null;
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              closingPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getClosingPlayersFieldBuilder() : null;
            } else {
              closingPlayersBuilder_.addAllMessages(other.closingPlayers_);
            }
          }
        }
        if (other.hasIsBreak()) {
          setIsBreak(other.getIsBreak());
        }
        if (other.hasWanfa()) {
          setWanfa(other.getWanfa());
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        if (!other.matchExt_.isEmpty()) {
          if (matchExt_.isEmpty()) {
            matchExt_ = other.matchExt_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureMatchExtIsMutable();
            matchExt_.addAll(other.matchExt_);
          }
          onChanged();
        }
        if (cardsBuilder_ == null) {
          if (!other.cards_.isEmpty()) {
            if (cards_.isEmpty()) {
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureCardsIsMutable();
              cards_.addAll(other.cards_);
            }
            onChanged();
          }
        } else {
          if (!other.cards_.isEmpty()) {
            if (cardsBuilder_.isEmpty()) {
              cardsBuilder_.dispose();
              cardsBuilder_ = null;
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000020);
              cardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsFieldBuilder() : null;
            } else {
              cardsBuilder_.addAllMessages(other.cards_);
            }
          }
        }
        if (!other.leftCards_.isEmpty()) {
          if (leftCards_.isEmpty()) {
            leftCards_ = other.leftCards_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureLeftCardsIsMutable();
            leftCards_.addAll(other.leftCards_);
          }
          onChanged();
        }
        if (other.hasTun()) {
          setTun(other.getTun());
        }
        if (other.hasFan()) {
          setFan(other.getFan());
        }
        if (other.hasHuxi()) {
          setHuxi(other.getHuxi());
        }
        if (other.hasHuSeat()) {
          setHuSeat(other.getHuSeat());
        }
        if (other.hasHuCard()) {
          setHuCard(other.getHuCard());
        }
        if (other.hasTotalTun()) {
          setTotalTun(other.getTotalTun());
        }
        if (!other.fanTypes_.isEmpty()) {
          if (fanTypes_.isEmpty()) {
            fanTypes_ = other.fanTypes_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureFanTypesIsMutable();
            fanTypes_.addAll(other.fanTypes_);
          }
          onChanged();
        }
        if (other.hasIsRenew()) {
          setIsRenew(other.getIsRenew());
        }
        if (other.hasRenewCount()) {
          setRenewCount(other.getRenewCount());
        }
        if (other.hasPointRecord()) {
          bitField0_ |= 0x00010000;
          pointRecord_ = other.pointRecord_;
          onChanged();
        }
        if (!other.startLeftCards_.isEmpty()) {
          if (startLeftCards_.isEmpty()) {
            startLeftCards_ = other.startLeftCards_;
            bitField0_ = (bitField0_ & ~0x00020000);
          } else {
            ensureStartLeftCardsIsMutable();
            startLeftCards_.addAll(other.startLeftCards_);
          }
          onChanged();
        }
        if (other.hasGroupLogId()) {
          setGroupLogId(other.getGroupLogId());
        }
        if (!other.chouCards_.isEmpty()) {
          if (chouCards_.isEmpty()) {
            chouCards_ = other.chouCards_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureChouCardsIsMutable();
            chouCards_.addAll(other.chouCards_);
          }
          onChanged();
        }
        if (!other.intParams_.isEmpty()) {
          if (intParams_.isEmpty()) {
            intParams_ = other.intParams_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureIntParamsIsMutable();
            intParams_.addAll(other.intParams_);
          }
          onChanged();
        }
        if (allCardsComboBuilder_ == null) {
          if (!other.allCardsCombo_.isEmpty()) {
            if (allCardsCombo_.isEmpty()) {
              allCardsCombo_ = other.allCardsCombo_;
              bitField0_ = (bitField0_ & ~0x00200000);
            } else {
              ensureAllCardsComboIsMutable();
              allCardsCombo_.addAll(other.allCardsCombo_);
            }
            onChanged();
          }
        } else {
          if (!other.allCardsCombo_.isEmpty()) {
            if (allCardsComboBuilder_.isEmpty()) {
              allCardsComboBuilder_.dispose();
              allCardsComboBuilder_ = null;
              allCardsCombo_ = other.allCardsCombo_;
              bitField0_ = (bitField0_ & ~0x00200000);
              allCardsComboBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getAllCardsComboFieldBuilder() : null;
            } else {
              allCardsComboBuilder_.addAllMessages(other.allCardsCombo_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getClosingPlayersCount(); i++) {
          if (!getClosingPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCardsCount(); i++) {
          if (!getCards(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getAllCardsComboCount(); i++) {
          if (!getAllCardsCombo(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes> closingPlayers_ =
        java.util.Collections.emptyList();
      private void ensureClosingPlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes>(closingPlayers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoResOrBuilder> closingPlayersBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes> getClosingPlayersList() {
        if (closingPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        } else {
          return closingPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public int getClosingPlayersCount() {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.size();
        } else {
          return closingPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes getClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);
        } else {
          return closingPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addAllClosingPlayers(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes> values) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          super.addAll(values, closingPlayers_);
          onChanged();
        } else {
          closingPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder clearClosingPlayers() {
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          closingPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder removeClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.remove(index);
          onChanged();
        } else {
          closingPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder getClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
          int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);  } else {
          return closingPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoResOrBuilder> 
           getClosingPlayersOrBuilderList() {
        if (closingPlayersBuilder_ != null) {
          return closingPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder addClosingPlayersBuilder() {
        return getClosingPlayersFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder addClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder> 
           getClosingPlayersBuilderList() {
        return getClosingPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoResOrBuilder> 
          getClosingPlayersFieldBuilder() {
        if (closingPlayersBuilder_ == null) {
          closingPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoResOrBuilder>(
                  closingPlayers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          closingPlayers_ = null;
        }
        return closingPlayersBuilder_;
      }

      // optional int32 isBreak = 2;
      private int isBreak_ ;
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public boolean hasIsBreak() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public int getIsBreak() {
        return isBreak_;
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public Builder setIsBreak(int value) {
        bitField0_ |= 0x00000002;
        isBreak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public Builder clearIsBreak() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isBreak_ = 0;
        onChanged();
        return this;
      }

      // optional int32 wanfa = 3;
      private int wanfa_ ;
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public boolean hasWanfa() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public int getWanfa() {
        return wanfa_;
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public Builder setWanfa(int value) {
        bitField0_ |= 0x00000004;
        wanfa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public Builder clearWanfa() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wanfa_ = 0;
        onChanged();
        return this;
      }

      // repeated string ext = 4;
      private com.google.protobuf.LazyStringList ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.LazyStringArrayList(ext_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.String>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public java.lang.String getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtBytes(int index) {
        return ext_.getByteString(index);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearExt() {
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }

      // repeated string matchExt = 5;
      private com.google.protobuf.LazyStringList matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMatchExtIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          matchExt_ = new com.google.protobuf.LazyStringArrayList(matchExt_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public java.util.List<java.lang.String>
          getMatchExtList() {
        return java.util.Collections.unmodifiableList(matchExt_);
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public int getMatchExtCount() {
        return matchExt_.size();
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public java.lang.String getMatchExt(int index) {
        return matchExt_.get(index);
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMatchExtBytes(int index) {
        return matchExt_.getByteString(index);
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder setMatchExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addMatchExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addAllMatchExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureMatchExtIsMutable();
        super.addAll(values, matchExt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder clearMatchExt() {
        matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addMatchExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> cards_ =
        java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          cards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>(cards_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> cardsBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getCardsList() {
        if (cardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cards_);
        } else {
          return cardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public int getCardsCount() {
        if (cardsBuilder_ == null) {
          return cards_.size();
        } else {
          return cardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getCards(int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);
        } else {
          return cardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.set(index, value);
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addCards(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(index, value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addCards(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> values) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          super.addAll(values, cards_);
          onChanged();
        } else {
          cardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder clearCards() {
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          cardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder removeCards(int index) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.remove(index);
          onChanged();
        } else {
          cardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder getCardsBuilder(
          int index) {
        return getCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getCardsOrBuilder(
          int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);  } else {
          return cardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
           getCardsOrBuilderList() {
        if (cardsBuilder_ != null) {
          return cardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cards_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addCardsBuilder() {
        return getCardsFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addCardsBuilder(
          int index) {
        return getCardsFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder> 
           getCardsBuilderList() {
        return getCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
          getCardsFieldBuilder() {
        if (cardsBuilder_ == null) {
          cardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder>(
                  cards_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          cards_ = null;
        }
        return cardsBuilder_;
      }

      // repeated int32 leftCards = 7;
      private java.util.List<java.lang.Integer> leftCards_ = java.util.Collections.emptyList();
      private void ensureLeftCardsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          leftCards_ = new java.util.ArrayList<java.lang.Integer>(leftCards_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLeftCardsList() {
        return java.util.Collections.unmodifiableList(leftCards_);
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public int getLeftCardsCount() {
        return leftCards_.size();
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public int getLeftCards(int index) {
        return leftCards_.get(index);
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder setLeftCards(
          int index, int value) {
        ensureLeftCardsIsMutable();
        leftCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder addLeftCards(int value) {
        ensureLeftCardsIsMutable();
        leftCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder addAllLeftCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLeftCardsIsMutable();
        super.addAll(values, leftCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder clearLeftCards() {
        leftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 tun = 8;
      private int tun_ ;
      /**
       * <code>optional int32 tun = 8;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public boolean hasTun() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 tun = 8;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public int getTun() {
        return tun_;
      }
      /**
       * <code>optional int32 tun = 8;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public Builder setTun(int value) {
        bitField0_ |= 0x00000080;
        tun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tun = 8;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public Builder clearTun() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tun_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fan = 9;
      private int fan_ ;
      /**
       * <code>optional int32 fan = 9;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public boolean hasFan() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 fan = 9;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public int getFan() {
        return fan_;
      }
      /**
       * <code>optional int32 fan = 9;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public Builder setFan(int value) {
        bitField0_ |= 0x00000100;
        fan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fan = 9;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public Builder clearFan() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fan_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huxi = 10;
      private int huxi_ ;
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public boolean hasHuxi() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public int getHuxi() {
        return huxi_;
      }
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public Builder setHuxi(int value) {
        bitField0_ |= 0x00000200;
        huxi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public Builder clearHuxi() {
        bitField0_ = (bitField0_ & ~0x00000200);
        huxi_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huSeat = 11;
      private int huSeat_ ;
      /**
       * <code>optional int32 huSeat = 11;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public boolean hasHuSeat() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 huSeat = 11;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public int getHuSeat() {
        return huSeat_;
      }
      /**
       * <code>optional int32 huSeat = 11;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public Builder setHuSeat(int value) {
        bitField0_ |= 0x00000400;
        huSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huSeat = 11;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public Builder clearHuSeat() {
        bitField0_ = (bitField0_ & ~0x00000400);
        huSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huCard = 12;
      private int huCard_ ;
      /**
       * <code>optional int32 huCard = 12;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public boolean hasHuCard() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 huCard = 12;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public int getHuCard() {
        return huCard_;
      }
      /**
       * <code>optional int32 huCard = 12;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public Builder setHuCard(int value) {
        bitField0_ |= 0x00000800;
        huCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huCard = 12;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public Builder clearHuCard() {
        bitField0_ = (bitField0_ & ~0x00000800);
        huCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalTun = 13;
      private int totalTun_ ;
      /**
       * <code>optional int32 totalTun = 13;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public boolean hasTotalTun() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 totalTun = 13;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public int getTotalTun() {
        return totalTun_;
      }
      /**
       * <code>optional int32 totalTun = 13;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public Builder setTotalTun(int value) {
        bitField0_ |= 0x00001000;
        totalTun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalTun = 13;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public Builder clearTotalTun() {
        bitField0_ = (bitField0_ & ~0x00001000);
        totalTun_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 fanTypes = 14;
      private java.util.List<java.lang.Integer> fanTypes_ = java.util.Collections.emptyList();
      private void ensureFanTypesIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          fanTypes_ = new java.util.ArrayList<java.lang.Integer>(fanTypes_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFanTypesList() {
        return java.util.Collections.unmodifiableList(fanTypes_);
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public int getFanTypesCount() {
        return fanTypes_.size();
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public int getFanTypes(int index) {
        return fanTypes_.get(index);
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder setFanTypes(
          int index, int value) {
        ensureFanTypesIsMutable();
        fanTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder addFanTypes(int value) {
        ensureFanTypesIsMutable();
        fanTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder addAllFanTypes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFanTypesIsMutable();
        super.addAll(values, fanTypes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder clearFanTypes() {
        fanTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // optional int32 isRenew = 15;
      private int isRenew_ ;
      /**
       * <code>optional int32 isRenew = 15;</code>
       *
       * <pre>
       * 是否续费
       * </pre>
       */
      public boolean hasIsRenew() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 isRenew = 15;</code>
       *
       * <pre>
       * 是否续费
       * </pre>
       */
      public int getIsRenew() {
        return isRenew_;
      }
      /**
       * <code>optional int32 isRenew = 15;</code>
       *
       * <pre>
       * 是否续费
       * </pre>
       */
      public Builder setIsRenew(int value) {
        bitField0_ |= 0x00004000;
        isRenew_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isRenew = 15;</code>
       *
       * <pre>
       * 是否续费
       * </pre>
       */
      public Builder clearIsRenew() {
        bitField0_ = (bitField0_ & ~0x00004000);
        isRenew_ = 0;
        onChanged();
        return this;
      }

      // optional int32 renewCount = 16;
      private int renewCount_ ;
      /**
       * <code>optional int32 renewCount = 16;</code>
       *
       * <pre>
       * 续费次数
       * </pre>
       */
      public boolean hasRenewCount() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional int32 renewCount = 16;</code>
       *
       * <pre>
       * 续费次数
       * </pre>
       */
      public int getRenewCount() {
        return renewCount_;
      }
      /**
       * <code>optional int32 renewCount = 16;</code>
       *
       * <pre>
       * 续费次数
       * </pre>
       */
      public Builder setRenewCount(int value) {
        bitField0_ |= 0x00008000;
        renewCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 renewCount = 16;</code>
       *
       * <pre>
       * 续费次数
       * </pre>
       */
      public Builder clearRenewCount() {
        bitField0_ = (bitField0_ & ~0x00008000);
        renewCount_ = 0;
        onChanged();
        return this;
      }

      // optional string pointRecord = 17;
      private java.lang.Object pointRecord_ = "";
      /**
       * <code>optional string pointRecord = 17;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public boolean hasPointRecord() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional string pointRecord = 17;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public java.lang.String getPointRecord() {
        java.lang.Object ref = pointRecord_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pointRecord_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pointRecord = 17;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPointRecordBytes() {
        java.lang.Object ref = pointRecord_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pointRecord_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pointRecord = 17;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public Builder setPointRecord(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        pointRecord_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pointRecord = 17;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public Builder clearPointRecord() {
        bitField0_ = (bitField0_ & ~0x00010000);
        pointRecord_ = getDefaultInstance().getPointRecord();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pointRecord = 17;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public Builder setPointRecordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00010000;
        pointRecord_ = value;
        onChanged();
        return this;
      }

      // repeated int32 startLeftCards = 18;
      private java.util.List<java.lang.Integer> startLeftCards_ = java.util.Collections.emptyList();
      private void ensureStartLeftCardsIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          startLeftCards_ = new java.util.ArrayList<java.lang.Integer>(startLeftCards_);
          bitField0_ |= 0x00020000;
         }
      }
      /**
       * <code>repeated int32 startLeftCards = 18;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getStartLeftCardsList() {
        return java.util.Collections.unmodifiableList(startLeftCards_);
      }
      /**
       * <code>repeated int32 startLeftCards = 18;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public int getStartLeftCardsCount() {
        return startLeftCards_.size();
      }
      /**
       * <code>repeated int32 startLeftCards = 18;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public int getStartLeftCards(int index) {
        return startLeftCards_.get(index);
      }
      /**
       * <code>repeated int32 startLeftCards = 18;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public Builder setStartLeftCards(
          int index, int value) {
        ensureStartLeftCardsIsMutable();
        startLeftCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 startLeftCards = 18;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public Builder addStartLeftCards(int value) {
        ensureStartLeftCardsIsMutable();
        startLeftCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 startLeftCards = 18;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public Builder addAllStartLeftCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStartLeftCardsIsMutable();
        super.addAll(values, startLeftCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 startLeftCards = 18;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public Builder clearStartLeftCards() {
        startLeftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00020000);
        onChanged();
        return this;
      }

      // optional int32 groupLogId = 19;
      private int groupLogId_ ;
      /**
       * <code>optional int32 groupLogId = 19;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public boolean hasGroupLogId() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 groupLogId = 19;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public int getGroupLogId() {
        return groupLogId_;
      }
      /**
       * <code>optional int32 groupLogId = 19;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public Builder setGroupLogId(int value) {
        bitField0_ |= 0x00040000;
        groupLogId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 groupLogId = 19;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public Builder clearGroupLogId() {
        bitField0_ = (bitField0_ & ~0x00040000);
        groupLogId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 chouCards = 20;
      private java.util.List<java.lang.Integer> chouCards_ = java.util.Collections.emptyList();
      private void ensureChouCardsIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          chouCards_ = new java.util.ArrayList<java.lang.Integer>(chouCards_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated int32 chouCards = 20;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getChouCardsList() {
        return java.util.Collections.unmodifiableList(chouCards_);
      }
      /**
       * <code>repeated int32 chouCards = 20;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public int getChouCardsCount() {
        return chouCards_.size();
      }
      /**
       * <code>repeated int32 chouCards = 20;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public int getChouCards(int index) {
        return chouCards_.get(index);
      }
      /**
       * <code>repeated int32 chouCards = 20;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder setChouCards(
          int index, int value) {
        ensureChouCardsIsMutable();
        chouCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chouCards = 20;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder addChouCards(int value) {
        ensureChouCardsIsMutable();
        chouCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chouCards = 20;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder addAllChouCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChouCardsIsMutable();
        super.addAll(values, chouCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chouCards = 20;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder clearChouCards() {
        chouCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }

      // repeated int32 intParams = 21;
      private java.util.List<java.lang.Integer> intParams_ = java.util.Collections.emptyList();
      private void ensureIntParamsIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          intParams_ = new java.util.ArrayList<java.lang.Integer>(intParams_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 intParams = 21;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIntParamsList() {
        return java.util.Collections.unmodifiableList(intParams_);
      }
      /**
       * <code>repeated int32 intParams = 21;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public int getIntParamsCount() {
        return intParams_.size();
      }
      /**
       * <code>repeated int32 intParams = 21;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public int getIntParams(int index) {
        return intParams_.get(index);
      }
      /**
       * <code>repeated int32 intParams = 21;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder setIntParams(
          int index, int value) {
        ensureIntParamsIsMutable();
        intParams_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 21;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder addIntParams(int value) {
        ensureIntParamsIsMutable();
        intParams_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 21;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder addAllIntParams(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntParamsIsMutable();
        super.addAll(values, intParams_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 21;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder clearIntParams() {
        intParams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList> allCardsCombo_ =
        java.util.Collections.emptyList();
      private void ensureAllCardsComboIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          allCardsCombo_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList>(allCardsCombo_);
          bitField0_ |= 0x00200000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardListOrBuilder> allCardsComboBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList> getAllCardsComboList() {
        if (allCardsComboBuilder_ == null) {
          return java.util.Collections.unmodifiableList(allCardsCombo_);
        } else {
          return allCardsComboBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public int getAllCardsComboCount() {
        if (allCardsComboBuilder_ == null) {
          return allCardsCombo_.size();
        } else {
          return allCardsComboBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList getAllCardsCombo(int index) {
        if (allCardsComboBuilder_ == null) {
          return allCardsCombo_.get(index);
        } else {
          return allCardsComboBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public Builder setAllCardsCombo(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList value) {
        if (allCardsComboBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllCardsComboIsMutable();
          allCardsCombo_.set(index, value);
          onChanged();
        } else {
          allCardsComboBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public Builder setAllCardsCombo(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder builderForValue) {
        if (allCardsComboBuilder_ == null) {
          ensureAllCardsComboIsMutable();
          allCardsCombo_.set(index, builderForValue.build());
          onChanged();
        } else {
          allCardsComboBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public Builder addAllCardsCombo(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList value) {
        if (allCardsComboBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllCardsComboIsMutable();
          allCardsCombo_.add(value);
          onChanged();
        } else {
          allCardsComboBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public Builder addAllCardsCombo(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList value) {
        if (allCardsComboBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureAllCardsComboIsMutable();
          allCardsCombo_.add(index, value);
          onChanged();
        } else {
          allCardsComboBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public Builder addAllCardsCombo(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder builderForValue) {
        if (allCardsComboBuilder_ == null) {
          ensureAllCardsComboIsMutable();
          allCardsCombo_.add(builderForValue.build());
          onChanged();
        } else {
          allCardsComboBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public Builder addAllCardsCombo(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder builderForValue) {
        if (allCardsComboBuilder_ == null) {
          ensureAllCardsComboIsMutable();
          allCardsCombo_.add(index, builderForValue.build());
          onChanged();
        } else {
          allCardsComboBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public Builder addAllAllCardsCombo(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList> values) {
        if (allCardsComboBuilder_ == null) {
          ensureAllCardsComboIsMutable();
          super.addAll(values, allCardsCombo_);
          onChanged();
        } else {
          allCardsComboBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public Builder clearAllCardsCombo() {
        if (allCardsComboBuilder_ == null) {
          allCardsCombo_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
          onChanged();
        } else {
          allCardsComboBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public Builder removeAllCardsCombo(int index) {
        if (allCardsComboBuilder_ == null) {
          ensureAllCardsComboIsMutable();
          allCardsCombo_.remove(index);
          onChanged();
        } else {
          allCardsComboBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder getAllCardsComboBuilder(
          int index) {
        return getAllCardsComboFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardListOrBuilder getAllCardsComboOrBuilder(
          int index) {
        if (allCardsComboBuilder_ == null) {
          return allCardsCombo_.get(index);  } else {
          return allCardsComboBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardListOrBuilder> 
           getAllCardsComboOrBuilderList() {
        if (allCardsComboBuilder_ != null) {
          return allCardsComboBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(allCardsCombo_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder addAllCardsComboBuilder() {
        return getAllCardsComboFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder addAllCardsComboBuilder(
          int index) {
        return getAllCardsComboFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCardList allCardsCombo = 22;</code>
       *
       * <pre>
       *玩家所有牌型的组合,与赢家展示的牌型一致,这里的顺序与closingPlayer保持一致
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder> 
           getAllCardsComboBuilderList() {
        return getAllCardsComboFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardListOrBuilder> 
          getAllCardsComboFieldBuilder() {
        if (allCardsComboBuilder_ == null) {
          allCardsComboBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardList.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardListOrBuilder>(
                  allCardsCombo_,
                  ((bitField0_ & 0x00200000) == 0x00200000),
                  getParentForChildren(),
                  isClean());
          allCardsCombo_ = null;
        }
        return allCardsComboBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.ClosingPhzInfoRes)
    }

    static {
      defaultInstance = new ClosingPhzInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.ClosingPhzInfoRes)
  }

  public interface ClosingPhzPlayerInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string userId = 1;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 point = 3;
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    boolean hasPoint();
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    int getPoint();

    // optional int32 totalPoint = 4;
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    boolean hasTotalPoint();
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    int getTotalPoint();

    // optional int32 winCount = 5;
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    boolean hasWinCount();
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    int getWinCount();

    // optional int32 lostCount = 6;
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    boolean hasLostCount();
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    int getLostCount();

    // optional int32 maxPoint = 7;
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    boolean hasMaxPoint();
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    int getMaxPoint();

    // required int32 seat = 8;
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    int getSeat();

    // optional int32 sex = 9;
    /**
     * <code>optional int32 sex = 9;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 9;</code>
     */
    int getSex();

    // optional string icon = 10;
    /**
     * <code>optional string icon = 10;</code>
     */
    boolean hasIcon();
    /**
     * <code>optional string icon = 10;</code>
     */
    java.lang.String getIcon();
    /**
     * <code>optional string icon = 10;</code>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    // optional int32 bopiPoint = 11;
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    boolean hasBopiPoint();
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    int getBopiPoint();

    // repeated int32 cards = 12;
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    int getCards(int index);

    // optional int32 isShuXing = 13;
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    boolean hasIsShuXing();
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    int getIsShuXing();

    // optional int32 renewStatus = 14;
    /**
     * <code>optional int32 renewStatus = 14;</code>
     *
     * <pre>
     *续费状态
     * </pre>
     */
    boolean hasRenewStatus();
    /**
     * <code>optional int32 renewStatus = 14;</code>
     *
     * <pre>
     *续费状态
     * </pre>
     */
    int getRenewStatus();

    // repeated int32 firstCards = 15;
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getFirstCardsList();
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    int getFirstCardsCount();
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    int getFirstCards(int index);

    // repeated string strExt = 17;
    /**
     * <code>repeated string strExt = 17;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.String>
    getStrExtList();
    /**
     * <code>repeated string strExt = 17;</code>
     *
     * <pre>
     * </pre>
     */
    int getStrExtCount();
    /**
     * <code>repeated string strExt = 17;</code>
     *
     * <pre>
     * </pre>
     */
    java.lang.String getStrExt(int index);
    /**
     * <code>repeated string strExt = 17;</code>
     *
     * <pre>
     * </pre>
     */
    com.google.protobuf.ByteString
        getStrExtBytes(int index);

    // optional int64 winLoseCredit = 18;
    /**
     * <code>optional int64 winLoseCredit = 18;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    boolean hasWinLoseCredit();
    /**
     * <code>optional int64 winLoseCredit = 18;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    long getWinLoseCredit();

    // optional int64 commissionCredit = 19;
    /**
     * <code>optional int64 commissionCredit = 19;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    boolean hasCommissionCredit();
    /**
     * <code>optional int64 commissionCredit = 19;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    long getCommissionCredit();

    // optional int32 allHuxi = 20;
    /**
     * <code>optional int32 allHuxi = 20;</code>
     *
     * <pre>
     *玩家总胡息
     * </pre>
     */
    boolean hasAllHuxi();
    /**
     * <code>optional int32 allHuxi = 20;</code>
     *
     * <pre>
     *玩家总胡息
     * </pre>
     */
    int getAllHuxi();

    // optional int32 finalPoint = 21;
    /**
     * <code>optional int32 finalPoint = 21;</code>
     *
     * <pre>
     *暂时未用到
     * </pre>
     */
    boolean hasFinalPoint();
    /**
     * <code>optional int32 finalPoint = 21;</code>
     *
     * <pre>
     *暂时未用到
     * </pre>
     */
    int getFinalPoint();

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
     *
     * <pre>
     *碰吃煨提了的牌
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> 
        getMoldCardsList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
     *
     * <pre>
     *碰吃煨提了的牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMoldCards(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
     *
     * <pre>
     *碰吃煨提了的牌
     * </pre>
     */
    int getMoldCardsCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
     *
     * <pre>
     *碰吃煨提了的牌
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMoldCardsOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
     *
     * <pre>
     *碰吃煨提了的牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMoldCardsOrBuilder(
        int index);

    // optional int32 goldFlag = 23;
    /**
     * <code>optional int32 goldFlag = 23;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    boolean hasGoldFlag();
    /**
     * <code>optional int32 goldFlag = 23;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    int getGoldFlag();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes}
   *
   * <pre>
   *单个玩家结算
   * </pre>
   */
  public static final class ClosingPhzPlayerInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements ClosingPhzPlayerInfoResOrBuilder {
    // Use ClosingPhzPlayerInfoRes.newBuilder() to construct.
    private ClosingPhzPlayerInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosingPhzPlayerInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosingPhzPlayerInfoRes defaultInstance;
    public static ClosingPhzPlayerInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public ClosingPhzPlayerInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosingPhzPlayerInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              point_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              totalPoint_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              winCount_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              lostCount_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              maxPoint_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              seat_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              sex_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              icon_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              bopiPoint_ = input.readInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              isShuXing_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              renewStatus_ = input.readInt32();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                firstCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              firstCards_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                firstCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                firstCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                strExt_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00008000;
              }
              strExt_.add(input.readBytes());
              break;
            }
            case 144: {
              bitField0_ |= 0x00002000;
              winLoseCredit_ = input.readInt64();
              break;
            }
            case 152: {
              bitField0_ |= 0x00004000;
              commissionCredit_ = input.readInt64();
              break;
            }
            case 160: {
              bitField0_ |= 0x00008000;
              allHuxi_ = input.readInt32();
              break;
            }
            case 168: {
              bitField0_ |= 0x00010000;
              finalPoint_ = input.readInt32();
              break;
            }
            case 178: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                moldCards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>();
                mutable_bitField0_ |= 0x00100000;
              }
              moldCards_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.PARSER, extensionRegistry));
              break;
            }
            case 184: {
              bitField0_ |= 0x00020000;
              goldFlag_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          firstCards_ = java.util.Collections.unmodifiableList(firstCards_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          strExt_ = new com.google.protobuf.UnmodifiableLazyStringList(strExt_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          moldCards_ = java.util.Collections.unmodifiableList(moldCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingPhzPlayerInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingPhzPlayerInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosingPhzPlayerInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<ClosingPhzPlayerInfoRes>() {
      public ClosingPhzPlayerInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosingPhzPlayerInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosingPhzPlayerInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 point = 3;
    public static final int POINT_FIELD_NUMBER = 3;
    private int point_;
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public boolean hasPoint() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public int getPoint() {
      return point_;
    }

    // optional int32 totalPoint = 4;
    public static final int TOTALPOINT_FIELD_NUMBER = 4;
    private int totalPoint_;
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public boolean hasTotalPoint() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public int getTotalPoint() {
      return totalPoint_;
    }

    // optional int32 winCount = 5;
    public static final int WINCOUNT_FIELD_NUMBER = 5;
    private int winCount_;
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    public boolean hasWinCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    public int getWinCount() {
      return winCount_;
    }

    // optional int32 lostCount = 6;
    public static final int LOSTCOUNT_FIELD_NUMBER = 6;
    private int lostCount_;
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    public boolean hasLostCount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    public int getLostCount() {
      return lostCount_;
    }

    // optional int32 maxPoint = 7;
    public static final int MAXPOINT_FIELD_NUMBER = 7;
    private int maxPoint_;
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    public boolean hasMaxPoint() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    public int getMaxPoint() {
      return maxPoint_;
    }

    // required int32 seat = 8;
    public static final int SEAT_FIELD_NUMBER = 8;
    private int seat_;
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // optional int32 sex = 9;
    public static final int SEX_FIELD_NUMBER = 9;
    private int sex_;
    /**
     * <code>optional int32 sex = 9;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 sex = 9;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional string icon = 10;
    public static final int ICON_FIELD_NUMBER = 10;
    private java.lang.Object icon_;
    /**
     * <code>optional string icon = 10;</code>
     */
    public boolean hasIcon() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string icon = 10;</code>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          icon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string icon = 10;</code>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 bopiPoint = 11;
    public static final int BOPIPOINT_FIELD_NUMBER = 11;
    private int bopiPoint_;
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    public boolean hasBopiPoint() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    public int getBopiPoint() {
      return bopiPoint_;
    }

    // repeated int32 cards = 12;
    public static final int CARDS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 isShuXing = 13;
    public static final int ISSHUXING_FIELD_NUMBER = 13;
    private int isShuXing_;
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    public boolean hasIsShuXing() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    public int getIsShuXing() {
      return isShuXing_;
    }

    // optional int32 renewStatus = 14;
    public static final int RENEWSTATUS_FIELD_NUMBER = 14;
    private int renewStatus_;
    /**
     * <code>optional int32 renewStatus = 14;</code>
     *
     * <pre>
     *续费状态
     * </pre>
     */
    public boolean hasRenewStatus() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 renewStatus = 14;</code>
     *
     * <pre>
     *续费状态
     * </pre>
     */
    public int getRenewStatus() {
      return renewStatus_;
    }

    // repeated int32 firstCards = 15;
    public static final int FIRSTCARDS_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> firstCards_;
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFirstCardsList() {
      return firstCards_;
    }
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    public int getFirstCardsCount() {
      return firstCards_.size();
    }
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    public int getFirstCards(int index) {
      return firstCards_.get(index);
    }

    // repeated string strExt = 17;
    public static final int STREXT_FIELD_NUMBER = 17;
    private com.google.protobuf.LazyStringList strExt_;
    /**
     * <code>repeated string strExt = 17;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.String>
        getStrExtList() {
      return strExt_;
    }
    /**
     * <code>repeated string strExt = 17;</code>
     *
     * <pre>
     * </pre>
     */
    public int getStrExtCount() {
      return strExt_.size();
    }
    /**
     * <code>repeated string strExt = 17;</code>
     *
     * <pre>
     * </pre>
     */
    public java.lang.String getStrExt(int index) {
      return strExt_.get(index);
    }
    /**
     * <code>repeated string strExt = 17;</code>
     *
     * <pre>
     * </pre>
     */
    public com.google.protobuf.ByteString
        getStrExtBytes(int index) {
      return strExt_.getByteString(index);
    }

    // optional int64 winLoseCredit = 18;
    public static final int WINLOSECREDIT_FIELD_NUMBER = 18;
    private long winLoseCredit_;
    /**
     * <code>optional int64 winLoseCredit = 18;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    public boolean hasWinLoseCredit() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int64 winLoseCredit = 18;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    public long getWinLoseCredit() {
      return winLoseCredit_;
    }

    // optional int64 commissionCredit = 19;
    public static final int COMMISSIONCREDIT_FIELD_NUMBER = 19;
    private long commissionCredit_;
    /**
     * <code>optional int64 commissionCredit = 19;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    public boolean hasCommissionCredit() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int64 commissionCredit = 19;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    public long getCommissionCredit() {
      return commissionCredit_;
    }

    // optional int32 allHuxi = 20;
    public static final int ALLHUXI_FIELD_NUMBER = 20;
    private int allHuxi_;
    /**
     * <code>optional int32 allHuxi = 20;</code>
     *
     * <pre>
     *玩家总胡息
     * </pre>
     */
    public boolean hasAllHuxi() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 allHuxi = 20;</code>
     *
     * <pre>
     *玩家总胡息
     * </pre>
     */
    public int getAllHuxi() {
      return allHuxi_;
    }

    // optional int32 finalPoint = 21;
    public static final int FINALPOINT_FIELD_NUMBER = 21;
    private int finalPoint_;
    /**
     * <code>optional int32 finalPoint = 21;</code>
     *
     * <pre>
     *暂时未用到
     * </pre>
     */
    public boolean hasFinalPoint() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 finalPoint = 21;</code>
     *
     * <pre>
     *暂时未用到
     * </pre>
     */
    public int getFinalPoint() {
      return finalPoint_;
    }

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;
    public static final int MOLDCARDS_FIELD_NUMBER = 22;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> moldCards_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
     *
     * <pre>
     *碰吃煨提了的牌
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMoldCardsList() {
      return moldCards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
     *
     * <pre>
     *碰吃煨提了的牌
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMoldCardsOrBuilderList() {
      return moldCards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
     *
     * <pre>
     *碰吃煨提了的牌
     * </pre>
     */
    public int getMoldCardsCount() {
      return moldCards_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
     *
     * <pre>
     *碰吃煨提了的牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMoldCards(int index) {
      return moldCards_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
     *
     * <pre>
     *碰吃煨提了的牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMoldCardsOrBuilder(
        int index) {
      return moldCards_.get(index);
    }

    // optional int32 goldFlag = 23;
    public static final int GOLDFLAG_FIELD_NUMBER = 23;
    private int goldFlag_;
    /**
     * <code>optional int32 goldFlag = 23;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    public boolean hasGoldFlag() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 goldFlag = 23;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    public int getGoldFlag() {
      return goldFlag_;
    }

    private void initFields() {
      userId_ = "";
      name_ = "";
      point_ = 0;
      totalPoint_ = 0;
      winCount_ = 0;
      lostCount_ = 0;
      maxPoint_ = 0;
      seat_ = 0;
      sex_ = 0;
      icon_ = "";
      bopiPoint_ = 0;
      cards_ = java.util.Collections.emptyList();
      isShuXing_ = 0;
      renewStatus_ = 0;
      firstCards_ = java.util.Collections.emptyList();
      strExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      winLoseCredit_ = 0L;
      commissionCredit_ = 0L;
      allHuxi_ = 0;
      finalPoint_ = 0;
      moldCards_ = java.util.Collections.emptyList();
      goldFlag_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMoldCardsCount(); i++) {
        if (!getMoldCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, point_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, totalPoint_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, winCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, lostCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, maxPoint_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, seat_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, sex_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIconBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, bopiPoint_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(12, cards_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, isShuXing_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(14, renewStatus_);
      }
      for (int i = 0; i < firstCards_.size(); i++) {
        output.writeInt32(15, firstCards_.get(i));
      }
      for (int i = 0; i < strExt_.size(); i++) {
        output.writeBytes(17, strExt_.getByteString(i));
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt64(18, winLoseCredit_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt64(19, commissionCredit_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(20, allHuxi_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(21, finalPoint_);
      }
      for (int i = 0; i < moldCards_.size(); i++) {
        output.writeMessage(22, moldCards_.get(i));
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(23, goldFlag_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, point_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, totalPoint_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, winCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, lostCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, maxPoint_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, seat_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, sex_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIconBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, bopiPoint_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, isShuXing_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, renewStatus_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < firstCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(firstCards_.get(i));
        }
        size += dataSize;
        size += 1 * getFirstCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < strExt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(strExt_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getStrExtList().size();
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(18, winLoseCredit_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(19, commissionCredit_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(20, allHuxi_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, finalPoint_);
      }
      for (int i = 0; i < moldCards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(22, moldCards_.get(i));
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, goldFlag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes}
     *
     * <pre>
     *单个玩家结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingPhzPlayerInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingPhzPlayerInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMoldCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        point_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        totalPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        winCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        lostCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        icon_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        bopiPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        isShuXing_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        renewStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        firstCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        strExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00008000);
        winLoseCredit_ = 0L;
        bitField0_ = (bitField0_ & ~0x00010000);
        commissionCredit_ = 0L;
        bitField0_ = (bitField0_ & ~0x00020000);
        allHuxi_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        finalPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00080000);
        if (moldCardsBuilder_ == null) {
          moldCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00100000);
        } else {
          moldCardsBuilder_.clear();
        }
        goldFlag_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingPhzPlayerInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes build() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes result = new com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.point_ = point_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.totalPoint_ = totalPoint_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.winCount_ = winCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lostCount_ = lostCount_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxPoint_ = maxPoint_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.icon_ = icon_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.bopiPoint_ = bopiPoint_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isShuXing_ = isShuXing_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.renewStatus_ = renewStatus_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          firstCards_ = java.util.Collections.unmodifiableList(firstCards_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.firstCards_ = firstCards_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          strExt_ = new com.google.protobuf.UnmodifiableLazyStringList(
              strExt_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.strExt_ = strExt_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.winLoseCredit_ = winLoseCredit_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.commissionCredit_ = commissionCredit_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.allHuxi_ = allHuxi_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.finalPoint_ = finalPoint_;
        if (moldCardsBuilder_ == null) {
          if (((bitField0_ & 0x00100000) == 0x00100000)) {
            moldCards_ = java.util.Collections.unmodifiableList(moldCards_);
            bitField0_ = (bitField0_ & ~0x00100000);
          }
          result.moldCards_ = moldCards_;
        } else {
          result.moldCards_ = moldCardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.goldFlag_ = goldFlag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        if (other.hasTotalPoint()) {
          setTotalPoint(other.getTotalPoint());
        }
        if (other.hasWinCount()) {
          setWinCount(other.getWinCount());
        }
        if (other.hasLostCount()) {
          setLostCount(other.getLostCount());
        }
        if (other.hasMaxPoint()) {
          setMaxPoint(other.getMaxPoint());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasIcon()) {
          bitField0_ |= 0x00000200;
          icon_ = other.icon_;
          onChanged();
        }
        if (other.hasBopiPoint()) {
          setBopiPoint(other.getBopiPoint());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasIsShuXing()) {
          setIsShuXing(other.getIsShuXing());
        }
        if (other.hasRenewStatus()) {
          setRenewStatus(other.getRenewStatus());
        }
        if (!other.firstCards_.isEmpty()) {
          if (firstCards_.isEmpty()) {
            firstCards_ = other.firstCards_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureFirstCardsIsMutable();
            firstCards_.addAll(other.firstCards_);
          }
          onChanged();
        }
        if (!other.strExt_.isEmpty()) {
          if (strExt_.isEmpty()) {
            strExt_ = other.strExt_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureStrExtIsMutable();
            strExt_.addAll(other.strExt_);
          }
          onChanged();
        }
        if (other.hasWinLoseCredit()) {
          setWinLoseCredit(other.getWinLoseCredit());
        }
        if (other.hasCommissionCredit()) {
          setCommissionCredit(other.getCommissionCredit());
        }
        if (other.hasAllHuxi()) {
          setAllHuxi(other.getAllHuxi());
        }
        if (other.hasFinalPoint()) {
          setFinalPoint(other.getFinalPoint());
        }
        if (moldCardsBuilder_ == null) {
          if (!other.moldCards_.isEmpty()) {
            if (moldCards_.isEmpty()) {
              moldCards_ = other.moldCards_;
              bitField0_ = (bitField0_ & ~0x00100000);
            } else {
              ensureMoldCardsIsMutable();
              moldCards_.addAll(other.moldCards_);
            }
            onChanged();
          }
        } else {
          if (!other.moldCards_.isEmpty()) {
            if (moldCardsBuilder_.isEmpty()) {
              moldCardsBuilder_.dispose();
              moldCardsBuilder_ = null;
              moldCards_ = other.moldCards_;
              bitField0_ = (bitField0_ & ~0x00100000);
              moldCardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMoldCardsFieldBuilder() : null;
            } else {
              moldCardsBuilder_.addAllMessages(other.moldCards_);
            }
          }
        }
        if (other.hasGoldFlag()) {
          setGoldFlag(other.getGoldFlag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeat()) {
          
          return false;
        }
        for (int i = 0; i < getMoldCardsCount(); i++) {
          if (!getMoldCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingPhzPlayerInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 point = 3;
      private int point_ ;
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public boolean hasPoint() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public int getPoint() {
        return point_;
      }
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder setPoint(int value) {
        bitField0_ |= 0x00000004;
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder clearPoint() {
        bitField0_ = (bitField0_ & ~0x00000004);
        point_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalPoint = 4;
      private int totalPoint_ ;
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public boolean hasTotalPoint() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public int getTotalPoint() {
        return totalPoint_;
      }
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder setTotalPoint(int value) {
        bitField0_ |= 0x00000008;
        totalPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder clearTotalPoint() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalPoint_ = 0;
        onChanged();
        return this;
      }

      // optional int32 winCount = 5;
      private int winCount_ ;
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public boolean hasWinCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public int getWinCount() {
        return winCount_;
      }
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public Builder setWinCount(int value) {
        bitField0_ |= 0x00000010;
        winCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public Builder clearWinCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        winCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lostCount = 6;
      private int lostCount_ ;
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public boolean hasLostCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public int getLostCount() {
        return lostCount_;
      }
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public Builder setLostCount(int value) {
        bitField0_ |= 0x00000020;
        lostCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public Builder clearLostCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lostCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxPoint = 7;
      private int maxPoint_ ;
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public boolean hasMaxPoint() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public int getMaxPoint() {
        return maxPoint_;
      }
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public Builder setMaxPoint(int value) {
        bitField0_ |= 0x00000040;
        maxPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public Builder clearMaxPoint() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxPoint_ = 0;
        onChanged();
        return this;
      }

      // required int32 seat = 8;
      private int seat_ ;
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000080;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000080);
        seat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 9;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000100;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional string icon = 10;
      private java.lang.Object icon_ = "";
      /**
       * <code>optional string icon = 10;</code>
       */
      public boolean hasIcon() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public Builder clearIcon() {
        bitField0_ = (bitField0_ & ~0x00000200);
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        icon_ = value;
        onChanged();
        return this;
      }

      // optional int32 bopiPoint = 11;
      private int bopiPoint_ ;
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public boolean hasBopiPoint() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public int getBopiPoint() {
        return bopiPoint_;
      }
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public Builder setBopiPoint(int value) {
        bitField0_ |= 0x00000400;
        bopiPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public Builder clearBopiPoint() {
        bitField0_ = (bitField0_ & ~0x00000400);
        bopiPoint_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 12;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // optional int32 isShuXing = 13;
      private int isShuXing_ ;
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public boolean hasIsShuXing() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public int getIsShuXing() {
        return isShuXing_;
      }
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public Builder setIsShuXing(int value) {
        bitField0_ |= 0x00001000;
        isShuXing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public Builder clearIsShuXing() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isShuXing_ = 0;
        onChanged();
        return this;
      }

      // optional int32 renewStatus = 14;
      private int renewStatus_ ;
      /**
       * <code>optional int32 renewStatus = 14;</code>
       *
       * <pre>
       *续费状态
       * </pre>
       */
      public boolean hasRenewStatus() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 renewStatus = 14;</code>
       *
       * <pre>
       *续费状态
       * </pre>
       */
      public int getRenewStatus() {
        return renewStatus_;
      }
      /**
       * <code>optional int32 renewStatus = 14;</code>
       *
       * <pre>
       *续费状态
       * </pre>
       */
      public Builder setRenewStatus(int value) {
        bitField0_ |= 0x00002000;
        renewStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 renewStatus = 14;</code>
       *
       * <pre>
       *续费状态
       * </pre>
       */
      public Builder clearRenewStatus() {
        bitField0_ = (bitField0_ & ~0x00002000);
        renewStatus_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 firstCards = 15;
      private java.util.List<java.lang.Integer> firstCards_ = java.util.Collections.emptyList();
      private void ensureFirstCardsIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          firstCards_ = new java.util.ArrayList<java.lang.Integer>(firstCards_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFirstCardsList() {
        return java.util.Collections.unmodifiableList(firstCards_);
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public int getFirstCardsCount() {
        return firstCards_.size();
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public int getFirstCards(int index) {
        return firstCards_.get(index);
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public Builder setFirstCards(
          int index, int value) {
        ensureFirstCardsIsMutable();
        firstCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public Builder addFirstCards(int value) {
        ensureFirstCardsIsMutable();
        firstCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public Builder addAllFirstCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFirstCardsIsMutable();
        super.addAll(values, firstCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public Builder clearFirstCards() {
        firstCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated string strExt = 17;
      private com.google.protobuf.LazyStringList strExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureStrExtIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          strExt_ = new com.google.protobuf.LazyStringArrayList(strExt_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated string strExt = 17;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.String>
          getStrExtList() {
        return java.util.Collections.unmodifiableList(strExt_);
      }
      /**
       * <code>repeated string strExt = 17;</code>
       *
       * <pre>
       * </pre>
       */
      public int getStrExtCount() {
        return strExt_.size();
      }
      /**
       * <code>repeated string strExt = 17;</code>
       *
       * <pre>
       * </pre>
       */
      public java.lang.String getStrExt(int index) {
        return strExt_.get(index);
      }
      /**
       * <code>repeated string strExt = 17;</code>
       *
       * <pre>
       * </pre>
       */
      public com.google.protobuf.ByteString
          getStrExtBytes(int index) {
        return strExt_.getByteString(index);
      }
      /**
       * <code>repeated string strExt = 17;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setStrExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrExtIsMutable();
        strExt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExt = 17;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addStrExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrExtIsMutable();
        strExt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExt = 17;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllStrExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureStrExtIsMutable();
        super.addAll(values, strExt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExt = 17;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearStrExt() {
        strExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string strExt = 17;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addStrExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureStrExtIsMutable();
        strExt_.add(value);
        onChanged();
        return this;
      }

      // optional int64 winLoseCredit = 18;
      private long winLoseCredit_ ;
      /**
       * <code>optional int64 winLoseCredit = 18;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public boolean hasWinLoseCredit() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int64 winLoseCredit = 18;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public long getWinLoseCredit() {
        return winLoseCredit_;
      }
      /**
       * <code>optional int64 winLoseCredit = 18;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public Builder setWinLoseCredit(long value) {
        bitField0_ |= 0x00010000;
        winLoseCredit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 winLoseCredit = 18;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public Builder clearWinLoseCredit() {
        bitField0_ = (bitField0_ & ~0x00010000);
        winLoseCredit_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 commissionCredit = 19;
      private long commissionCredit_ ;
      /**
       * <code>optional int64 commissionCredit = 19;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public boolean hasCommissionCredit() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int64 commissionCredit = 19;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public long getCommissionCredit() {
        return commissionCredit_;
      }
      /**
       * <code>optional int64 commissionCredit = 19;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public Builder setCommissionCredit(long value) {
        bitField0_ |= 0x00020000;
        commissionCredit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 commissionCredit = 19;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public Builder clearCommissionCredit() {
        bitField0_ = (bitField0_ & ~0x00020000);
        commissionCredit_ = 0L;
        onChanged();
        return this;
      }

      // optional int32 allHuxi = 20;
      private int allHuxi_ ;
      /**
       * <code>optional int32 allHuxi = 20;</code>
       *
       * <pre>
       *玩家总胡息
       * </pre>
       */
      public boolean hasAllHuxi() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 allHuxi = 20;</code>
       *
       * <pre>
       *玩家总胡息
       * </pre>
       */
      public int getAllHuxi() {
        return allHuxi_;
      }
      /**
       * <code>optional int32 allHuxi = 20;</code>
       *
       * <pre>
       *玩家总胡息
       * </pre>
       */
      public Builder setAllHuxi(int value) {
        bitField0_ |= 0x00040000;
        allHuxi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 allHuxi = 20;</code>
       *
       * <pre>
       *玩家总胡息
       * </pre>
       */
      public Builder clearAllHuxi() {
        bitField0_ = (bitField0_ & ~0x00040000);
        allHuxi_ = 0;
        onChanged();
        return this;
      }

      // optional int32 finalPoint = 21;
      private int finalPoint_ ;
      /**
       * <code>optional int32 finalPoint = 21;</code>
       *
       * <pre>
       *暂时未用到
       * </pre>
       */
      public boolean hasFinalPoint() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional int32 finalPoint = 21;</code>
       *
       * <pre>
       *暂时未用到
       * </pre>
       */
      public int getFinalPoint() {
        return finalPoint_;
      }
      /**
       * <code>optional int32 finalPoint = 21;</code>
       *
       * <pre>
       *暂时未用到
       * </pre>
       */
      public Builder setFinalPoint(int value) {
        bitField0_ |= 0x00080000;
        finalPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 finalPoint = 21;</code>
       *
       * <pre>
       *暂时未用到
       * </pre>
       */
      public Builder clearFinalPoint() {
        bitField0_ = (bitField0_ & ~0x00080000);
        finalPoint_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> moldCards_ =
        java.util.Collections.emptyList();
      private void ensureMoldCardsIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          moldCards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>(moldCards_);
          bitField0_ |= 0x00100000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> moldCardsBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMoldCardsList() {
        if (moldCardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(moldCards_);
        } else {
          return moldCardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public int getMoldCardsCount() {
        if (moldCardsBuilder_ == null) {
          return moldCards_.size();
        } else {
          return moldCardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMoldCards(int index) {
        if (moldCardsBuilder_ == null) {
          return moldCards_.get(index);
        } else {
          return moldCardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public Builder setMoldCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (moldCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoldCardsIsMutable();
          moldCards_.set(index, value);
          onChanged();
        } else {
          moldCardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public Builder setMoldCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (moldCardsBuilder_ == null) {
          ensureMoldCardsIsMutable();
          moldCards_.set(index, builderForValue.build());
          onChanged();
        } else {
          moldCardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public Builder addMoldCards(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (moldCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoldCardsIsMutable();
          moldCards_.add(value);
          onChanged();
        } else {
          moldCardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public Builder addMoldCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (moldCardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoldCardsIsMutable();
          moldCards_.add(index, value);
          onChanged();
        } else {
          moldCardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public Builder addMoldCards(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (moldCardsBuilder_ == null) {
          ensureMoldCardsIsMutable();
          moldCards_.add(builderForValue.build());
          onChanged();
        } else {
          moldCardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public Builder addMoldCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (moldCardsBuilder_ == null) {
          ensureMoldCardsIsMutable();
          moldCards_.add(index, builderForValue.build());
          onChanged();
        } else {
          moldCardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public Builder addAllMoldCards(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> values) {
        if (moldCardsBuilder_ == null) {
          ensureMoldCardsIsMutable();
          super.addAll(values, moldCards_);
          onChanged();
        } else {
          moldCardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public Builder clearMoldCards() {
        if (moldCardsBuilder_ == null) {
          moldCards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00100000);
          onChanged();
        } else {
          moldCardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public Builder removeMoldCards(int index) {
        if (moldCardsBuilder_ == null) {
          ensureMoldCardsIsMutable();
          moldCards_.remove(index);
          onChanged();
        } else {
          moldCardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder getMoldCardsBuilder(
          int index) {
        return getMoldCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMoldCardsOrBuilder(
          int index) {
        if (moldCardsBuilder_ == null) {
          return moldCards_.get(index);  } else {
          return moldCardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
           getMoldCardsOrBuilderList() {
        if (moldCardsBuilder_ != null) {
          return moldCardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(moldCards_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMoldCardsBuilder() {
        return getMoldCardsFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMoldCardsBuilder(
          int index) {
        return getMoldCardsFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldCards = 22;</code>
       *
       * <pre>
       *碰吃煨提了的牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder> 
           getMoldCardsBuilderList() {
        return getMoldCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
          getMoldCardsFieldBuilder() {
        if (moldCardsBuilder_ == null) {
          moldCardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder>(
                  moldCards_,
                  ((bitField0_ & 0x00100000) == 0x00100000),
                  getParentForChildren(),
                  isClean());
          moldCards_ = null;
        }
        return moldCardsBuilder_;
      }

      // optional int32 goldFlag = 23;
      private int goldFlag_ ;
      /**
       * <code>optional int32 goldFlag = 23;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public boolean hasGoldFlag() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 goldFlag = 23;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public int getGoldFlag() {
        return goldFlag_;
      }
      /**
       * <code>optional int32 goldFlag = 23;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public Builder setGoldFlag(int value) {
        bitField0_ |= 0x00200000;
        goldFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 goldFlag = 23;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public Builder clearGoldFlag() {
        bitField0_ = (bitField0_ & ~0x00200000);
        goldFlag_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes)
    }

    static {
      defaultInstance = new ClosingPhzPlayerInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.ClosingPhzPlayerInfoRes)
  }

  public interface ClosingAhPhzInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes> 
        getClosingPlayersList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes getClosingPlayers(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    int getClosingPlayersCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index);

    // optional int32 isBreak = 2;
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    boolean hasIsBreak();
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    int getIsBreak();

    // optional int32 wanfa = 3;
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    boolean hasWanfa();
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    int getWanfa();

    // repeated string ext = 4;
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.String>
    getExtList();
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    java.lang.String getExt(int index);
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtBytes(int index);

    // repeated string matchExt = 5;
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    java.util.List<java.lang.String>
    getMatchExtList();
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    int getMatchExtCount();
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    java.lang.String getMatchExt(int index);
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    com.google.protobuf.ByteString
        getMatchExtBytes(int index);

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> 
        getCardsList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getCards(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getCardsOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getCardsOrBuilder(
        int index);

    // repeated int32 leftCards = 7;
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getLeftCardsList();
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    int getLeftCardsCount();
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    int getLeftCards(int index);

    // optional int32 tun = 8;
    /**
     * <code>optional int32 tun = 8;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    boolean hasTun();
    /**
     * <code>optional int32 tun = 8;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    int getTun();

    // optional int32 fan = 9;
    /**
     * <code>optional int32 fan = 9;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    boolean hasFan();
    /**
     * <code>optional int32 fan = 9;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    int getFan();

    // optional int32 huxi = 10;
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    boolean hasHuxi();
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    int getHuxi();

    // optional int32 huSeat = 11;
    /**
     * <code>optional int32 huSeat = 11;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    boolean hasHuSeat();
    /**
     * <code>optional int32 huSeat = 11;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    int getHuSeat();

    // optional int32 huCard = 12;
    /**
     * <code>optional int32 huCard = 12;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    boolean hasHuCard();
    /**
     * <code>optional int32 huCard = 12;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    int getHuCard();

    // optional int32 totalTun = 13;
    /**
     * <code>optional int32 totalTun = 13;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    boolean hasTotalTun();
    /**
     * <code>optional int32 totalTun = 13;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    int getTotalTun();

    // repeated int32 fanTypes = 14;
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getFanTypesList();
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    int getFanTypesCount();
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    int getFanTypes(int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingAhPhzInfoRes}
   */
  public static final class ClosingAhPhzInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements ClosingAhPhzInfoResOrBuilder {
    // Use ClosingAhPhzInfoRes.newBuilder() to construct.
    private ClosingAhPhzInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosingAhPhzInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosingAhPhzInfoRes defaultInstance;
    public static ClosingAhPhzInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public ClosingAhPhzInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosingAhPhzInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes>();
                mutable_bitField0_ |= 0x00000001;
              }
              closingPlayers_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              isBreak_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              wanfa_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ext_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              ext_.add(input.readBytes());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                matchExt_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              matchExt_.add(input.readBytes());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                cards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>();
                mutable_bitField0_ |= 0x00000020;
              }
              cards_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                leftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              leftCards_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                leftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                leftCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              bitField0_ |= 0x00000004;
              tun_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000008;
              fan_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000010;
              huxi_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000020;
              huSeat_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000040;
              huCard_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00000080;
              totalTun_ = input.readInt32();
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                fanTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              fanTypes_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                fanTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                fanTypes_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(ext_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          matchExt_ = new com.google.protobuf.UnmodifiableLazyStringList(matchExt_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          leftCards_ = java.util.Collections.unmodifiableList(leftCards_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          fanTypes_ = java.util.Collections.unmodifiableList(fanTypes_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosingAhPhzInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<ClosingAhPhzInfoRes>() {
      public ClosingAhPhzInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosingAhPhzInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosingAhPhzInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;
    public static final int CLOSINGPLAYERS_FIELD_NUMBER = 1;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes> closingPlayers_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes> getClosingPlayersList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public int getClosingPlayersCount() {
      return closingPlayers_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes getClosingPlayers(int index) {
      return closingPlayers_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index) {
      return closingPlayers_.get(index);
    }

    // optional int32 isBreak = 2;
    public static final int ISBREAK_FIELD_NUMBER = 2;
    private int isBreak_;
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    public boolean hasIsBreak() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    public int getIsBreak() {
      return isBreak_;
    }

    // optional int32 wanfa = 3;
    public static final int WANFA_FIELD_NUMBER = 3;
    private int wanfa_;
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    public boolean hasWanfa() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    public int getWanfa() {
      return wanfa_;
    }

    // repeated string ext = 4;
    public static final int EXT_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList ext_;
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.String>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public java.lang.String getExt(int index) {
      return ext_.get(index);
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtBytes(int index) {
      return ext_.getByteString(index);
    }

    // repeated string matchExt = 5;
    public static final int MATCHEXT_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList matchExt_;
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public java.util.List<java.lang.String>
        getMatchExtList() {
      return matchExt_;
    }
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public int getMatchExtCount() {
      return matchExt_.size();
    }
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public java.lang.String getMatchExt(int index) {
      return matchExt_.get(index);
    }
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMatchExtBytes(int index) {
      return matchExt_.getByteString(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;
    public static final int CARDS_FIELD_NUMBER = 6;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> cards_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getCardsOrBuilderList() {
      return cards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getCards(int index) {
      return cards_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getCardsOrBuilder(
        int index) {
      return cards_.get(index);
    }

    // repeated int32 leftCards = 7;
    public static final int LEFTCARDS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> leftCards_;
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLeftCardsList() {
      return leftCards_;
    }
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public int getLeftCardsCount() {
      return leftCards_.size();
    }
    /**
     * <code>repeated int32 leftCards = 7;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public int getLeftCards(int index) {
      return leftCards_.get(index);
    }

    // optional int32 tun = 8;
    public static final int TUN_FIELD_NUMBER = 8;
    private int tun_;
    /**
     * <code>optional int32 tun = 8;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    public boolean hasTun() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 tun = 8;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    public int getTun() {
      return tun_;
    }

    // optional int32 fan = 9;
    public static final int FAN_FIELD_NUMBER = 9;
    private int fan_;
    /**
     * <code>optional int32 fan = 9;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    public boolean hasFan() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 fan = 9;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    public int getFan() {
      return fan_;
    }

    // optional int32 huxi = 10;
    public static final int HUXI_FIELD_NUMBER = 10;
    private int huxi_;
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    public boolean hasHuxi() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 huxi = 10;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    public int getHuxi() {
      return huxi_;
    }

    // optional int32 huSeat = 11;
    public static final int HUSEAT_FIELD_NUMBER = 11;
    private int huSeat_;
    /**
     * <code>optional int32 huSeat = 11;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    public boolean hasHuSeat() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 huSeat = 11;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    public int getHuSeat() {
      return huSeat_;
    }

    // optional int32 huCard = 12;
    public static final int HUCARD_FIELD_NUMBER = 12;
    private int huCard_;
    /**
     * <code>optional int32 huCard = 12;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    public boolean hasHuCard() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 huCard = 12;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    public int getHuCard() {
      return huCard_;
    }

    // optional int32 totalTun = 13;
    public static final int TOTALTUN_FIELD_NUMBER = 13;
    private int totalTun_;
    /**
     * <code>optional int32 totalTun = 13;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    public boolean hasTotalTun() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 totalTun = 13;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    public int getTotalTun() {
      return totalTun_;
    }

    // repeated int32 fanTypes = 14;
    public static final int FANTYPES_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> fanTypes_;
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFanTypesList() {
      return fanTypes_;
    }
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    public int getFanTypesCount() {
      return fanTypes_.size();
    }
    /**
     * <code>repeated int32 fanTypes = 14;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    public int getFanTypes(int index) {
      return fanTypes_.get(index);
    }

    private void initFields() {
      closingPlayers_ = java.util.Collections.emptyList();
      isBreak_ = 0;
      wanfa_ = 0;
      ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      cards_ = java.util.Collections.emptyList();
      leftCards_ = java.util.Collections.emptyList();
      tun_ = 0;
      fan_ = 0;
      huxi_ = 0;
      huSeat_ = 0;
      huCard_ = 0;
      totalTun_ = 0;
      fanTypes_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getClosingPlayersCount(); i++) {
        if (!getClosingPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCardsCount(); i++) {
        if (!getCards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < closingPlayers_.size(); i++) {
        output.writeMessage(1, closingPlayers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, wanfa_);
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeBytes(4, ext_.getByteString(i));
      }
      for (int i = 0; i < matchExt_.size(); i++) {
        output.writeBytes(5, matchExt_.getByteString(i));
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeMessage(6, cards_.get(i));
      }
      for (int i = 0; i < leftCards_.size(); i++) {
        output.writeInt32(7, leftCards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(8, tun_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(9, fan_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(10, huxi_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(11, huSeat_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(12, huCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(13, totalTun_);
      }
      for (int i = 0; i < fanTypes_.size(); i++) {
        output.writeInt32(14, fanTypes_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < closingPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, closingPlayers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, wanfa_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ext_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getExtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < matchExt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(matchExt_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getMatchExtList().size();
      }
      for (int i = 0; i < cards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, cards_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < leftCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(leftCards_.get(i));
        }
        size += dataSize;
        size += 1 * getLeftCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, tun_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, fan_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, huxi_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, huSeat_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, huCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, totalTun_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fanTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(fanTypes_.get(i));
        }
        size += dataSize;
        size += 1 * getFanTypesList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingAhPhzInfoRes}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClosingPlayersFieldBuilder();
          getCardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          closingPlayersBuilder_.clear();
        }
        isBreak_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        wanfa_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          cardsBuilder_.clear();
        }
        leftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        tun_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        fan_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        huxi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        huSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        huCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        totalTun_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        fanTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes build() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes result = new com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (closingPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.closingPlayers_ = closingPlayers_;
        } else {
          result.closingPlayers_ = closingPlayersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isBreak_ = isBreak_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.wanfa_ = wanfa_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(
              ext_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.ext_ = ext_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          matchExt_ = new com.google.protobuf.UnmodifiableLazyStringList(
              matchExt_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.matchExt_ = matchExt_;
        if (cardsBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            cards_ = java.util.Collections.unmodifiableList(cards_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.cards_ = cards_;
        } else {
          result.cards_ = cardsBuilder_.build();
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          leftCards_ = java.util.Collections.unmodifiableList(leftCards_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.leftCards_ = leftCards_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tun_ = tun_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fan_ = fan_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000010;
        }
        result.huxi_ = huxi_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000020;
        }
        result.huSeat_ = huSeat_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000040;
        }
        result.huCard_ = huCard_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000080;
        }
        result.totalTun_ = totalTun_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          fanTypes_ = java.util.Collections.unmodifiableList(fanTypes_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.fanTypes_ = fanTypes_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes.getDefaultInstance()) return this;
        if (closingPlayersBuilder_ == null) {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayers_.isEmpty()) {
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureClosingPlayersIsMutable();
              closingPlayers_.addAll(other.closingPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayersBuilder_.isEmpty()) {
              closingPlayersBuilder_.dispose();
              closingPlayersBuilder_ = null;
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              closingPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getClosingPlayersFieldBuilder() : null;
            } else {
              closingPlayersBuilder_.addAllMessages(other.closingPlayers_);
            }
          }
        }
        if (other.hasIsBreak()) {
          setIsBreak(other.getIsBreak());
        }
        if (other.hasWanfa()) {
          setWanfa(other.getWanfa());
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        if (!other.matchExt_.isEmpty()) {
          if (matchExt_.isEmpty()) {
            matchExt_ = other.matchExt_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureMatchExtIsMutable();
            matchExt_.addAll(other.matchExt_);
          }
          onChanged();
        }
        if (cardsBuilder_ == null) {
          if (!other.cards_.isEmpty()) {
            if (cards_.isEmpty()) {
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureCardsIsMutable();
              cards_.addAll(other.cards_);
            }
            onChanged();
          }
        } else {
          if (!other.cards_.isEmpty()) {
            if (cardsBuilder_.isEmpty()) {
              cardsBuilder_.dispose();
              cardsBuilder_ = null;
              cards_ = other.cards_;
              bitField0_ = (bitField0_ & ~0x00000020);
              cardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCardsFieldBuilder() : null;
            } else {
              cardsBuilder_.addAllMessages(other.cards_);
            }
          }
        }
        if (!other.leftCards_.isEmpty()) {
          if (leftCards_.isEmpty()) {
            leftCards_ = other.leftCards_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureLeftCardsIsMutable();
            leftCards_.addAll(other.leftCards_);
          }
          onChanged();
        }
        if (other.hasTun()) {
          setTun(other.getTun());
        }
        if (other.hasFan()) {
          setFan(other.getFan());
        }
        if (other.hasHuxi()) {
          setHuxi(other.getHuxi());
        }
        if (other.hasHuSeat()) {
          setHuSeat(other.getHuSeat());
        }
        if (other.hasHuCard()) {
          setHuCard(other.getHuCard());
        }
        if (other.hasTotalTun()) {
          setTotalTun(other.getTotalTun());
        }
        if (!other.fanTypes_.isEmpty()) {
          if (fanTypes_.isEmpty()) {
            fanTypes_ = other.fanTypes_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureFanTypesIsMutable();
            fanTypes_.addAll(other.fanTypes_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getClosingPlayersCount(); i++) {
          if (!getClosingPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCardsCount(); i++) {
          if (!getCards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes> closingPlayers_ =
        java.util.Collections.emptyList();
      private void ensureClosingPlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes>(closingPlayers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoResOrBuilder> closingPlayersBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes> getClosingPlayersList() {
        if (closingPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        } else {
          return closingPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public int getClosingPlayersCount() {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.size();
        } else {
          return closingPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes getClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);
        } else {
          return closingPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addAllClosingPlayers(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes> values) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          super.addAll(values, closingPlayers_);
          onChanged();
        } else {
          closingPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder clearClosingPlayers() {
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          closingPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder removeClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.remove(index);
          onChanged();
        } else {
          closingPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder getClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
          int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);  } else {
          return closingPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoResOrBuilder> 
           getClosingPlayersOrBuilderList() {
        if (closingPlayersBuilder_ != null) {
          return closingPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder addClosingPlayersBuilder() {
        return getClosingPlayersFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder addClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder> 
           getClosingPlayersBuilderList() {
        return getClosingPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoResOrBuilder> 
          getClosingPlayersFieldBuilder() {
        if (closingPlayersBuilder_ == null) {
          closingPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoResOrBuilder>(
                  closingPlayers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          closingPlayers_ = null;
        }
        return closingPlayersBuilder_;
      }

      // optional int32 isBreak = 2;
      private int isBreak_ ;
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public boolean hasIsBreak() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public int getIsBreak() {
        return isBreak_;
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public Builder setIsBreak(int value) {
        bitField0_ |= 0x00000002;
        isBreak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public Builder clearIsBreak() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isBreak_ = 0;
        onChanged();
        return this;
      }

      // optional int32 wanfa = 3;
      private int wanfa_ ;
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public boolean hasWanfa() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public int getWanfa() {
        return wanfa_;
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public Builder setWanfa(int value) {
        bitField0_ |= 0x00000004;
        wanfa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public Builder clearWanfa() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wanfa_ = 0;
        onChanged();
        return this;
      }

      // repeated string ext = 4;
      private com.google.protobuf.LazyStringList ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.LazyStringArrayList(ext_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.String>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public java.lang.String getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtBytes(int index) {
        return ext_.getByteString(index);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearExt() {
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }

      // repeated string matchExt = 5;
      private com.google.protobuf.LazyStringList matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMatchExtIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          matchExt_ = new com.google.protobuf.LazyStringArrayList(matchExt_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public java.util.List<java.lang.String>
          getMatchExtList() {
        return java.util.Collections.unmodifiableList(matchExt_);
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public int getMatchExtCount() {
        return matchExt_.size();
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public java.lang.String getMatchExt(int index) {
        return matchExt_.get(index);
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMatchExtBytes(int index) {
        return matchExt_.getByteString(index);
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder setMatchExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addMatchExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addAllMatchExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureMatchExtIsMutable();
        super.addAll(values, matchExt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder clearMatchExt() {
        matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addMatchExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> cards_ =
        java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          cards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>(cards_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> cardsBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getCardsList() {
        if (cardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(cards_);
        } else {
          return cardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public int getCardsCount() {
        if (cardsBuilder_ == null) {
          return cards_.size();
        } else {
          return cardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getCards(int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);
        } else {
          return cardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.set(index, value);
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.set(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addCards(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (cardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCardsIsMutable();
          cards_.add(index, value);
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addCards(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addCards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.add(index, builderForValue.build());
          onChanged();
        } else {
          cardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> values) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          super.addAll(values, cards_);
          onChanged();
        } else {
          cardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder clearCards() {
        if (cardsBuilder_ == null) {
          cards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          cardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder removeCards(int index) {
        if (cardsBuilder_ == null) {
          ensureCardsIsMutable();
          cards_.remove(index);
          onChanged();
        } else {
          cardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder getCardsBuilder(
          int index) {
        return getCardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getCardsOrBuilder(
          int index) {
        if (cardsBuilder_ == null) {
          return cards_.get(index);  } else {
          return cardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
           getCardsOrBuilderList() {
        if (cardsBuilder_ != null) {
          return cardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(cards_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addCardsBuilder() {
        return getCardsFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addCardsBuilder(
          int index) {
        return getCardsFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards cards = 6;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder> 
           getCardsBuilderList() {
        return getCardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
          getCardsFieldBuilder() {
        if (cardsBuilder_ == null) {
          cardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder>(
                  cards_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          cards_ = null;
        }
        return cardsBuilder_;
      }

      // repeated int32 leftCards = 7;
      private java.util.List<java.lang.Integer> leftCards_ = java.util.Collections.emptyList();
      private void ensureLeftCardsIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          leftCards_ = new java.util.ArrayList<java.lang.Integer>(leftCards_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLeftCardsList() {
        return java.util.Collections.unmodifiableList(leftCards_);
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public int getLeftCardsCount() {
        return leftCards_.size();
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public int getLeftCards(int index) {
        return leftCards_.get(index);
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder setLeftCards(
          int index, int value) {
        ensureLeftCardsIsMutable();
        leftCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder addLeftCards(int value) {
        ensureLeftCardsIsMutable();
        leftCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder addAllLeftCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLeftCardsIsMutable();
        super.addAll(values, leftCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 7;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder clearLeftCards() {
        leftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 tun = 8;
      private int tun_ ;
      /**
       * <code>optional int32 tun = 8;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public boolean hasTun() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 tun = 8;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public int getTun() {
        return tun_;
      }
      /**
       * <code>optional int32 tun = 8;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public Builder setTun(int value) {
        bitField0_ |= 0x00000080;
        tun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tun = 8;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public Builder clearTun() {
        bitField0_ = (bitField0_ & ~0x00000080);
        tun_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fan = 9;
      private int fan_ ;
      /**
       * <code>optional int32 fan = 9;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public boolean hasFan() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 fan = 9;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public int getFan() {
        return fan_;
      }
      /**
       * <code>optional int32 fan = 9;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public Builder setFan(int value) {
        bitField0_ |= 0x00000100;
        fan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fan = 9;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public Builder clearFan() {
        bitField0_ = (bitField0_ & ~0x00000100);
        fan_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huxi = 10;
      private int huxi_ ;
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public boolean hasHuxi() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public int getHuxi() {
        return huxi_;
      }
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public Builder setHuxi(int value) {
        bitField0_ |= 0x00000200;
        huxi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huxi = 10;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public Builder clearHuxi() {
        bitField0_ = (bitField0_ & ~0x00000200);
        huxi_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huSeat = 11;
      private int huSeat_ ;
      /**
       * <code>optional int32 huSeat = 11;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public boolean hasHuSeat() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 huSeat = 11;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public int getHuSeat() {
        return huSeat_;
      }
      /**
       * <code>optional int32 huSeat = 11;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public Builder setHuSeat(int value) {
        bitField0_ |= 0x00000400;
        huSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huSeat = 11;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public Builder clearHuSeat() {
        bitField0_ = (bitField0_ & ~0x00000400);
        huSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huCard = 12;
      private int huCard_ ;
      /**
       * <code>optional int32 huCard = 12;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public boolean hasHuCard() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 huCard = 12;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public int getHuCard() {
        return huCard_;
      }
      /**
       * <code>optional int32 huCard = 12;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public Builder setHuCard(int value) {
        bitField0_ |= 0x00000800;
        huCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huCard = 12;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public Builder clearHuCard() {
        bitField0_ = (bitField0_ & ~0x00000800);
        huCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalTun = 13;
      private int totalTun_ ;
      /**
       * <code>optional int32 totalTun = 13;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public boolean hasTotalTun() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 totalTun = 13;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public int getTotalTun() {
        return totalTun_;
      }
      /**
       * <code>optional int32 totalTun = 13;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public Builder setTotalTun(int value) {
        bitField0_ |= 0x00001000;
        totalTun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalTun = 13;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public Builder clearTotalTun() {
        bitField0_ = (bitField0_ & ~0x00001000);
        totalTun_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 fanTypes = 14;
      private java.util.List<java.lang.Integer> fanTypes_ = java.util.Collections.emptyList();
      private void ensureFanTypesIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          fanTypes_ = new java.util.ArrayList<java.lang.Integer>(fanTypes_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFanTypesList() {
        return java.util.Collections.unmodifiableList(fanTypes_);
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public int getFanTypesCount() {
        return fanTypes_.size();
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public int getFanTypes(int index) {
        return fanTypes_.get(index);
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder setFanTypes(
          int index, int value) {
        ensureFanTypesIsMutable();
        fanTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder addFanTypes(int value) {
        ensureFanTypesIsMutable();
        fanTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder addAllFanTypes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFanTypesIsMutable();
        super.addAll(values, fanTypes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fanTypes = 14;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder clearFanTypes() {
        fanTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.ClosingAhPhzInfoRes)
    }

    static {
      defaultInstance = new ClosingAhPhzInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.ClosingAhPhzInfoRes)
  }

  public interface ClosingAhPhzPlayerInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string userId = 1;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 point = 3;
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    boolean hasPoint();
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    int getPoint();

    // optional int32 totalPoint = 4;
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    boolean hasTotalPoint();
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    int getTotalPoint();

    // optional int32 winCount = 5;
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    boolean hasWinCount();
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    int getWinCount();

    // optional int32 lostCount = 6;
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    boolean hasLostCount();
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    int getLostCount();

    // optional int32 maxPoint = 7;
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    boolean hasMaxPoint();
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    int getMaxPoint();

    // required int32 seat = 8;
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    int getSeat();

    // optional int32 sex = 9;
    /**
     * <code>optional int32 sex = 9;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 9;</code>
     */
    int getSex();

    // optional string icon = 10;
    /**
     * <code>optional string icon = 10;</code>
     */
    boolean hasIcon();
    /**
     * <code>optional string icon = 10;</code>
     */
    java.lang.String getIcon();
    /**
     * <code>optional string icon = 10;</code>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    // optional int32 bopiPoint = 11;
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    boolean hasBopiPoint();
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    int getBopiPoint();

    // repeated int32 cards = 12;
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    int getCards(int index);

    // optional int32 isShuXing = 13;
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    boolean hasIsShuXing();
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    int getIsShuXing();

    // repeated int32 outCards = 14;
    /**
     * <code>repeated int32 outCards = 14;</code>
     *
     * <pre>
     *出去的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getOutCardsList();
    /**
     * <code>repeated int32 outCards = 14;</code>
     *
     * <pre>
     *出去的牌
     * </pre>
     */
    int getOutCardsCount();
    /**
     * <code>repeated int32 outCards = 14;</code>
     *
     * <pre>
     *出去的牌
     * </pre>
     */
    int getOutCards(int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes}
   *
   * <pre>
   *单个玩家结算
   * </pre>
   */
  public static final class ClosingAhPhzPlayerInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements ClosingAhPhzPlayerInfoResOrBuilder {
    // Use ClosingAhPhzPlayerInfoRes.newBuilder() to construct.
    private ClosingAhPhzPlayerInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosingAhPhzPlayerInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosingAhPhzPlayerInfoRes defaultInstance;
    public static ClosingAhPhzPlayerInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public ClosingAhPhzPlayerInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosingAhPhzPlayerInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              point_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              totalPoint_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              winCount_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              lostCount_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              maxPoint_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              seat_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              sex_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              icon_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              bopiPoint_ = input.readInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              isShuXing_ = input.readInt32();
              break;
            }
            case 112: {
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              outCards_.add(input.readInt32());
              break;
            }
            case 114: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00002000) == 0x00002000) && input.getBytesUntilLimit() > 0) {
                outCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00002000;
              }
              while (input.getBytesUntilLimit() > 0) {
                outCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00002000) == 0x00002000)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzPlayerInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzPlayerInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosingAhPhzPlayerInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<ClosingAhPhzPlayerInfoRes>() {
      public ClosingAhPhzPlayerInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosingAhPhzPlayerInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosingAhPhzPlayerInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 point = 3;
    public static final int POINT_FIELD_NUMBER = 3;
    private int point_;
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public boolean hasPoint() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public int getPoint() {
      return point_;
    }

    // optional int32 totalPoint = 4;
    public static final int TOTALPOINT_FIELD_NUMBER = 4;
    private int totalPoint_;
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public boolean hasTotalPoint() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public int getTotalPoint() {
      return totalPoint_;
    }

    // optional int32 winCount = 5;
    public static final int WINCOUNT_FIELD_NUMBER = 5;
    private int winCount_;
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    public boolean hasWinCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    public int getWinCount() {
      return winCount_;
    }

    // optional int32 lostCount = 6;
    public static final int LOSTCOUNT_FIELD_NUMBER = 6;
    private int lostCount_;
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    public boolean hasLostCount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    public int getLostCount() {
      return lostCount_;
    }

    // optional int32 maxPoint = 7;
    public static final int MAXPOINT_FIELD_NUMBER = 7;
    private int maxPoint_;
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    public boolean hasMaxPoint() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    public int getMaxPoint() {
      return maxPoint_;
    }

    // required int32 seat = 8;
    public static final int SEAT_FIELD_NUMBER = 8;
    private int seat_;
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // optional int32 sex = 9;
    public static final int SEX_FIELD_NUMBER = 9;
    private int sex_;
    /**
     * <code>optional int32 sex = 9;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 sex = 9;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional string icon = 10;
    public static final int ICON_FIELD_NUMBER = 10;
    private java.lang.Object icon_;
    /**
     * <code>optional string icon = 10;</code>
     */
    public boolean hasIcon() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string icon = 10;</code>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          icon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string icon = 10;</code>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 bopiPoint = 11;
    public static final int BOPIPOINT_FIELD_NUMBER = 11;
    private int bopiPoint_;
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    public boolean hasBopiPoint() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    public int getBopiPoint() {
      return bopiPoint_;
    }

    // repeated int32 cards = 12;
    public static final int CARDS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 isShuXing = 13;
    public static final int ISSHUXING_FIELD_NUMBER = 13;
    private int isShuXing_;
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    public boolean hasIsShuXing() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    public int getIsShuXing() {
      return isShuXing_;
    }

    // repeated int32 outCards = 14;
    public static final int OUTCARDS_FIELD_NUMBER = 14;
    private java.util.List<java.lang.Integer> outCards_;
    /**
     * <code>repeated int32 outCards = 14;</code>
     *
     * <pre>
     *出去的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getOutCardsList() {
      return outCards_;
    }
    /**
     * <code>repeated int32 outCards = 14;</code>
     *
     * <pre>
     *出去的牌
     * </pre>
     */
    public int getOutCardsCount() {
      return outCards_.size();
    }
    /**
     * <code>repeated int32 outCards = 14;</code>
     *
     * <pre>
     *出去的牌
     * </pre>
     */
    public int getOutCards(int index) {
      return outCards_.get(index);
    }

    private void initFields() {
      userId_ = "";
      name_ = "";
      point_ = 0;
      totalPoint_ = 0;
      winCount_ = 0;
      lostCount_ = 0;
      maxPoint_ = 0;
      seat_ = 0;
      sex_ = 0;
      icon_ = "";
      bopiPoint_ = 0;
      cards_ = java.util.Collections.emptyList();
      isShuXing_ = 0;
      outCards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, point_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, totalPoint_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, winCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, lostCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, maxPoint_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, seat_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, sex_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIconBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, bopiPoint_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(12, cards_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, isShuXing_);
      }
      for (int i = 0; i < outCards_.size(); i++) {
        output.writeInt32(14, outCards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, point_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, totalPoint_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, winCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, lostCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, maxPoint_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, seat_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, sex_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIconBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, bopiPoint_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, isShuXing_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < outCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(outCards_.get(i));
        }
        size += dataSize;
        size += 1 * getOutCardsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes}
     *
     * <pre>
     *单个玩家结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzPlayerInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzPlayerInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        point_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        totalPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        winCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        lostCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        icon_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        bopiPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        isShuXing_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzPlayerInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes build() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes result = new com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.point_ = point_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.totalPoint_ = totalPoint_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.winCount_ = winCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lostCount_ = lostCount_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxPoint_ = maxPoint_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.icon_ = icon_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.bopiPoint_ = bopiPoint_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isShuXing_ = isShuXing_;
        if (((bitField0_ & 0x00002000) == 0x00002000)) {
          outCards_ = java.util.Collections.unmodifiableList(outCards_);
          bitField0_ = (bitField0_ & ~0x00002000);
        }
        result.outCards_ = outCards_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        if (other.hasTotalPoint()) {
          setTotalPoint(other.getTotalPoint());
        }
        if (other.hasWinCount()) {
          setWinCount(other.getWinCount());
        }
        if (other.hasLostCount()) {
          setLostCount(other.getLostCount());
        }
        if (other.hasMaxPoint()) {
          setMaxPoint(other.getMaxPoint());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasIcon()) {
          bitField0_ |= 0x00000200;
          icon_ = other.icon_;
          onChanged();
        }
        if (other.hasBopiPoint()) {
          setBopiPoint(other.getBopiPoint());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasIsShuXing()) {
          setIsShuXing(other.getIsShuXing());
        }
        if (!other.outCards_.isEmpty()) {
          if (outCards_.isEmpty()) {
            outCards_ = other.outCards_;
            bitField0_ = (bitField0_ & ~0x00002000);
          } else {
            ensureOutCardsIsMutable();
            outCards_.addAll(other.outCards_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeat()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TablePhzResMsg.ClosingAhPhzPlayerInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 point = 3;
      private int point_ ;
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public boolean hasPoint() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public int getPoint() {
        return point_;
      }
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder setPoint(int value) {
        bitField0_ |= 0x00000004;
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder clearPoint() {
        bitField0_ = (bitField0_ & ~0x00000004);
        point_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalPoint = 4;
      private int totalPoint_ ;
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public boolean hasTotalPoint() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public int getTotalPoint() {
        return totalPoint_;
      }
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder setTotalPoint(int value) {
        bitField0_ |= 0x00000008;
        totalPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder clearTotalPoint() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalPoint_ = 0;
        onChanged();
        return this;
      }

      // optional int32 winCount = 5;
      private int winCount_ ;
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public boolean hasWinCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public int getWinCount() {
        return winCount_;
      }
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public Builder setWinCount(int value) {
        bitField0_ |= 0x00000010;
        winCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public Builder clearWinCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        winCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lostCount = 6;
      private int lostCount_ ;
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public boolean hasLostCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public int getLostCount() {
        return lostCount_;
      }
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public Builder setLostCount(int value) {
        bitField0_ |= 0x00000020;
        lostCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public Builder clearLostCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lostCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxPoint = 7;
      private int maxPoint_ ;
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public boolean hasMaxPoint() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public int getMaxPoint() {
        return maxPoint_;
      }
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public Builder setMaxPoint(int value) {
        bitField0_ |= 0x00000040;
        maxPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public Builder clearMaxPoint() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxPoint_ = 0;
        onChanged();
        return this;
      }

      // required int32 seat = 8;
      private int seat_ ;
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000080;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000080);
        seat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 9;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000100;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional string icon = 10;
      private java.lang.Object icon_ = "";
      /**
       * <code>optional string icon = 10;</code>
       */
      public boolean hasIcon() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public Builder clearIcon() {
        bitField0_ = (bitField0_ & ~0x00000200);
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        icon_ = value;
        onChanged();
        return this;
      }

      // optional int32 bopiPoint = 11;
      private int bopiPoint_ ;
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public boolean hasBopiPoint() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public int getBopiPoint() {
        return bopiPoint_;
      }
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public Builder setBopiPoint(int value) {
        bitField0_ |= 0x00000400;
        bopiPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public Builder clearBopiPoint() {
        bitField0_ = (bitField0_ & ~0x00000400);
        bopiPoint_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 12;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // optional int32 isShuXing = 13;
      private int isShuXing_ ;
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public boolean hasIsShuXing() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public int getIsShuXing() {
        return isShuXing_;
      }
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public Builder setIsShuXing(int value) {
        bitField0_ |= 0x00001000;
        isShuXing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public Builder clearIsShuXing() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isShuXing_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 outCards = 14;
      private java.util.List<java.lang.Integer> outCards_ = java.util.Collections.emptyList();
      private void ensureOutCardsIsMutable() {
        if (!((bitField0_ & 0x00002000) == 0x00002000)) {
          outCards_ = new java.util.ArrayList<java.lang.Integer>(outCards_);
          bitField0_ |= 0x00002000;
         }
      }
      /**
       * <code>repeated int32 outCards = 14;</code>
       *
       * <pre>
       *出去的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getOutCardsList() {
        return java.util.Collections.unmodifiableList(outCards_);
      }
      /**
       * <code>repeated int32 outCards = 14;</code>
       *
       * <pre>
       *出去的牌
       * </pre>
       */
      public int getOutCardsCount() {
        return outCards_.size();
      }
      /**
       * <code>repeated int32 outCards = 14;</code>
       *
       * <pre>
       *出去的牌
       * </pre>
       */
      public int getOutCards(int index) {
        return outCards_.get(index);
      }
      /**
       * <code>repeated int32 outCards = 14;</code>
       *
       * <pre>
       *出去的牌
       * </pre>
       */
      public Builder setOutCards(
          int index, int value) {
        ensureOutCardsIsMutable();
        outCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 outCards = 14;</code>
       *
       * <pre>
       *出去的牌
       * </pre>
       */
      public Builder addOutCards(int value) {
        ensureOutCardsIsMutable();
        outCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 outCards = 14;</code>
       *
       * <pre>
       *出去的牌
       * </pre>
       */
      public Builder addAllOutCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureOutCardsIsMutable();
        super.addAll(values, outCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 outCards = 14;</code>
       *
       * <pre>
       *出去的牌
       * </pre>
       */
      public Builder clearOutCards() {
        outCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00002000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes)
    }

    static {
      defaultInstance = new ClosingAhPhzPlayerInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.ClosingAhPhzPlayerInfoRes)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_PhzHuCards_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_PhzHuCards_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_PhzHuCardList_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_PhzHuCardList_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_ClosingPhzInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_ClosingPhzInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_ClosingPhzPlayerInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_ClosingPhzPlayerInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzPlayerInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzPlayerInfoRes_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\032files/TablePhzResMsg.proto\022\037com.sy599." +
      "game.msg.serverPacket\"9\n\nPhzHuCards\022\016\n\006a" +
      "ction\030\001 \002(\005\022\r\n\005cards\030\002 \003(\005\022\014\n\004huxi\030\003 \001(\005" +
      "\"[\n\rPhzHuCardList\022\014\n\004seat\030\001 \002(\005\022<\n\007phzCa" +
      "rd\030\002 \003(\0132+.com.sy599.game.msg.serverPack" +
      "et.PhzHuCards\"\262\004\n\021ClosingPhzInfoRes\022P\n\016c" +
      "losingPlayers\030\001 \003(\01328.com.sy599.game.msg" +
      ".serverPacket.ClosingPhzPlayerInfoRes\022\017\n" +
      "\007isBreak\030\002 \001(\005\022\r\n\005wanfa\030\003 \001(\005\022\013\n\003ext\030\004 \003" +
      "(\t\022\020\n\010matchExt\030\005 \003(\t\022:\n\005cards\030\006 \003(\0132+.co",
      "m.sy599.game.msg.serverPacket.PhzHuCards" +
      "\022\021\n\tleftCards\030\007 \003(\005\022\013\n\003tun\030\010 \001(\005\022\013\n\003fan\030" +
      "\t \001(\005\022\014\n\004huxi\030\n \001(\005\022\016\n\006huSeat\030\013 \001(\005\022\016\n\006h" +
      "uCard\030\014 \001(\005\022\020\n\010totalTun\030\r \001(\005\022\020\n\010fanType" +
      "s\030\016 \003(\005\022\017\n\007isRenew\030\017 \001(\005\022\022\n\nrenewCount\030\020" +
      " \001(\005\022\023\n\013pointRecord\030\021 \001(\t\022\026\n\016startLeftCa" +
      "rds\030\022 \003(\005\022\022\n\ngroupLogId\030\023 \001(\005\022\021\n\tchouCar" +
      "ds\030\024 \003(\005\022\021\n\tintParams\030\025 \003(\005\022E\n\rallCardsC" +
      "ombo\030\026 \003(\0132..com.sy599.game.msg.serverPa" +
      "cket.PhzHuCardList\"\320\003\n\027ClosingPhzPlayerI",
      "nfoRes\022\016\n\006userId\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\r\n\005" +
      "point\030\003 \001(\005\022\022\n\ntotalPoint\030\004 \001(\005\022\020\n\010winCo" +
      "unt\030\005 \001(\005\022\021\n\tlostCount\030\006 \001(\005\022\020\n\010maxPoint" +
      "\030\007 \001(\005\022\014\n\004seat\030\010 \002(\005\022\013\n\003sex\030\t \001(\005\022\014\n\004ico" +
      "n\030\n \001(\t\022\021\n\tbopiPoint\030\013 \001(\005\022\r\n\005cards\030\014 \003(" +
      "\005\022\021\n\tisShuXing\030\r \001(\005\022\023\n\013renewStatus\030\016 \001(" +
      "\005\022\022\n\nfirstCards\030\017 \003(\005\022\016\n\006strExt\030\021 \003(\t\022\025\n" +
      "\rwinLoseCredit\030\022 \001(\003\022\030\n\020commissionCredit" +
      "\030\023 \001(\003\022\017\n\007allHuxi\030\024 \001(\005\022\022\n\nfinalPoint\030\025 " +
      "\001(\005\022>\n\tmoldCards\030\026 \003(\0132+.com.sy599.game.",
      "msg.serverPacket.PhzHuCards\022\020\n\010goldFlag\030" +
      "\027 \001(\005\"\343\002\n\023ClosingAhPhzInfoRes\022R\n\016closing" +
      "Players\030\001 \003(\0132:.com.sy599.game.msg.serve" +
      "rPacket.ClosingAhPhzPlayerInfoRes\022\017\n\007isB" +
      "reak\030\002 \001(\005\022\r\n\005wanfa\030\003 \001(\005\022\013\n\003ext\030\004 \003(\t\022\020" +
      "\n\010matchExt\030\005 \003(\t\022:\n\005cards\030\006 \003(\0132+.com.sy" +
      "599.game.msg.serverPacket.PhzHuCards\022\021\n\t" +
      "leftCards\030\007 \003(\005\022\013\n\003tun\030\010 \001(\005\022\013\n\003fan\030\t \001(" +
      "\005\022\014\n\004huxi\030\n \001(\005\022\016\n\006huSeat\030\013 \001(\005\022\016\n\006huCar" +
      "d\030\014 \001(\005\022\020\n\010totalTun\030\r \001(\005\022\020\n\010fanTypes\030\016 ",
      "\003(\005\"\203\002\n\031ClosingAhPhzPlayerInfoRes\022\016\n\006use" +
      "rId\030\001 \001(\t\022\014\n\004name\030\002 \001(\t\022\r\n\005point\030\003 \001(\005\022\022" +
      "\n\ntotalPoint\030\004 \001(\005\022\020\n\010winCount\030\005 \001(\005\022\021\n\t" +
      "lostCount\030\006 \001(\005\022\020\n\010maxPoint\030\007 \001(\005\022\014\n\004sea" +
      "t\030\010 \002(\005\022\013\n\003sex\030\t \001(\005\022\014\n\004icon\030\n \001(\t\022\021\n\tbo" +
      "piPoint\030\013 \001(\005\022\r\n\005cards\030\014 \003(\005\022\021\n\tisShuXin" +
      "g\030\r \001(\005\022\020\n\010outCards\030\016 \003(\005"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_sy599_game_msg_serverPacket_PhzHuCards_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_sy599_game_msg_serverPacket_PhzHuCards_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_PhzHuCards_descriptor,
              new java.lang.String[] { "Action", "Cards", "Huxi", });
          internal_static_com_sy599_game_msg_serverPacket_PhzHuCardList_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_sy599_game_msg_serverPacket_PhzHuCardList_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_PhzHuCardList_descriptor,
              new java.lang.String[] { "Seat", "PhzCard", });
          internal_static_com_sy599_game_msg_serverPacket_ClosingPhzInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_sy599_game_msg_serverPacket_ClosingPhzInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_ClosingPhzInfoRes_descriptor,
              new java.lang.String[] { "ClosingPlayers", "IsBreak", "Wanfa", "Ext", "MatchExt", "Cards", "LeftCards", "Tun", "Fan", "Huxi", "HuSeat", "HuCard", "TotalTun", "FanTypes", "IsRenew", "RenewCount", "PointRecord", "StartLeftCards", "GroupLogId", "ChouCards", "IntParams", "AllCardsCombo", });
          internal_static_com_sy599_game_msg_serverPacket_ClosingPhzPlayerInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_sy599_game_msg_serverPacket_ClosingPhzPlayerInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_ClosingPhzPlayerInfoRes_descriptor,
              new java.lang.String[] { "UserId", "Name", "Point", "TotalPoint", "WinCount", "LostCount", "MaxPoint", "Seat", "Sex", "Icon", "BopiPoint", "Cards", "IsShuXing", "RenewStatus", "FirstCards", "StrExt", "WinLoseCredit", "CommissionCredit", "AllHuxi", "FinalPoint", "MoldCards", "GoldFlag", });
          internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(4);
          internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzInfoRes_descriptor,
              new java.lang.String[] { "ClosingPlayers", "IsBreak", "Wanfa", "Ext", "MatchExt", "Cards", "LeftCards", "Tun", "Fan", "Huxi", "HuSeat", "HuCard", "TotalTun", "FanTypes", });
          internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzPlayerInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(5);
          internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzPlayerInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_ClosingAhPhzPlayerInfoRes_descriptor,
              new java.lang.String[] { "UserId", "Name", "Point", "TotalPoint", "WinCount", "LostCount", "MaxPoint", "Seat", "Sex", "Icon", "BopiPoint", "Cards", "IsShuXing", "OutCards", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
