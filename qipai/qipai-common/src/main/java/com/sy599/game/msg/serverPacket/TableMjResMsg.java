// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/files/TableMjResMsg.proto

package com.sy599.game.msg.serverPacket;

public final class TableMjResMsg {
  private TableMjResMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface MjHuCardsOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required int32 action = 1;
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    boolean hasAction();
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    int getAction();

    // repeated int32 cards = 2;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    int getCards(int index);

    // repeated int32 ext = 3;
    /**
     * <code>repeated int32 ext = 3;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    java.util.List<java.lang.Integer> getExtList();
    /**
     * <code>repeated int32 ext = 3;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated int32 ext = 3;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    int getExt(int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.MjHuCards}
   *
   * <pre>
   *牌组
   * </pre>
   */
  public static final class MjHuCards extends
      com.google.protobuf.GeneratedMessage
      implements MjHuCardsOrBuilder {
    // Use MjHuCards.newBuilder() to construct.
    private MjHuCards(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MjHuCards(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MjHuCards defaultInstance;
    public static MjHuCards getDefaultInstance() {
      return defaultInstance;
    }

    public MjHuCards getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MjHuCards(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              action_ = input.readInt32();
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                ext_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              ext_.add(input.readInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                ext_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                ext_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          ext_ = java.util.Collections.unmodifiableList(ext_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_MjHuCards_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_MjHuCards_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.class, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder.class);
    }

    public static com.google.protobuf.Parser<MjHuCards> PARSER =
        new com.google.protobuf.AbstractParser<MjHuCards>() {
      public MjHuCards parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MjHuCards(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MjHuCards> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required int32 action = 1;
    public static final int ACTION_FIELD_NUMBER = 1;
    private int action_;
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    public boolean hasAction() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 action = 1;</code>
     *
     * <pre>
     *动作
     * </pre>
     */
    public int getAction() {
      return action_;
    }

    // repeated int32 cards = 2;
    public static final int CARDS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 2;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // repeated int32 ext = 3;
    public static final int EXT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> ext_;
    /**
     * <code>repeated int32 ext = 3;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated int32 ext = 3;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated int32 ext = 3;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    public int getExt(int index) {
      return ext_.get(index);
    }

    private void initFields() {
      action_ = 0;
      cards_ = java.util.Collections.emptyList();
      ext_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasAction()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, action_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(2, cards_.get(i));
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeInt32(3, ext_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, action_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(ext_.get(i));
        }
        size += dataSize;
        size += 1 * getExtList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.MjHuCards}
     *
     * <pre>
     *牌组
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCardsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_MjHuCards_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_MjHuCards_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.class, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        action_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        ext_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_MjHuCards_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards build() {
        com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards buildPartial() {
        com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards result = new com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.action_ = action_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.cards_ = cards_;
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          ext_ = java.util.Collections.unmodifiableList(ext_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.ext_ = ext_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards other) {
        if (other == com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.getDefaultInstance()) return this;
        if (other.hasAction()) {
          setAction(other.getAction());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasAction()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required int32 action = 1;
      private int action_ ;
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public boolean hasAction() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public int getAction() {
        return action_;
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder setAction(int value) {
        bitField0_ |= 0x00000001;
        action_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 action = 1;</code>
       *
       * <pre>
       *动作
       * </pre>
       */
      public Builder clearAction() {
        bitField0_ = (bitField0_ & ~0x00000001);
        action_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 2;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 2;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // repeated int32 ext = 3;
      private java.util.List<java.lang.Integer> ext_ = java.util.Collections.emptyList();
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          ext_ = new java.util.ArrayList<java.lang.Integer>(ext_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated int32 ext = 3;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated int32 ext = 3;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated int32 ext = 3;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public int getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated int32 ext = 3;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder setExt(
          int index, int value) {
        ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 3;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder addExt(int value) {
        ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 3;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 3;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder clearExt() {
        ext_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.MjHuCards)
    }

    static {
      defaultInstance = new MjHuCards(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.MjHuCards)
  }

  public interface ClosingMjPlayerInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string userId = 1;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // required int32 seat = 3;
    /**
     * <code>required int32 seat = 3;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>required int32 seat = 3;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    int getSeat();

    // optional int32 sex = 4;
    /**
     * <code>optional int32 sex = 4;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 4;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    int getSex();

    // optional string icon = 5;
    /**
     * <code>optional string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    boolean hasIcon();
    /**
     * <code>optional string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    java.lang.String getIcon();
    /**
     * <code>optional string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    // optional int32 point = 6;
    /**
     * <code>optional int32 point = 6;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    boolean hasPoint();
    /**
     * <code>optional int32 point = 6;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    int getPoint();

    // optional int32 totalPoint = 7;
    /**
     * <code>optional int32 totalPoint = 7;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    boolean hasTotalPoint();
    /**
     * <code>optional int32 totalPoint = 7;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    int getTotalPoint();

    // optional int32 winCount = 8;
    /**
     * <code>optional int32 winCount = 8;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    boolean hasWinCount();
    /**
     * <code>optional int32 winCount = 8;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    int getWinCount();

    // optional int32 lostCount = 9;
    /**
     * <code>optional int32 lostCount = 9;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    boolean hasLostCount();
    /**
     * <code>optional int32 lostCount = 9;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    int getLostCount();

    // optional int32 maxPoint = 10;
    /**
     * <code>optional int32 maxPoint = 10;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    boolean hasMaxPoint();
    /**
     * <code>optional int32 maxPoint = 10;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    int getMaxPoint();

    // optional int32 zmCount = 11;
    /**
     * <code>optional int32 zmCount = 11;</code>
     */
    boolean hasZmCount();
    /**
     * <code>optional int32 zmCount = 11;</code>
     */
    int getZmCount();

    // optional int32 jpCount = 12;
    /**
     * <code>optional int32 jpCount = 12;</code>
     */
    boolean hasJpCount();
    /**
     * <code>optional int32 jpCount = 12;</code>
     */
    int getJpCount();

    // optional int32 fpCount = 13;
    /**
     * <code>optional int32 fpCount = 13;</code>
     */
    boolean hasFpCount();
    /**
     * <code>optional int32 fpCount = 13;</code>
     */
    int getFpCount();

    // optional int32 totalFan = 14;
    /**
     * <code>optional int32 totalFan = 14;</code>
     */
    boolean hasTotalFan();
    /**
     * <code>optional int32 totalFan = 14;</code>
     */
    int getTotalFan();

    // repeated int32 ext = 15;
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    java.util.List<java.lang.Integer> getExtList();
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    int getExt(int index);

    // repeated int32 handPais = 16;
    /**
     * <code>repeated int32 handPais = 16;</code>
     *
     * <pre>
     *所有手牌id
     * </pre>
     */
    java.util.List<java.lang.Integer> getHandPaisList();
    /**
     * <code>repeated int32 handPais = 16;</code>
     *
     * <pre>
     *所有手牌id
     * </pre>
     */
    int getHandPaisCount();
    /**
     * <code>repeated int32 handPais = 16;</code>
     *
     * <pre>
     *所有手牌id
     * </pre>
     */
    int getHandPais(int index);

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
     *
     * <pre>
     *吃碰杠
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> 
        getMoldPaisList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
     *
     * <pre>
     *吃碰杠
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMoldPais(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
     *
     * <pre>
     *吃碰杠
     * </pre>
     */
    int getMoldPaisCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
     *
     * <pre>
     *吃碰杠
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMoldPaisOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
     *
     * <pre>
     *吃碰杠
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMoldPaisOrBuilder(
        int index);

    // optional int32 isHu = 18;
    /**
     * <code>optional int32 isHu = 18;</code>
     *
     * <pre>
     *胡牌ID
     * </pre>
     */
    boolean hasIsHu();
    /**
     * <code>optional int32 isHu = 18;</code>
     *
     * <pre>
     *胡牌ID
     * </pre>
     */
    int getIsHu();

    // optional int32 birdPoint = 19;
    /**
     * <code>optional int32 birdPoint = 19;</code>
     */
    boolean hasBirdPoint();
    /**
     * <code>optional int32 birdPoint = 19;</code>
     */
    int getBirdPoint();

    // repeated int32 actionCount = 20;
    /**
     * <code>repeated int32 actionCount = 20;</code>
     *
     * <pre>
     *所用动作次数
     * </pre>
     */
    java.util.List<java.lang.Integer> getActionCountList();
    /**
     * <code>repeated int32 actionCount = 20;</code>
     *
     * <pre>
     *所用动作次数
     * </pre>
     */
    int getActionCountCount();
    /**
     * <code>repeated int32 actionCount = 20;</code>
     *
     * <pre>
     *所用动作次数
     * </pre>
     */
    int getActionCount(int index);

    // repeated int32 dahus = 21;
    /**
     * <code>repeated int32 dahus = 21;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    java.util.List<java.lang.Integer> getDahusList();
    /**
     * <code>repeated int32 dahus = 21;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    int getDahusCount();
    /**
     * <code>repeated int32 dahus = 21;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    int getDahus(int index);

    // repeated int32 xiaohus = 22;
    /**
     * <code>repeated int32 xiaohus = 22;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    java.util.List<java.lang.Integer> getXiaohusList();
    /**
     * <code>repeated int32 xiaohus = 22;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    int getXiaohusCount();
    /**
     * <code>repeated int32 xiaohus = 22;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    int getXiaohus(int index);

    // optional int32 credit = 23;
    /**
     * <code>optional int32 credit = 23;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    boolean hasCredit();
    /**
     * <code>optional int32 credit = 23;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    int getCredit();

    // optional int64 winLoseCredit = 24;
    /**
     * <code>optional int64 winLoseCredit = 24;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    boolean hasWinLoseCredit();
    /**
     * <code>optional int64 winLoseCredit = 24;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    long getWinLoseCredit();

    // optional int64 commissionCredit = 25;
    /**
     * <code>optional int64 commissionCredit = 25;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    boolean hasCommissionCredit();
    /**
     * <code>optional int64 commissionCredit = 25;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    long getCommissionCredit();

    // repeated int32 pointArr = 26;
    /**
     * <code>repeated int32 pointArr = 26;</code>
     *
     * <pre>
     *[类型]=分值
     * </pre>
     */
    java.util.List<java.lang.Integer> getPointArrList();
    /**
     * <code>repeated int32 pointArr = 26;</code>
     *
     * <pre>
     *[类型]=分值
     * </pre>
     */
    int getPointArrCount();
    /**
     * <code>repeated int32 pointArr = 26;</code>
     *
     * <pre>
     *[类型]=分值
     * </pre>
     */
    int getPointArr(int index);

    // optional int32 fanPao = 27;
    /**
     * <code>optional int32 fanPao = 27;</code>
     *
     * <pre>
     *是否放炮：0否，1是
     * </pre>
     */
    boolean hasFanPao();
    /**
     * <code>optional int32 fanPao = 27;</code>
     *
     * <pre>
     *是否放炮：0否，1是
     * </pre>
     */
    int getFanPao();

    // optional int32 goldFlag = 28;
    /**
     * <code>optional int32 goldFlag = 28;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    boolean hasGoldFlag();
    /**
     * <code>optional int32 goldFlag = 28;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    int getGoldFlag();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes}
   *
   * <pre>
   *单个玩家结算
   * </pre>
   */
  public static final class ClosingMjPlayerInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements ClosingMjPlayerInfoResOrBuilder {
    // Use ClosingMjPlayerInfoRes.newBuilder() to construct.
    private ClosingMjPlayerInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosingMjPlayerInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosingMjPlayerInfoRes defaultInstance;
    public static ClosingMjPlayerInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public ClosingMjPlayerInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosingMjPlayerInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              seat_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              sex_ = input.readInt32();
              break;
            }
            case 42: {
              bitField0_ |= 0x00000010;
              icon_ = input.readBytes();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              point_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              totalPoint_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              winCount_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              lostCount_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000200;
              maxPoint_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              zmCount_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              jpCount_ = input.readInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              fpCount_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00002000;
              totalFan_ = input.readInt32();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                ext_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              ext_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                ext_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                ext_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                handPais_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              handPais_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                handPais_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                handPais_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 138: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                moldPais_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>();
                mutable_bitField0_ |= 0x00010000;
              }
              moldPais_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.PARSER, extensionRegistry));
              break;
            }
            case 144: {
              bitField0_ |= 0x00004000;
              isHu_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00008000;
              birdPoint_ = input.readInt32();
              break;
            }
            case 160: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                actionCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              actionCount_.add(input.readInt32());
              break;
            }
            case 162: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000) && input.getBytesUntilLimit() > 0) {
                actionCount_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00080000;
              }
              while (input.getBytesUntilLimit() > 0) {
                actionCount_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 168: {
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                dahus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              dahus_.add(input.readInt32());
              break;
            }
            case 170: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000) && input.getBytesUntilLimit() > 0) {
                dahus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00100000;
              }
              while (input.getBytesUntilLimit() > 0) {
                dahus_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 176: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                xiaohus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00200000;
              }
              xiaohus_.add(input.readInt32());
              break;
            }
            case 178: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000) && input.getBytesUntilLimit() > 0) {
                xiaohus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00200000;
              }
              while (input.getBytesUntilLimit() > 0) {
                xiaohus_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 184: {
              bitField0_ |= 0x00010000;
              credit_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00020000;
              winLoseCredit_ = input.readInt64();
              break;
            }
            case 200: {
              bitField0_ |= 0x00040000;
              commissionCredit_ = input.readInt64();
              break;
            }
            case 208: {
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                pointArr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x02000000;
              }
              pointArr_.add(input.readInt32());
              break;
            }
            case 210: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000) && input.getBytesUntilLimit() > 0) {
                pointArr_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x02000000;
              }
              while (input.getBytesUntilLimit() > 0) {
                pointArr_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 216: {
              bitField0_ |= 0x00080000;
              fanPao_ = input.readInt32();
              break;
            }
            case 224: {
              bitField0_ |= 0x00100000;
              goldFlag_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          ext_ = java.util.Collections.unmodifiableList(ext_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          handPais_ = java.util.Collections.unmodifiableList(handPais_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          moldPais_ = java.util.Collections.unmodifiableList(moldPais_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          actionCount_ = java.util.Collections.unmodifiableList(actionCount_);
        }
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          dahus_ = java.util.Collections.unmodifiableList(dahus_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          xiaohus_ = java.util.Collections.unmodifiableList(xiaohus_);
        }
        if (((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
          pointArr_ = java.util.Collections.unmodifiableList(pointArr_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingMjPlayerInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingMjPlayerInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosingMjPlayerInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<ClosingMjPlayerInfoRes>() {
      public ClosingMjPlayerInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosingMjPlayerInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosingMjPlayerInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // required int32 seat = 3;
    public static final int SEAT_FIELD_NUMBER = 3;
    private int seat_;
    /**
     * <code>required int32 seat = 3;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 seat = 3;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // optional int32 sex = 4;
    public static final int SEX_FIELD_NUMBER = 4;
    private int sex_;
    /**
     * <code>optional int32 sex = 4;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 sex = 4;</code>
     *
     * <pre>
     *性别
     * </pre>
     */
    public int getSex() {
      return sex_;
    }

    // optional string icon = 5;
    public static final int ICON_FIELD_NUMBER = 5;
    private java.lang.Object icon_;
    /**
     * <code>optional string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    public boolean hasIcon() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          icon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string icon = 5;</code>
     *
     * <pre>
     *头像
     * </pre>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 point = 6;
    public static final int POINT_FIELD_NUMBER = 6;
    private int point_;
    /**
     * <code>optional int32 point = 6;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public boolean hasPoint() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 point = 6;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public int getPoint() {
      return point_;
    }

    // optional int32 totalPoint = 7;
    public static final int TOTALPOINT_FIELD_NUMBER = 7;
    private int totalPoint_;
    /**
     * <code>optional int32 totalPoint = 7;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public boolean hasTotalPoint() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 totalPoint = 7;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public int getTotalPoint() {
      return totalPoint_;
    }

    // optional int32 winCount = 8;
    public static final int WINCOUNT_FIELD_NUMBER = 8;
    private int winCount_;
    /**
     * <code>optional int32 winCount = 8;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    public boolean hasWinCount() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 winCount = 8;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    public int getWinCount() {
      return winCount_;
    }

    // optional int32 lostCount = 9;
    public static final int LOSTCOUNT_FIELD_NUMBER = 9;
    private int lostCount_;
    /**
     * <code>optional int32 lostCount = 9;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    public boolean hasLostCount() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 lostCount = 9;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    public int getLostCount() {
      return lostCount_;
    }

    // optional int32 maxPoint = 10;
    public static final int MAXPOINT_FIELD_NUMBER = 10;
    private int maxPoint_;
    /**
     * <code>optional int32 maxPoint = 10;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    public boolean hasMaxPoint() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 maxPoint = 10;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    public int getMaxPoint() {
      return maxPoint_;
    }

    // optional int32 zmCount = 11;
    public static final int ZMCOUNT_FIELD_NUMBER = 11;
    private int zmCount_;
    /**
     * <code>optional int32 zmCount = 11;</code>
     */
    public boolean hasZmCount() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 zmCount = 11;</code>
     */
    public int getZmCount() {
      return zmCount_;
    }

    // optional int32 jpCount = 12;
    public static final int JPCOUNT_FIELD_NUMBER = 12;
    private int jpCount_;
    /**
     * <code>optional int32 jpCount = 12;</code>
     */
    public boolean hasJpCount() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 jpCount = 12;</code>
     */
    public int getJpCount() {
      return jpCount_;
    }

    // optional int32 fpCount = 13;
    public static final int FPCOUNT_FIELD_NUMBER = 13;
    private int fpCount_;
    /**
     * <code>optional int32 fpCount = 13;</code>
     */
    public boolean hasFpCount() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 fpCount = 13;</code>
     */
    public int getFpCount() {
      return fpCount_;
    }

    // optional int32 totalFan = 14;
    public static final int TOTALFAN_FIELD_NUMBER = 14;
    private int totalFan_;
    /**
     * <code>optional int32 totalFan = 14;</code>
     */
    public boolean hasTotalFan() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 totalFan = 14;</code>
     */
    public int getTotalFan() {
      return totalFan_;
    }

    // repeated int32 ext = 15;
    public static final int EXT_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> ext_;
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated int32 ext = 15;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    public int getExt(int index) {
      return ext_.get(index);
    }

    // repeated int32 handPais = 16;
    public static final int HANDPAIS_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> handPais_;
    /**
     * <code>repeated int32 handPais = 16;</code>
     *
     * <pre>
     *所有手牌id
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getHandPaisList() {
      return handPais_;
    }
    /**
     * <code>repeated int32 handPais = 16;</code>
     *
     * <pre>
     *所有手牌id
     * </pre>
     */
    public int getHandPaisCount() {
      return handPais_.size();
    }
    /**
     * <code>repeated int32 handPais = 16;</code>
     *
     * <pre>
     *所有手牌id
     * </pre>
     */
    public int getHandPais(int index) {
      return handPais_.get(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;
    public static final int MOLDPAIS_FIELD_NUMBER = 17;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> moldPais_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
     *
     * <pre>
     *吃碰杠
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMoldPaisList() {
      return moldPais_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
     *
     * <pre>
     *吃碰杠
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMoldPaisOrBuilderList() {
      return moldPais_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
     *
     * <pre>
     *吃碰杠
     * </pre>
     */
    public int getMoldPaisCount() {
      return moldPais_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
     *
     * <pre>
     *吃碰杠
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMoldPais(int index) {
      return moldPais_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
     *
     * <pre>
     *吃碰杠
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMoldPaisOrBuilder(
        int index) {
      return moldPais_.get(index);
    }

    // optional int32 isHu = 18;
    public static final int ISHU_FIELD_NUMBER = 18;
    private int isHu_;
    /**
     * <code>optional int32 isHu = 18;</code>
     *
     * <pre>
     *胡牌ID
     * </pre>
     */
    public boolean hasIsHu() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 isHu = 18;</code>
     *
     * <pre>
     *胡牌ID
     * </pre>
     */
    public int getIsHu() {
      return isHu_;
    }

    // optional int32 birdPoint = 19;
    public static final int BIRDPOINT_FIELD_NUMBER = 19;
    private int birdPoint_;
    /**
     * <code>optional int32 birdPoint = 19;</code>
     */
    public boolean hasBirdPoint() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 birdPoint = 19;</code>
     */
    public int getBirdPoint() {
      return birdPoint_;
    }

    // repeated int32 actionCount = 20;
    public static final int ACTIONCOUNT_FIELD_NUMBER = 20;
    private java.util.List<java.lang.Integer> actionCount_;
    /**
     * <code>repeated int32 actionCount = 20;</code>
     *
     * <pre>
     *所用动作次数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getActionCountList() {
      return actionCount_;
    }
    /**
     * <code>repeated int32 actionCount = 20;</code>
     *
     * <pre>
     *所用动作次数
     * </pre>
     */
    public int getActionCountCount() {
      return actionCount_.size();
    }
    /**
     * <code>repeated int32 actionCount = 20;</code>
     *
     * <pre>
     *所用动作次数
     * </pre>
     */
    public int getActionCount(int index) {
      return actionCount_.get(index);
    }

    // repeated int32 dahus = 21;
    public static final int DAHUS_FIELD_NUMBER = 21;
    private java.util.List<java.lang.Integer> dahus_;
    /**
     * <code>repeated int32 dahus = 21;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDahusList() {
      return dahus_;
    }
    /**
     * <code>repeated int32 dahus = 21;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    public int getDahusCount() {
      return dahus_.size();
    }
    /**
     * <code>repeated int32 dahus = 21;</code>
     *
     * <pre>
     *大胡
     * </pre>
     */
    public int getDahus(int index) {
      return dahus_.get(index);
    }

    // repeated int32 xiaohus = 22;
    public static final int XIAOHUS_FIELD_NUMBER = 22;
    private java.util.List<java.lang.Integer> xiaohus_;
    /**
     * <code>repeated int32 xiaohus = 22;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getXiaohusList() {
      return xiaohus_;
    }
    /**
     * <code>repeated int32 xiaohus = 22;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    public int getXiaohusCount() {
      return xiaohus_.size();
    }
    /**
     * <code>repeated int32 xiaohus = 22;</code>
     *
     * <pre>
     *小胡
     * </pre>
     */
    public int getXiaohus(int index) {
      return xiaohus_.get(index);
    }

    // optional int32 credit = 23;
    public static final int CREDIT_FIELD_NUMBER = 23;
    private int credit_;
    /**
     * <code>optional int32 credit = 23;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    public boolean hasCredit() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 credit = 23;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    public int getCredit() {
      return credit_;
    }

    // optional int64 winLoseCredit = 24;
    public static final int WINLOSECREDIT_FIELD_NUMBER = 24;
    private long winLoseCredit_;
    /**
     * <code>optional int64 winLoseCredit = 24;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    public boolean hasWinLoseCredit() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int64 winLoseCredit = 24;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    public long getWinLoseCredit() {
      return winLoseCredit_;
    }

    // optional int64 commissionCredit = 25;
    public static final int COMMISSIONCREDIT_FIELD_NUMBER = 25;
    private long commissionCredit_;
    /**
     * <code>optional int64 commissionCredit = 25;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    public boolean hasCommissionCredit() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int64 commissionCredit = 25;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    public long getCommissionCredit() {
      return commissionCredit_;
    }

    // repeated int32 pointArr = 26;
    public static final int POINTARR_FIELD_NUMBER = 26;
    private java.util.List<java.lang.Integer> pointArr_;
    /**
     * <code>repeated int32 pointArr = 26;</code>
     *
     * <pre>
     *[类型]=分值
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getPointArrList() {
      return pointArr_;
    }
    /**
     * <code>repeated int32 pointArr = 26;</code>
     *
     * <pre>
     *[类型]=分值
     * </pre>
     */
    public int getPointArrCount() {
      return pointArr_.size();
    }
    /**
     * <code>repeated int32 pointArr = 26;</code>
     *
     * <pre>
     *[类型]=分值
     * </pre>
     */
    public int getPointArr(int index) {
      return pointArr_.get(index);
    }

    // optional int32 fanPao = 27;
    public static final int FANPAO_FIELD_NUMBER = 27;
    private int fanPao_;
    /**
     * <code>optional int32 fanPao = 27;</code>
     *
     * <pre>
     *是否放炮：0否，1是
     * </pre>
     */
    public boolean hasFanPao() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int32 fanPao = 27;</code>
     *
     * <pre>
     *是否放炮：0否，1是
     * </pre>
     */
    public int getFanPao() {
      return fanPao_;
    }

    // optional int32 goldFlag = 28;
    public static final int GOLDFLAG_FIELD_NUMBER = 28;
    private int goldFlag_;
    /**
     * <code>optional int32 goldFlag = 28;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    public boolean hasGoldFlag() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int32 goldFlag = 28;</code>
     *
     * <pre>
     *金币场结算标记：1 破产2封顶
     * </pre>
     */
    public int getGoldFlag() {
      return goldFlag_;
    }

    private void initFields() {
      userId_ = "";
      name_ = "";
      seat_ = 0;
      sex_ = 0;
      icon_ = "";
      point_ = 0;
      totalPoint_ = 0;
      winCount_ = 0;
      lostCount_ = 0;
      maxPoint_ = 0;
      zmCount_ = 0;
      jpCount_ = 0;
      fpCount_ = 0;
      totalFan_ = 0;
      ext_ = java.util.Collections.emptyList();
      handPais_ = java.util.Collections.emptyList();
      moldPais_ = java.util.Collections.emptyList();
      isHu_ = 0;
      birdPoint_ = 0;
      actionCount_ = java.util.Collections.emptyList();
      dahus_ = java.util.Collections.emptyList();
      xiaohus_ = java.util.Collections.emptyList();
      credit_ = 0;
      winLoseCredit_ = 0L;
      commissionCredit_ = 0L;
      pointArr_ = java.util.Collections.emptyList();
      fanPao_ = 0;
      goldFlag_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMoldPaisCount(); i++) {
        if (!getMoldPais(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, seat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, sex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getIconBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, point_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, totalPoint_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, winCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, lostCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(10, maxPoint_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, zmCount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(12, jpCount_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(13, fpCount_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(14, totalFan_);
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeInt32(15, ext_.get(i));
      }
      for (int i = 0; i < handPais_.size(); i++) {
        output.writeInt32(16, handPais_.get(i));
      }
      for (int i = 0; i < moldPais_.size(); i++) {
        output.writeMessage(17, moldPais_.get(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(18, isHu_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(19, birdPoint_);
      }
      for (int i = 0; i < actionCount_.size(); i++) {
        output.writeInt32(20, actionCount_.get(i));
      }
      for (int i = 0; i < dahus_.size(); i++) {
        output.writeInt32(21, dahus_.get(i));
      }
      for (int i = 0; i < xiaohus_.size(); i++) {
        output.writeInt32(22, xiaohus_.get(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(23, credit_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt64(24, winLoseCredit_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt64(25, commissionCredit_);
      }
      for (int i = 0; i < pointArr_.size(); i++) {
        output.writeInt32(26, pointArr_.get(i));
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt32(27, fanPao_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt32(28, goldFlag_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, seat_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, sex_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getIconBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, point_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, totalPoint_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, winCount_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, lostCount_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, maxPoint_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, zmCount_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, jpCount_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, fpCount_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, totalFan_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(ext_.get(i));
        }
        size += dataSize;
        size += 1 * getExtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < handPais_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(handPais_.get(i));
        }
        size += dataSize;
        size += 2 * getHandPaisList().size();
      }
      for (int i = 0; i < moldPais_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(17, moldPais_.get(i));
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, isHu_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, birdPoint_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < actionCount_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(actionCount_.get(i));
        }
        size += dataSize;
        size += 2 * getActionCountList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dahus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dahus_.get(i));
        }
        size += dataSize;
        size += 2 * getDahusList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < xiaohus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(xiaohus_.get(i));
        }
        size += dataSize;
        size += 2 * getXiaohusList().size();
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, credit_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(24, winLoseCredit_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(25, commissionCredit_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < pointArr_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(pointArr_.get(i));
        }
        size += dataSize;
        size += 2 * getPointArrList().size();
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(27, fanPao_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(28, goldFlag_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes}
     *
     * <pre>
     *单个玩家结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingMjPlayerInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingMjPlayerInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMoldPaisFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        icon_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        point_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        totalPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        winCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        lostCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        maxPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        zmCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        jpCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        fpCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        totalFan_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        ext_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        handPais_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        if (moldPaisBuilder_ == null) {
          moldPais_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          moldPaisBuilder_.clear();
        }
        isHu_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        birdPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        actionCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        dahus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        xiaohus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        credit_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        winLoseCredit_ = 0L;
        bitField0_ = (bitField0_ & ~0x00800000);
        commissionCredit_ = 0L;
        bitField0_ = (bitField0_ & ~0x01000000);
        pointArr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        fanPao_ = 0;
        bitField0_ = (bitField0_ & ~0x04000000);
        goldFlag_ = 0;
        bitField0_ = (bitField0_ & ~0x08000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingMjPlayerInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes build() {
        com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes result = new com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.icon_ = icon_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.point_ = point_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.totalPoint_ = totalPoint_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.winCount_ = winCount_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.lostCount_ = lostCount_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.maxPoint_ = maxPoint_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.zmCount_ = zmCount_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.jpCount_ = jpCount_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.fpCount_ = fpCount_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.totalFan_ = totalFan_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          ext_ = java.util.Collections.unmodifiableList(ext_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.ext_ = ext_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          handPais_ = java.util.Collections.unmodifiableList(handPais_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.handPais_ = handPais_;
        if (moldPaisBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            moldPais_ = java.util.Collections.unmodifiableList(moldPais_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.moldPais_ = moldPais_;
        } else {
          result.moldPais_ = moldPaisBuilder_.build();
        }
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.isHu_ = isHu_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.birdPoint_ = birdPoint_;
        if (((bitField0_ & 0x00080000) == 0x00080000)) {
          actionCount_ = java.util.Collections.unmodifiableList(actionCount_);
          bitField0_ = (bitField0_ & ~0x00080000);
        }
        result.actionCount_ = actionCount_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          dahus_ = java.util.Collections.unmodifiableList(dahus_);
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.dahus_ = dahus_;
        if (((bitField0_ & 0x00200000) == 0x00200000)) {
          xiaohus_ = java.util.Collections.unmodifiableList(xiaohus_);
          bitField0_ = (bitField0_ & ~0x00200000);
        }
        result.xiaohus_ = xiaohus_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.credit_ = credit_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.winLoseCredit_ = winLoseCredit_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.commissionCredit_ = commissionCredit_;
        if (((bitField0_ & 0x02000000) == 0x02000000)) {
          pointArr_ = java.util.Collections.unmodifiableList(pointArr_);
          bitField0_ = (bitField0_ & ~0x02000000);
        }
        result.pointArr_ = pointArr_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.fanPao_ = fanPao_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.goldFlag_ = goldFlag_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasIcon()) {
          bitField0_ |= 0x00000010;
          icon_ = other.icon_;
          onChanged();
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        if (other.hasTotalPoint()) {
          setTotalPoint(other.getTotalPoint());
        }
        if (other.hasWinCount()) {
          setWinCount(other.getWinCount());
        }
        if (other.hasLostCount()) {
          setLostCount(other.getLostCount());
        }
        if (other.hasMaxPoint()) {
          setMaxPoint(other.getMaxPoint());
        }
        if (other.hasZmCount()) {
          setZmCount(other.getZmCount());
        }
        if (other.hasJpCount()) {
          setJpCount(other.getJpCount());
        }
        if (other.hasFpCount()) {
          setFpCount(other.getFpCount());
        }
        if (other.hasTotalFan()) {
          setTotalFan(other.getTotalFan());
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        if (!other.handPais_.isEmpty()) {
          if (handPais_.isEmpty()) {
            handPais_ = other.handPais_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureHandPaisIsMutable();
            handPais_.addAll(other.handPais_);
          }
          onChanged();
        }
        if (moldPaisBuilder_ == null) {
          if (!other.moldPais_.isEmpty()) {
            if (moldPais_.isEmpty()) {
              moldPais_ = other.moldPais_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureMoldPaisIsMutable();
              moldPais_.addAll(other.moldPais_);
            }
            onChanged();
          }
        } else {
          if (!other.moldPais_.isEmpty()) {
            if (moldPaisBuilder_.isEmpty()) {
              moldPaisBuilder_.dispose();
              moldPaisBuilder_ = null;
              moldPais_ = other.moldPais_;
              bitField0_ = (bitField0_ & ~0x00010000);
              moldPaisBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMoldPaisFieldBuilder() : null;
            } else {
              moldPaisBuilder_.addAllMessages(other.moldPais_);
            }
          }
        }
        if (other.hasIsHu()) {
          setIsHu(other.getIsHu());
        }
        if (other.hasBirdPoint()) {
          setBirdPoint(other.getBirdPoint());
        }
        if (!other.actionCount_.isEmpty()) {
          if (actionCount_.isEmpty()) {
            actionCount_ = other.actionCount_;
            bitField0_ = (bitField0_ & ~0x00080000);
          } else {
            ensureActionCountIsMutable();
            actionCount_.addAll(other.actionCount_);
          }
          onChanged();
        }
        if (!other.dahus_.isEmpty()) {
          if (dahus_.isEmpty()) {
            dahus_ = other.dahus_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureDahusIsMutable();
            dahus_.addAll(other.dahus_);
          }
          onChanged();
        }
        if (!other.xiaohus_.isEmpty()) {
          if (xiaohus_.isEmpty()) {
            xiaohus_ = other.xiaohus_;
            bitField0_ = (bitField0_ & ~0x00200000);
          } else {
            ensureXiaohusIsMutable();
            xiaohus_.addAll(other.xiaohus_);
          }
          onChanged();
        }
        if (other.hasCredit()) {
          setCredit(other.getCredit());
        }
        if (other.hasWinLoseCredit()) {
          setWinLoseCredit(other.getWinLoseCredit());
        }
        if (other.hasCommissionCredit()) {
          setCommissionCredit(other.getCommissionCredit());
        }
        if (!other.pointArr_.isEmpty()) {
          if (pointArr_.isEmpty()) {
            pointArr_ = other.pointArr_;
            bitField0_ = (bitField0_ & ~0x02000000);
          } else {
            ensurePointArrIsMutable();
            pointArr_.addAll(other.pointArr_);
          }
          onChanged();
        }
        if (other.hasFanPao()) {
          setFanPao(other.getFanPao());
        }
        if (other.hasGoldFlag()) {
          setGoldFlag(other.getGoldFlag());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeat()) {
          
          return false;
        }
        for (int i = 0; i < getMoldPaisCount(); i++) {
          if (!getMoldPais(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // required int32 seat = 3;
      private int seat_ ;
      /**
       * <code>required int32 seat = 3;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 seat = 3;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>required int32 seat = 3;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000004;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 seat = 3;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        seat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 4;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 4;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 sex = 4;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 4;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000008;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 4;</code>
       *
       * <pre>
       *性别
       * </pre>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional string icon = 5;
      private java.lang.Object icon_ = "";
      /**
       * <code>optional string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public boolean hasIcon() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public Builder clearIcon() {
        bitField0_ = (bitField0_ & ~0x00000010);
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 5;</code>
       *
       * <pre>
       *头像
       * </pre>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        icon_ = value;
        onChanged();
        return this;
      }

      // optional int32 point = 6;
      private int point_ ;
      /**
       * <code>optional int32 point = 6;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public boolean hasPoint() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 point = 6;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public int getPoint() {
        return point_;
      }
      /**
       * <code>optional int32 point = 6;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder setPoint(int value) {
        bitField0_ |= 0x00000020;
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 point = 6;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder clearPoint() {
        bitField0_ = (bitField0_ & ~0x00000020);
        point_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalPoint = 7;
      private int totalPoint_ ;
      /**
       * <code>optional int32 totalPoint = 7;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public boolean hasTotalPoint() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 totalPoint = 7;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public int getTotalPoint() {
        return totalPoint_;
      }
      /**
       * <code>optional int32 totalPoint = 7;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder setTotalPoint(int value) {
        bitField0_ |= 0x00000040;
        totalPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalPoint = 7;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder clearTotalPoint() {
        bitField0_ = (bitField0_ & ~0x00000040);
        totalPoint_ = 0;
        onChanged();
        return this;
      }

      // optional int32 winCount = 8;
      private int winCount_ ;
      /**
       * <code>optional int32 winCount = 8;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public boolean hasWinCount() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 winCount = 8;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public int getWinCount() {
        return winCount_;
      }
      /**
       * <code>optional int32 winCount = 8;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public Builder setWinCount(int value) {
        bitField0_ |= 0x00000080;
        winCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 winCount = 8;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public Builder clearWinCount() {
        bitField0_ = (bitField0_ & ~0x00000080);
        winCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lostCount = 9;
      private int lostCount_ ;
      /**
       * <code>optional int32 lostCount = 9;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public boolean hasLostCount() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 lostCount = 9;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public int getLostCount() {
        return lostCount_;
      }
      /**
       * <code>optional int32 lostCount = 9;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public Builder setLostCount(int value) {
        bitField0_ |= 0x00000100;
        lostCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lostCount = 9;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public Builder clearLostCount() {
        bitField0_ = (bitField0_ & ~0x00000100);
        lostCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxPoint = 10;
      private int maxPoint_ ;
      /**
       * <code>optional int32 maxPoint = 10;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public boolean hasMaxPoint() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 maxPoint = 10;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public int getMaxPoint() {
        return maxPoint_;
      }
      /**
       * <code>optional int32 maxPoint = 10;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public Builder setMaxPoint(int value) {
        bitField0_ |= 0x00000200;
        maxPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxPoint = 10;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public Builder clearMaxPoint() {
        bitField0_ = (bitField0_ & ~0x00000200);
        maxPoint_ = 0;
        onChanged();
        return this;
      }

      // optional int32 zmCount = 11;
      private int zmCount_ ;
      /**
       * <code>optional int32 zmCount = 11;</code>
       */
      public boolean hasZmCount() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 zmCount = 11;</code>
       */
      public int getZmCount() {
        return zmCount_;
      }
      /**
       * <code>optional int32 zmCount = 11;</code>
       */
      public Builder setZmCount(int value) {
        bitField0_ |= 0x00000400;
        zmCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zmCount = 11;</code>
       */
      public Builder clearZmCount() {
        bitField0_ = (bitField0_ & ~0x00000400);
        zmCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 jpCount = 12;
      private int jpCount_ ;
      /**
       * <code>optional int32 jpCount = 12;</code>
       */
      public boolean hasJpCount() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 jpCount = 12;</code>
       */
      public int getJpCount() {
        return jpCount_;
      }
      /**
       * <code>optional int32 jpCount = 12;</code>
       */
      public Builder setJpCount(int value) {
        bitField0_ |= 0x00000800;
        jpCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 jpCount = 12;</code>
       */
      public Builder clearJpCount() {
        bitField0_ = (bitField0_ & ~0x00000800);
        jpCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fpCount = 13;
      private int fpCount_ ;
      /**
       * <code>optional int32 fpCount = 13;</code>
       */
      public boolean hasFpCount() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 fpCount = 13;</code>
       */
      public int getFpCount() {
        return fpCount_;
      }
      /**
       * <code>optional int32 fpCount = 13;</code>
       */
      public Builder setFpCount(int value) {
        bitField0_ |= 0x00001000;
        fpCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fpCount = 13;</code>
       */
      public Builder clearFpCount() {
        bitField0_ = (bitField0_ & ~0x00001000);
        fpCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalFan = 14;
      private int totalFan_ ;
      /**
       * <code>optional int32 totalFan = 14;</code>
       */
      public boolean hasTotalFan() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 totalFan = 14;</code>
       */
      public int getTotalFan() {
        return totalFan_;
      }
      /**
       * <code>optional int32 totalFan = 14;</code>
       */
      public Builder setTotalFan(int value) {
        bitField0_ |= 0x00002000;
        totalFan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalFan = 14;</code>
       */
      public Builder clearTotalFan() {
        bitField0_ = (bitField0_ & ~0x00002000);
        totalFan_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 ext = 15;
      private java.util.List<java.lang.Integer> ext_ = java.util.Collections.emptyList();
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          ext_ = new java.util.ArrayList<java.lang.Integer>(ext_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public int getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder setExt(
          int index, int value) {
        ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder addExt(int value) {
        ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 ext = 15;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder clearExt() {
        ext_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated int32 handPais = 16;
      private java.util.List<java.lang.Integer> handPais_ = java.util.Collections.emptyList();
      private void ensureHandPaisIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          handPais_ = new java.util.ArrayList<java.lang.Integer>(handPais_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 handPais = 16;</code>
       *
       * <pre>
       *所有手牌id
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getHandPaisList() {
        return java.util.Collections.unmodifiableList(handPais_);
      }
      /**
       * <code>repeated int32 handPais = 16;</code>
       *
       * <pre>
       *所有手牌id
       * </pre>
       */
      public int getHandPaisCount() {
        return handPais_.size();
      }
      /**
       * <code>repeated int32 handPais = 16;</code>
       *
       * <pre>
       *所有手牌id
       * </pre>
       */
      public int getHandPais(int index) {
        return handPais_.get(index);
      }
      /**
       * <code>repeated int32 handPais = 16;</code>
       *
       * <pre>
       *所有手牌id
       * </pre>
       */
      public Builder setHandPais(
          int index, int value) {
        ensureHandPaisIsMutable();
        handPais_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handPais = 16;</code>
       *
       * <pre>
       *所有手牌id
       * </pre>
       */
      public Builder addHandPais(int value) {
        ensureHandPaisIsMutable();
        handPais_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handPais = 16;</code>
       *
       * <pre>
       *所有手牌id
       * </pre>
       */
      public Builder addAllHandPais(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureHandPaisIsMutable();
        super.addAll(values, handPais_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 handPais = 16;</code>
       *
       * <pre>
       *所有手牌id
       * </pre>
       */
      public Builder clearHandPais() {
        handPais_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> moldPais_ =
        java.util.Collections.emptyList();
      private void ensureMoldPaisIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          moldPais_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>(moldPais_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> moldPaisBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMoldPaisList() {
        if (moldPaisBuilder_ == null) {
          return java.util.Collections.unmodifiableList(moldPais_);
        } else {
          return moldPaisBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public int getMoldPaisCount() {
        if (moldPaisBuilder_ == null) {
          return moldPais_.size();
        } else {
          return moldPaisBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMoldPais(int index) {
        if (moldPaisBuilder_ == null) {
          return moldPais_.get(index);
        } else {
          return moldPaisBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public Builder setMoldPais(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (moldPaisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoldPaisIsMutable();
          moldPais_.set(index, value);
          onChanged();
        } else {
          moldPaisBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public Builder setMoldPais(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (moldPaisBuilder_ == null) {
          ensureMoldPaisIsMutable();
          moldPais_.set(index, builderForValue.build());
          onChanged();
        } else {
          moldPaisBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public Builder addMoldPais(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (moldPaisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoldPaisIsMutable();
          moldPais_.add(value);
          onChanged();
        } else {
          moldPaisBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public Builder addMoldPais(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (moldPaisBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMoldPaisIsMutable();
          moldPais_.add(index, value);
          onChanged();
        } else {
          moldPaisBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public Builder addMoldPais(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (moldPaisBuilder_ == null) {
          ensureMoldPaisIsMutable();
          moldPais_.add(builderForValue.build());
          onChanged();
        } else {
          moldPaisBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public Builder addMoldPais(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (moldPaisBuilder_ == null) {
          ensureMoldPaisIsMutable();
          moldPais_.add(index, builderForValue.build());
          onChanged();
        } else {
          moldPaisBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public Builder addAllMoldPais(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> values) {
        if (moldPaisBuilder_ == null) {
          ensureMoldPaisIsMutable();
          super.addAll(values, moldPais_);
          onChanged();
        } else {
          moldPaisBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public Builder clearMoldPais() {
        if (moldPaisBuilder_ == null) {
          moldPais_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          moldPaisBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public Builder removeMoldPais(int index) {
        if (moldPaisBuilder_ == null) {
          ensureMoldPaisIsMutable();
          moldPais_.remove(index);
          onChanged();
        } else {
          moldPaisBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder getMoldPaisBuilder(
          int index) {
        return getMoldPaisFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMoldPaisOrBuilder(
          int index) {
        if (moldPaisBuilder_ == null) {
          return moldPais_.get(index);  } else {
          return moldPaisBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
           getMoldPaisOrBuilderList() {
        if (moldPaisBuilder_ != null) {
          return moldPaisBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(moldPais_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMoldPaisBuilder() {
        return getMoldPaisFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMoldPaisBuilder(
          int index) {
        return getMoldPaisFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards moldPais = 17;</code>
       *
       * <pre>
       *吃碰杠
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder> 
           getMoldPaisBuilderList() {
        return getMoldPaisFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
          getMoldPaisFieldBuilder() {
        if (moldPaisBuilder_ == null) {
          moldPaisBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder>(
                  moldPais_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          moldPais_ = null;
        }
        return moldPaisBuilder_;
      }

      // optional int32 isHu = 18;
      private int isHu_ ;
      /**
       * <code>optional int32 isHu = 18;</code>
       *
       * <pre>
       *胡牌ID
       * </pre>
       */
      public boolean hasIsHu() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 isHu = 18;</code>
       *
       * <pre>
       *胡牌ID
       * </pre>
       */
      public int getIsHu() {
        return isHu_;
      }
      /**
       * <code>optional int32 isHu = 18;</code>
       *
       * <pre>
       *胡牌ID
       * </pre>
       */
      public Builder setIsHu(int value) {
        bitField0_ |= 0x00020000;
        isHu_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isHu = 18;</code>
       *
       * <pre>
       *胡牌ID
       * </pre>
       */
      public Builder clearIsHu() {
        bitField0_ = (bitField0_ & ~0x00020000);
        isHu_ = 0;
        onChanged();
        return this;
      }

      // optional int32 birdPoint = 19;
      private int birdPoint_ ;
      /**
       * <code>optional int32 birdPoint = 19;</code>
       */
      public boolean hasBirdPoint() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 birdPoint = 19;</code>
       */
      public int getBirdPoint() {
        return birdPoint_;
      }
      /**
       * <code>optional int32 birdPoint = 19;</code>
       */
      public Builder setBirdPoint(int value) {
        bitField0_ |= 0x00040000;
        birdPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 birdPoint = 19;</code>
       */
      public Builder clearBirdPoint() {
        bitField0_ = (bitField0_ & ~0x00040000);
        birdPoint_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 actionCount = 20;
      private java.util.List<java.lang.Integer> actionCount_ = java.util.Collections.emptyList();
      private void ensureActionCountIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          actionCount_ = new java.util.ArrayList<java.lang.Integer>(actionCount_);
          bitField0_ |= 0x00080000;
         }
      }
      /**
       * <code>repeated int32 actionCount = 20;</code>
       *
       * <pre>
       *所用动作次数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getActionCountList() {
        return java.util.Collections.unmodifiableList(actionCount_);
      }
      /**
       * <code>repeated int32 actionCount = 20;</code>
       *
       * <pre>
       *所用动作次数
       * </pre>
       */
      public int getActionCountCount() {
        return actionCount_.size();
      }
      /**
       * <code>repeated int32 actionCount = 20;</code>
       *
       * <pre>
       *所用动作次数
       * </pre>
       */
      public int getActionCount(int index) {
        return actionCount_.get(index);
      }
      /**
       * <code>repeated int32 actionCount = 20;</code>
       *
       * <pre>
       *所用动作次数
       * </pre>
       */
      public Builder setActionCount(
          int index, int value) {
        ensureActionCountIsMutable();
        actionCount_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionCount = 20;</code>
       *
       * <pre>
       *所用动作次数
       * </pre>
       */
      public Builder addActionCount(int value) {
        ensureActionCountIsMutable();
        actionCount_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionCount = 20;</code>
       *
       * <pre>
       *所用动作次数
       * </pre>
       */
      public Builder addAllActionCount(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureActionCountIsMutable();
        super.addAll(values, actionCount_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 actionCount = 20;</code>
       *
       * <pre>
       *所用动作次数
       * </pre>
       */
      public Builder clearActionCount() {
        actionCount_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00080000);
        onChanged();
        return this;
      }

      // repeated int32 dahus = 21;
      private java.util.List<java.lang.Integer> dahus_ = java.util.Collections.emptyList();
      private void ensureDahusIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          dahus_ = new java.util.ArrayList<java.lang.Integer>(dahus_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated int32 dahus = 21;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDahusList() {
        return java.util.Collections.unmodifiableList(dahus_);
      }
      /**
       * <code>repeated int32 dahus = 21;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public int getDahusCount() {
        return dahus_.size();
      }
      /**
       * <code>repeated int32 dahus = 21;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public int getDahus(int index) {
        return dahus_.get(index);
      }
      /**
       * <code>repeated int32 dahus = 21;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public Builder setDahus(
          int index, int value) {
        ensureDahusIsMutable();
        dahus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 21;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public Builder addDahus(int value) {
        ensureDahusIsMutable();
        dahus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 21;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public Builder addAllDahus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDahusIsMutable();
        super.addAll(values, dahus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 21;</code>
       *
       * <pre>
       *大胡
       * </pre>
       */
      public Builder clearDahus() {
        dahus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }

      // repeated int32 xiaohus = 22;
      private java.util.List<java.lang.Integer> xiaohus_ = java.util.Collections.emptyList();
      private void ensureXiaohusIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          xiaohus_ = new java.util.ArrayList<java.lang.Integer>(xiaohus_);
          bitField0_ |= 0x00200000;
         }
      }
      /**
       * <code>repeated int32 xiaohus = 22;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getXiaohusList() {
        return java.util.Collections.unmodifiableList(xiaohus_);
      }
      /**
       * <code>repeated int32 xiaohus = 22;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public int getXiaohusCount() {
        return xiaohus_.size();
      }
      /**
       * <code>repeated int32 xiaohus = 22;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public int getXiaohus(int index) {
        return xiaohus_.get(index);
      }
      /**
       * <code>repeated int32 xiaohus = 22;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public Builder setXiaohus(
          int index, int value) {
        ensureXiaohusIsMutable();
        xiaohus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohus = 22;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public Builder addXiaohus(int value) {
        ensureXiaohusIsMutable();
        xiaohus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohus = 22;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public Builder addAllXiaohus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureXiaohusIsMutable();
        super.addAll(values, xiaohus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 xiaohus = 22;</code>
       *
       * <pre>
       *小胡
       * </pre>
       */
      public Builder clearXiaohus() {
        xiaohus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00200000);
        onChanged();
        return this;
      }

      // optional int32 credit = 23;
      private int credit_ ;
      /**
       * <code>optional int32 credit = 23;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public boolean hasCredit() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 credit = 23;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public int getCredit() {
        return credit_;
      }
      /**
       * <code>optional int32 credit = 23;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public Builder setCredit(int value) {
        bitField0_ |= 0x00400000;
        credit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 credit = 23;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public Builder clearCredit() {
        bitField0_ = (bitField0_ & ~0x00400000);
        credit_ = 0;
        onChanged();
        return this;
      }

      // optional int64 winLoseCredit = 24;
      private long winLoseCredit_ ;
      /**
       * <code>optional int64 winLoseCredit = 24;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public boolean hasWinLoseCredit() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int64 winLoseCredit = 24;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public long getWinLoseCredit() {
        return winLoseCredit_;
      }
      /**
       * <code>optional int64 winLoseCredit = 24;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public Builder setWinLoseCredit(long value) {
        bitField0_ |= 0x00800000;
        winLoseCredit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 winLoseCredit = 24;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public Builder clearWinLoseCredit() {
        bitField0_ = (bitField0_ & ~0x00800000);
        winLoseCredit_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 commissionCredit = 25;
      private long commissionCredit_ ;
      /**
       * <code>optional int64 commissionCredit = 25;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public boolean hasCommissionCredit() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 commissionCredit = 25;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public long getCommissionCredit() {
        return commissionCredit_;
      }
      /**
       * <code>optional int64 commissionCredit = 25;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public Builder setCommissionCredit(long value) {
        bitField0_ |= 0x01000000;
        commissionCredit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 commissionCredit = 25;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public Builder clearCommissionCredit() {
        bitField0_ = (bitField0_ & ~0x01000000);
        commissionCredit_ = 0L;
        onChanged();
        return this;
      }

      // repeated int32 pointArr = 26;
      private java.util.List<java.lang.Integer> pointArr_ = java.util.Collections.emptyList();
      private void ensurePointArrIsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          pointArr_ = new java.util.ArrayList<java.lang.Integer>(pointArr_);
          bitField0_ |= 0x02000000;
         }
      }
      /**
       * <code>repeated int32 pointArr = 26;</code>
       *
       * <pre>
       *[类型]=分值
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getPointArrList() {
        return java.util.Collections.unmodifiableList(pointArr_);
      }
      /**
       * <code>repeated int32 pointArr = 26;</code>
       *
       * <pre>
       *[类型]=分值
       * </pre>
       */
      public int getPointArrCount() {
        return pointArr_.size();
      }
      /**
       * <code>repeated int32 pointArr = 26;</code>
       *
       * <pre>
       *[类型]=分值
       * </pre>
       */
      public int getPointArr(int index) {
        return pointArr_.get(index);
      }
      /**
       * <code>repeated int32 pointArr = 26;</code>
       *
       * <pre>
       *[类型]=分值
       * </pre>
       */
      public Builder setPointArr(
          int index, int value) {
        ensurePointArrIsMutable();
        pointArr_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pointArr = 26;</code>
       *
       * <pre>
       *[类型]=分值
       * </pre>
       */
      public Builder addPointArr(int value) {
        ensurePointArrIsMutable();
        pointArr_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pointArr = 26;</code>
       *
       * <pre>
       *[类型]=分值
       * </pre>
       */
      public Builder addAllPointArr(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePointArrIsMutable();
        super.addAll(values, pointArr_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 pointArr = 26;</code>
       *
       * <pre>
       *[类型]=分值
       * </pre>
       */
      public Builder clearPointArr() {
        pointArr_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x02000000);
        onChanged();
        return this;
      }

      // optional int32 fanPao = 27;
      private int fanPao_ ;
      /**
       * <code>optional int32 fanPao = 27;</code>
       *
       * <pre>
       *是否放炮：0否，1是
       * </pre>
       */
      public boolean hasFanPao() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional int32 fanPao = 27;</code>
       *
       * <pre>
       *是否放炮：0否，1是
       * </pre>
       */
      public int getFanPao() {
        return fanPao_;
      }
      /**
       * <code>optional int32 fanPao = 27;</code>
       *
       * <pre>
       *是否放炮：0否，1是
       * </pre>
       */
      public Builder setFanPao(int value) {
        bitField0_ |= 0x04000000;
        fanPao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fanPao = 27;</code>
       *
       * <pre>
       *是否放炮：0否，1是
       * </pre>
       */
      public Builder clearFanPao() {
        bitField0_ = (bitField0_ & ~0x04000000);
        fanPao_ = 0;
        onChanged();
        return this;
      }

      // optional int32 goldFlag = 28;
      private int goldFlag_ ;
      /**
       * <code>optional int32 goldFlag = 28;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public boolean hasGoldFlag() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional int32 goldFlag = 28;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public int getGoldFlag() {
        return goldFlag_;
      }
      /**
       * <code>optional int32 goldFlag = 28;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public Builder setGoldFlag(int value) {
        bitField0_ |= 0x08000000;
        goldFlag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 goldFlag = 28;</code>
       *
       * <pre>
       *金币场结算标记：1 破产2封顶
       * </pre>
       */
      public Builder clearGoldFlag() {
        bitField0_ = (bitField0_ & ~0x08000000);
        goldFlag_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes)
    }

    static {
      defaultInstance = new ClosingMjPlayerInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes)
  }

  public interface ClosingMjInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
     *
     * <pre>
     *所有玩家
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes> 
        getClosingPlayersList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
     *
     * <pre>
     *所有玩家
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes getClosingPlayers(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
     *
     * <pre>
     *所有玩家
     * </pre>
     */
    int getClosingPlayersCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
     *
     * <pre>
     *所有玩家
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
     *
     * <pre>
     *所有玩家
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index);

    // optional int32 isBreak = 2;
    /**
     * <code>optional int32 isBreak = 2;</code>
     *
     * <pre>
     *是否提前解散
     * </pre>
     */
    boolean hasIsBreak();
    /**
     * <code>optional int32 isBreak = 2;</code>
     *
     * <pre>
     *是否提前解散
     * </pre>
     */
    int getIsBreak();

    // optional int32 wanfa = 3;
    /**
     * <code>optional int32 wanfa = 3;</code>
     *
     * <pre>
     *玩法  
     * </pre>
     */
    boolean hasWanfa();
    /**
     * <code>optional int32 wanfa = 3;</code>
     *
     * <pre>
     *玩法  
     * </pre>
     */
    int getWanfa();

    // repeated string ext = 4;
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    java.util.List<java.lang.String>
    getExtList();
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    java.lang.String getExt(int index);
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtBytes(int index);

    // repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
     *
     * <pre>
     *所有胡的记录，针对甘肃麻将
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards> 
        getHuListList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
     *
     * <pre>
     *所有胡的记录，针对甘肃麻将
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards getHuList(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
     *
     * <pre>
     *所有胡的记录，针对甘肃麻将
     * </pre>
     */
    int getHuListCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
     *
     * <pre>
     *所有胡的记录，针对甘肃麻将
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCardsOrBuilder> 
        getHuListOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
     *
     * <pre>
     *所有胡的记录，针对甘肃麻将
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCardsOrBuilder getHuListOrBuilder(
        int index);

    // repeated int32 bird = 7;
    /**
     * <code>repeated int32 bird = 7;</code>
     *
     * <pre>
     *鸟ID
     * </pre>
     */
    java.util.List<java.lang.Integer> getBirdList();
    /**
     * <code>repeated int32 bird = 7;</code>
     *
     * <pre>
     *鸟ID
     * </pre>
     */
    int getBirdCount();
    /**
     * <code>repeated int32 bird = 7;</code>
     *
     * <pre>
     *鸟ID
     * </pre>
     */
    int getBird(int index);

    // repeated int32 birdSeat = 8;
    /**
     * <code>repeated int32 birdSeat = 8;</code>
     *
     * <pre>
     *鸟位置
     * </pre>
     */
    java.util.List<java.lang.Integer> getBirdSeatList();
    /**
     * <code>repeated int32 birdSeat = 8;</code>
     *
     * <pre>
     *鸟位置
     * </pre>
     */
    int getBirdSeatCount();
    /**
     * <code>repeated int32 birdSeat = 8;</code>
     *
     * <pre>
     *鸟位置
     * </pre>
     */
    int getBirdSeat(int index);

    // optional int32 groupLogId = 9;
    /**
     * <code>optional int32 groupLogId = 9;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    boolean hasGroupLogId();
    /**
     * <code>optional int32 groupLogId = 9;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    int getGroupLogId();

    // repeated int32 leftCards = 10;
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getLeftCardsList();
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    int getLeftCardsCount();
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    int getLeftCards(int index);

    // optional int32 catchBirdSeat = 11;
    /**
     * <code>optional int32 catchBirdSeat = 11;</code>
     *
     * <pre>
     *抓鸟人座位
     * </pre>
     */
    boolean hasCatchBirdSeat();
    /**
     * <code>optional int32 catchBirdSeat = 11;</code>
     *
     * <pre>
     *抓鸟人座位
     * </pre>
     */
    int getCatchBirdSeat();

    // repeated int64 creditConfig = 12;
    /**
     * <code>repeated int64 creditConfig = 12;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    java.util.List<java.lang.Long> getCreditConfigList();
    /**
     * <code>repeated int64 creditConfig = 12;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    int getCreditConfigCount();
    /**
     * <code>repeated int64 creditConfig = 12;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    long getCreditConfig(int index);

    // repeated int32 intParams = 13;
    /**
     * <code>repeated int32 intParams = 13;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    java.util.List<java.lang.Integer> getIntParamsList();
    /**
     * <code>repeated int32 intParams = 13;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    int getIntParamsCount();
    /**
     * <code>repeated int32 intParams = 13;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    int getIntParams(int index);

    // repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
     *
     * <pre>
     *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute> 
        getBirdAttrList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
     *
     * <pre>
     *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute getBirdAttr(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
     *
     * <pre>
     *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
     * </pre>
     */
    int getBirdAttrCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
     *
     * <pre>
     *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttributeOrBuilder> 
        getBirdAttrOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
     *
     * <pre>
     *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttributeOrBuilder getBirdAttrOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingMjInfoRes}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class ClosingMjInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements ClosingMjInfoResOrBuilder {
    // Use ClosingMjInfoRes.newBuilder() to construct.
    private ClosingMjInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosingMjInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosingMjInfoRes defaultInstance;
    public static ClosingMjInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public ClosingMjInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosingMjInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes>();
                mutable_bitField0_ |= 0x00000001;
              }
              closingPlayers_.add(input.readMessage(com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              isBreak_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              wanfa_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ext_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              ext_.add(input.readBytes());
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                huList_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards>();
                mutable_bitField0_ |= 0x00000010;
              }
              huList_.add(input.readMessage(com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.PARSER, extensionRegistry));
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                bird_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              bird_.add(input.readInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                bird_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                bird_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 64: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                birdSeat_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              birdSeat_.add(input.readInt32());
              break;
            }
            case 66: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                birdSeat_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                birdSeat_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 72: {
              bitField0_ |= 0x00000004;
              groupLogId_ = input.readInt32();
              break;
            }
            case 80: {
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
                leftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              leftCards_.add(input.readInt32());
              break;
            }
            case 82: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                leftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                leftCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 88: {
              bitField0_ |= 0x00000008;
              catchBirdSeat_ = input.readInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                creditConfig_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000400;
              }
              creditConfig_.add(input.readInt64());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400) && input.getBytesUntilLimit() > 0) {
                creditConfig_ = new java.util.ArrayList<java.lang.Long>();
                mutable_bitField0_ |= 0x00000400;
              }
              while (input.getBytesUntilLimit() > 0) {
                creditConfig_.add(input.readInt64());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                intParams_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              intParams_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                intParams_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                intParams_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                birdAttr_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute>();
                mutable_bitField0_ |= 0x00001000;
              }
              birdAttr_.add(input.readMessage(com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(ext_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          huList_ = java.util.Collections.unmodifiableList(huList_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          bird_ = java.util.Collections.unmodifiableList(bird_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          birdSeat_ = java.util.Collections.unmodifiableList(birdSeat_);
        }
        if (((mutable_bitField0_ & 0x00000100) == 0x00000100)) {
          leftCards_ = java.util.Collections.unmodifiableList(leftCards_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          creditConfig_ = java.util.Collections.unmodifiableList(creditConfig_);
        }
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          intParams_ = java.util.Collections.unmodifiableList(intParams_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          birdAttr_ = java.util.Collections.unmodifiableList(birdAttr_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingMjInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingMjInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes.class, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosingMjInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<ClosingMjInfoRes>() {
      public ClosingMjInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosingMjInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosingMjInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;
    public static final int CLOSINGPLAYERS_FIELD_NUMBER = 1;
    private java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes> closingPlayers_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
     *
     * <pre>
     *所有玩家
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes> getClosingPlayersList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
     *
     * <pre>
     *所有玩家
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
     *
     * <pre>
     *所有玩家
     * </pre>
     */
    public int getClosingPlayersCount() {
      return closingPlayers_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
     *
     * <pre>
     *所有玩家
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes getClosingPlayers(int index) {
      return closingPlayers_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
     *
     * <pre>
     *所有玩家
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index) {
      return closingPlayers_.get(index);
    }

    // optional int32 isBreak = 2;
    public static final int ISBREAK_FIELD_NUMBER = 2;
    private int isBreak_;
    /**
     * <code>optional int32 isBreak = 2;</code>
     *
     * <pre>
     *是否提前解散
     * </pre>
     */
    public boolean hasIsBreak() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 isBreak = 2;</code>
     *
     * <pre>
     *是否提前解散
     * </pre>
     */
    public int getIsBreak() {
      return isBreak_;
    }

    // optional int32 wanfa = 3;
    public static final int WANFA_FIELD_NUMBER = 3;
    private int wanfa_;
    /**
     * <code>optional int32 wanfa = 3;</code>
     *
     * <pre>
     *玩法  
     * </pre>
     */
    public boolean hasWanfa() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 wanfa = 3;</code>
     *
     * <pre>
     *玩法  
     * </pre>
     */
    public int getWanfa() {
      return wanfa_;
    }

    // repeated string ext = 4;
    public static final int EXT_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList ext_;
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    public java.util.List<java.lang.String>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    public java.lang.String getExt(int index) {
      return ext_.get(index);
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     *扩展字段
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtBytes(int index) {
      return ext_.getByteString(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;
    public static final int HULIST_FIELD_NUMBER = 6;
    private java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards> huList_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
     *
     * <pre>
     *所有胡的记录，针对甘肃麻将
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards> getHuListList() {
      return huList_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
     *
     * <pre>
     *所有胡的记录，针对甘肃麻将
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCardsOrBuilder> 
        getHuListOrBuilderList() {
      return huList_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
     *
     * <pre>
     *所有胡的记录，针对甘肃麻将
     * </pre>
     */
    public int getHuListCount() {
      return huList_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
     *
     * <pre>
     *所有胡的记录，针对甘肃麻将
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards getHuList(int index) {
      return huList_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
     *
     * <pre>
     *所有胡的记录，针对甘肃麻将
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCardsOrBuilder getHuListOrBuilder(
        int index) {
      return huList_.get(index);
    }

    // repeated int32 bird = 7;
    public static final int BIRD_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> bird_;
    /**
     * <code>repeated int32 bird = 7;</code>
     *
     * <pre>
     *鸟ID
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBirdList() {
      return bird_;
    }
    /**
     * <code>repeated int32 bird = 7;</code>
     *
     * <pre>
     *鸟ID
     * </pre>
     */
    public int getBirdCount() {
      return bird_.size();
    }
    /**
     * <code>repeated int32 bird = 7;</code>
     *
     * <pre>
     *鸟ID
     * </pre>
     */
    public int getBird(int index) {
      return bird_.get(index);
    }

    // repeated int32 birdSeat = 8;
    public static final int BIRDSEAT_FIELD_NUMBER = 8;
    private java.util.List<java.lang.Integer> birdSeat_;
    /**
     * <code>repeated int32 birdSeat = 8;</code>
     *
     * <pre>
     *鸟位置
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getBirdSeatList() {
      return birdSeat_;
    }
    /**
     * <code>repeated int32 birdSeat = 8;</code>
     *
     * <pre>
     *鸟位置
     * </pre>
     */
    public int getBirdSeatCount() {
      return birdSeat_.size();
    }
    /**
     * <code>repeated int32 birdSeat = 8;</code>
     *
     * <pre>
     *鸟位置
     * </pre>
     */
    public int getBirdSeat(int index) {
      return birdSeat_.get(index);
    }

    // optional int32 groupLogId = 9;
    public static final int GROUPLOGID_FIELD_NUMBER = 9;
    private int groupLogId_;
    /**
     * <code>optional int32 groupLogId = 9;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    public boolean hasGroupLogId() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 groupLogId = 9;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    public int getGroupLogId() {
      return groupLogId_;
    }

    // repeated int32 leftCards = 10;
    public static final int LEFTCARDS_FIELD_NUMBER = 10;
    private java.util.List<java.lang.Integer> leftCards_;
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLeftCardsList() {
      return leftCards_;
    }
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public int getLeftCardsCount() {
      return leftCards_.size();
    }
    /**
     * <code>repeated int32 leftCards = 10;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public int getLeftCards(int index) {
      return leftCards_.get(index);
    }

    // optional int32 catchBirdSeat = 11;
    public static final int CATCHBIRDSEAT_FIELD_NUMBER = 11;
    private int catchBirdSeat_;
    /**
     * <code>optional int32 catchBirdSeat = 11;</code>
     *
     * <pre>
     *抓鸟人座位
     * </pre>
     */
    public boolean hasCatchBirdSeat() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 catchBirdSeat = 11;</code>
     *
     * <pre>
     *抓鸟人座位
     * </pre>
     */
    public int getCatchBirdSeat() {
      return catchBirdSeat_;
    }

    // repeated int64 creditConfig = 12;
    public static final int CREDITCONFIG_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Long> creditConfig_;
    /**
     * <code>repeated int64 creditConfig = 12;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    public java.util.List<java.lang.Long>
        getCreditConfigList() {
      return creditConfig_;
    }
    /**
     * <code>repeated int64 creditConfig = 12;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    public int getCreditConfigCount() {
      return creditConfig_.size();
    }
    /**
     * <code>repeated int64 creditConfig = 12;</code>
     *
     * <pre>
     * 信用房配置
     * </pre>
     */
    public long getCreditConfig(int index) {
      return creditConfig_.get(index);
    }

    // repeated int32 intParams = 13;
    public static final int INTPARAMS_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> intParams_;
    /**
     * <code>repeated int32 intParams = 13;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getIntParamsList() {
      return intParams_;
    }
    /**
     * <code>repeated int32 intParams = 13;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public int getIntParamsCount() {
      return intParams_.size();
    }
    /**
     * <code>repeated int32 intParams = 13;</code>
     *
     * <pre>
     *创房参数
     * </pre>
     */
    public int getIntParams(int index) {
      return intParams_.get(index);
    }

    // repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;
    public static final int BIRDATTR_FIELD_NUMBER = 14;
    private java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute> birdAttr_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
     *
     * <pre>
     *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute> getBirdAttrList() {
      return birdAttr_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
     *
     * <pre>
     *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttributeOrBuilder> 
        getBirdAttrOrBuilderList() {
      return birdAttr_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
     *
     * <pre>
     *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
     * </pre>
     */
    public int getBirdAttrCount() {
      return birdAttr_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
     *
     * <pre>
     *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute getBirdAttr(int index) {
      return birdAttr_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
     *
     * <pre>
     *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttributeOrBuilder getBirdAttrOrBuilder(
        int index) {
      return birdAttr_.get(index);
    }

    private void initFields() {
      closingPlayers_ = java.util.Collections.emptyList();
      isBreak_ = 0;
      wanfa_ = 0;
      ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      huList_ = java.util.Collections.emptyList();
      bird_ = java.util.Collections.emptyList();
      birdSeat_ = java.util.Collections.emptyList();
      groupLogId_ = 0;
      leftCards_ = java.util.Collections.emptyList();
      catchBirdSeat_ = 0;
      creditConfig_ = java.util.Collections.emptyList();
      intParams_ = java.util.Collections.emptyList();
      birdAttr_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getClosingPlayersCount(); i++) {
        if (!getClosingPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getHuListCount(); i++) {
        if (!getHuList(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getBirdAttrCount(); i++) {
        if (!getBirdAttr(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < closingPlayers_.size(); i++) {
        output.writeMessage(1, closingPlayers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, wanfa_);
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeBytes(4, ext_.getByteString(i));
      }
      for (int i = 0; i < huList_.size(); i++) {
        output.writeMessage(6, huList_.get(i));
      }
      for (int i = 0; i < bird_.size(); i++) {
        output.writeInt32(7, bird_.get(i));
      }
      for (int i = 0; i < birdSeat_.size(); i++) {
        output.writeInt32(8, birdSeat_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(9, groupLogId_);
      }
      for (int i = 0; i < leftCards_.size(); i++) {
        output.writeInt32(10, leftCards_.get(i));
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(11, catchBirdSeat_);
      }
      for (int i = 0; i < creditConfig_.size(); i++) {
        output.writeInt64(12, creditConfig_.get(i));
      }
      for (int i = 0; i < intParams_.size(); i++) {
        output.writeInt32(13, intParams_.get(i));
      }
      for (int i = 0; i < birdAttr_.size(); i++) {
        output.writeMessage(14, birdAttr_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < closingPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, closingPlayers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, wanfa_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ext_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getExtList().size();
      }
      for (int i = 0; i < huList_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, huList_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < bird_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(bird_.get(i));
        }
        size += dataSize;
        size += 1 * getBirdList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < birdSeat_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(birdSeat_.get(i));
        }
        size += dataSize;
        size += 1 * getBirdSeatList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, groupLogId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < leftCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(leftCards_.get(i));
        }
        size += dataSize;
        size += 1 * getLeftCardsList().size();
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, catchBirdSeat_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < creditConfig_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt64SizeNoTag(creditConfig_.get(i));
        }
        size += dataSize;
        size += 1 * getCreditConfigList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < intParams_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(intParams_.get(i));
        }
        size += dataSize;
        size += 1 * getIntParamsList().size();
      }
      for (int i = 0; i < birdAttr_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, birdAttr_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingMjInfoRes}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingMjInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingMjInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes.class, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClosingPlayersFieldBuilder();
          getHuListFieldBuilder();
          getBirdAttrFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          closingPlayersBuilder_.clear();
        }
        isBreak_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        wanfa_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        if (huListBuilder_ == null) {
          huList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          huListBuilder_.clear();
        }
        bird_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        birdSeat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        groupLogId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        leftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        catchBirdSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        creditConfig_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        intParams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        if (birdAttrBuilder_ == null) {
          birdAttr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
        } else {
          birdAttrBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingMjInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes build() {
        com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes result = new com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (closingPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.closingPlayers_ = closingPlayers_;
        } else {
          result.closingPlayers_ = closingPlayersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isBreak_ = isBreak_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.wanfa_ = wanfa_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(
              ext_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.ext_ = ext_;
        if (huListBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            huList_ = java.util.Collections.unmodifiableList(huList_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.huList_ = huList_;
        } else {
          result.huList_ = huListBuilder_.build();
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          bird_ = java.util.Collections.unmodifiableList(bird_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.bird_ = bird_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          birdSeat_ = java.util.Collections.unmodifiableList(birdSeat_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.birdSeat_ = birdSeat_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000004;
        }
        result.groupLogId_ = groupLogId_;
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          leftCards_ = java.util.Collections.unmodifiableList(leftCards_);
          bitField0_ = (bitField0_ & ~0x00000100);
        }
        result.leftCards_ = leftCards_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000008;
        }
        result.catchBirdSeat_ = catchBirdSeat_;
        if (((bitField0_ & 0x00000400) == 0x00000400)) {
          creditConfig_ = java.util.Collections.unmodifiableList(creditConfig_);
          bitField0_ = (bitField0_ & ~0x00000400);
        }
        result.creditConfig_ = creditConfig_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          intParams_ = java.util.Collections.unmodifiableList(intParams_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.intParams_ = intParams_;
        if (birdAttrBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000)) {
            birdAttr_ = java.util.Collections.unmodifiableList(birdAttr_);
            bitField0_ = (bitField0_ & ~0x00001000);
          }
          result.birdAttr_ = birdAttr_;
        } else {
          result.birdAttr_ = birdAttrBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes.getDefaultInstance()) return this;
        if (closingPlayersBuilder_ == null) {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayers_.isEmpty()) {
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureClosingPlayersIsMutable();
              closingPlayers_.addAll(other.closingPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayersBuilder_.isEmpty()) {
              closingPlayersBuilder_.dispose();
              closingPlayersBuilder_ = null;
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              closingPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getClosingPlayersFieldBuilder() : null;
            } else {
              closingPlayersBuilder_.addAllMessages(other.closingPlayers_);
            }
          }
        }
        if (other.hasIsBreak()) {
          setIsBreak(other.getIsBreak());
        }
        if (other.hasWanfa()) {
          setWanfa(other.getWanfa());
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        if (huListBuilder_ == null) {
          if (!other.huList_.isEmpty()) {
            if (huList_.isEmpty()) {
              huList_ = other.huList_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureHuListIsMutable();
              huList_.addAll(other.huList_);
            }
            onChanged();
          }
        } else {
          if (!other.huList_.isEmpty()) {
            if (huListBuilder_.isEmpty()) {
              huListBuilder_.dispose();
              huListBuilder_ = null;
              huList_ = other.huList_;
              bitField0_ = (bitField0_ & ~0x00000010);
              huListBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getHuListFieldBuilder() : null;
            } else {
              huListBuilder_.addAllMessages(other.huList_);
            }
          }
        }
        if (!other.bird_.isEmpty()) {
          if (bird_.isEmpty()) {
            bird_ = other.bird_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureBirdIsMutable();
            bird_.addAll(other.bird_);
          }
          onChanged();
        }
        if (!other.birdSeat_.isEmpty()) {
          if (birdSeat_.isEmpty()) {
            birdSeat_ = other.birdSeat_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureBirdSeatIsMutable();
            birdSeat_.addAll(other.birdSeat_);
          }
          onChanged();
        }
        if (other.hasGroupLogId()) {
          setGroupLogId(other.getGroupLogId());
        }
        if (!other.leftCards_.isEmpty()) {
          if (leftCards_.isEmpty()) {
            leftCards_ = other.leftCards_;
            bitField0_ = (bitField0_ & ~0x00000100);
          } else {
            ensureLeftCardsIsMutable();
            leftCards_.addAll(other.leftCards_);
          }
          onChanged();
        }
        if (other.hasCatchBirdSeat()) {
          setCatchBirdSeat(other.getCatchBirdSeat());
        }
        if (!other.creditConfig_.isEmpty()) {
          if (creditConfig_.isEmpty()) {
            creditConfig_ = other.creditConfig_;
            bitField0_ = (bitField0_ & ~0x00000400);
          } else {
            ensureCreditConfigIsMutable();
            creditConfig_.addAll(other.creditConfig_);
          }
          onChanged();
        }
        if (!other.intParams_.isEmpty()) {
          if (intParams_.isEmpty()) {
            intParams_ = other.intParams_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureIntParamsIsMutable();
            intParams_.addAll(other.intParams_);
          }
          onChanged();
        }
        if (birdAttrBuilder_ == null) {
          if (!other.birdAttr_.isEmpty()) {
            if (birdAttr_.isEmpty()) {
              birdAttr_ = other.birdAttr_;
              bitField0_ = (bitField0_ & ~0x00001000);
            } else {
              ensureBirdAttrIsMutable();
              birdAttr_.addAll(other.birdAttr_);
            }
            onChanged();
          }
        } else {
          if (!other.birdAttr_.isEmpty()) {
            if (birdAttrBuilder_.isEmpty()) {
              birdAttrBuilder_.dispose();
              birdAttrBuilder_ = null;
              birdAttr_ = other.birdAttr_;
              bitField0_ = (bitField0_ & ~0x00001000);
              birdAttrBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getBirdAttrFieldBuilder() : null;
            } else {
              birdAttrBuilder_.addAllMessages(other.birdAttr_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getClosingPlayersCount(); i++) {
          if (!getClosingPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getHuListCount(); i++) {
          if (!getHuList(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getBirdAttrCount(); i++) {
          if (!getBirdAttr(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;
      private java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes> closingPlayers_ =
        java.util.Collections.emptyList();
      private void ensureClosingPlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes>(closingPlayers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoResOrBuilder> closingPlayersBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes> getClosingPlayersList() {
        if (closingPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        } else {
          return closingPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public int getClosingPlayersCount() {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.size();
        } else {
          return closingPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes getClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);
        } else {
          return closingPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public Builder addClosingPlayers(com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public Builder addClosingPlayers(
          com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public Builder addAllClosingPlayers(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes> values) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          super.addAll(values, closingPlayers_);
          onChanged();
        } else {
          closingPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public Builder clearClosingPlayers() {
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          closingPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public Builder removeClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.remove(index);
          onChanged();
        } else {
          closingPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder getClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
          int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);  } else {
          return closingPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoResOrBuilder> 
           getClosingPlayersOrBuilderList() {
        if (closingPlayersBuilder_ != null) {
          return closingPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder addClosingPlayersBuilder() {
        return getClosingPlayersFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder addClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingMjPlayerInfoRes closingPlayers = 1;</code>
       *
       * <pre>
       *所有玩家
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder> 
           getClosingPlayersBuilderList() {
        return getClosingPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoResOrBuilder> 
          getClosingPlayersFieldBuilder() {
        if (closingPlayersBuilder_ == null) {
          closingPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableMjResMsg.ClosingMjPlayerInfoResOrBuilder>(
                  closingPlayers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          closingPlayers_ = null;
        }
        return closingPlayersBuilder_;
      }

      // optional int32 isBreak = 2;
      private int isBreak_ ;
      /**
       * <code>optional int32 isBreak = 2;</code>
       *
       * <pre>
       *是否提前解散
       * </pre>
       */
      public boolean hasIsBreak() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       *
       * <pre>
       *是否提前解散
       * </pre>
       */
      public int getIsBreak() {
        return isBreak_;
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       *
       * <pre>
       *是否提前解散
       * </pre>
       */
      public Builder setIsBreak(int value) {
        bitField0_ |= 0x00000002;
        isBreak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       *
       * <pre>
       *是否提前解散
       * </pre>
       */
      public Builder clearIsBreak() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isBreak_ = 0;
        onChanged();
        return this;
      }

      // optional int32 wanfa = 3;
      private int wanfa_ ;
      /**
       * <code>optional int32 wanfa = 3;</code>
       *
       * <pre>
       *玩法  
       * </pre>
       */
      public boolean hasWanfa() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       *
       * <pre>
       *玩法  
       * </pre>
       */
      public int getWanfa() {
        return wanfa_;
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       *
       * <pre>
       *玩法  
       * </pre>
       */
      public Builder setWanfa(int value) {
        bitField0_ |= 0x00000004;
        wanfa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       *
       * <pre>
       *玩法  
       * </pre>
       */
      public Builder clearWanfa() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wanfa_ = 0;
        onChanged();
        return this;
      }

      // repeated string ext = 4;
      private com.google.protobuf.LazyStringList ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.LazyStringArrayList(ext_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public java.util.List<java.lang.String>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public java.lang.String getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtBytes(int index) {
        return ext_.getByteString(index);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder setExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder addExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder clearExt() {
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       *扩展字段
       * </pre>
       */
      public Builder addExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;
      private java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards> huList_ =
        java.util.Collections.emptyList();
      private void ensureHuListIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          huList_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards>(huList_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCardsOrBuilder> huListBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards> getHuListList() {
        if (huListBuilder_ == null) {
          return java.util.Collections.unmodifiableList(huList_);
        } else {
          return huListBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public int getHuListCount() {
        if (huListBuilder_ == null) {
          return huList_.size();
        } else {
          return huListBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards getHuList(int index) {
        if (huListBuilder_ == null) {
          return huList_.get(index);
        } else {
          return huListBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public Builder setHuList(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards value) {
        if (huListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHuListIsMutable();
          huList_.set(index, value);
          onChanged();
        } else {
          huListBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public Builder setHuList(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder builderForValue) {
        if (huListBuilder_ == null) {
          ensureHuListIsMutable();
          huList_.set(index, builderForValue.build());
          onChanged();
        } else {
          huListBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public Builder addHuList(com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards value) {
        if (huListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHuListIsMutable();
          huList_.add(value);
          onChanged();
        } else {
          huListBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public Builder addHuList(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards value) {
        if (huListBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureHuListIsMutable();
          huList_.add(index, value);
          onChanged();
        } else {
          huListBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public Builder addHuList(
          com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder builderForValue) {
        if (huListBuilder_ == null) {
          ensureHuListIsMutable();
          huList_.add(builderForValue.build());
          onChanged();
        } else {
          huListBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public Builder addHuList(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder builderForValue) {
        if (huListBuilder_ == null) {
          ensureHuListIsMutable();
          huList_.add(index, builderForValue.build());
          onChanged();
        } else {
          huListBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public Builder addAllHuList(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards> values) {
        if (huListBuilder_ == null) {
          ensureHuListIsMutable();
          super.addAll(values, huList_);
          onChanged();
        } else {
          huListBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public Builder clearHuList() {
        if (huListBuilder_ == null) {
          huList_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          huListBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public Builder removeHuList(int index) {
        if (huListBuilder_ == null) {
          ensureHuListIsMutable();
          huList_.remove(index);
          onChanged();
        } else {
          huListBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder getHuListBuilder(
          int index) {
        return getHuListFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCardsOrBuilder getHuListOrBuilder(
          int index) {
        if (huListBuilder_ == null) {
          return huList_.get(index);  } else {
          return huListBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCardsOrBuilder> 
           getHuListOrBuilderList() {
        if (huListBuilder_ != null) {
          return huListBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(huList_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder addHuListBuilder() {
        return getHuListFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder addHuListBuilder(
          int index) {
        return getHuListFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.MjHuCards huList = 6;</code>
       *
       * <pre>
       *所有胡的记录，针对甘肃麻将
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder> 
           getHuListBuilderList() {
        return getHuListFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCardsOrBuilder> 
          getHuListFieldBuilder() {
        if (huListBuilder_ == null) {
          huListBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCards.Builder, com.sy599.game.msg.serverPacket.TableMjResMsg.MjHuCardsOrBuilder>(
                  huList_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          huList_ = null;
        }
        return huListBuilder_;
      }

      // repeated int32 bird = 7;
      private java.util.List<java.lang.Integer> bird_ = java.util.Collections.emptyList();
      private void ensureBirdIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          bird_ = new java.util.ArrayList<java.lang.Integer>(bird_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 bird = 7;</code>
       *
       * <pre>
       *鸟ID
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBirdList() {
        return java.util.Collections.unmodifiableList(bird_);
      }
      /**
       * <code>repeated int32 bird = 7;</code>
       *
       * <pre>
       *鸟ID
       * </pre>
       */
      public int getBirdCount() {
        return bird_.size();
      }
      /**
       * <code>repeated int32 bird = 7;</code>
       *
       * <pre>
       *鸟ID
       * </pre>
       */
      public int getBird(int index) {
        return bird_.get(index);
      }
      /**
       * <code>repeated int32 bird = 7;</code>
       *
       * <pre>
       *鸟ID
       * </pre>
       */
      public Builder setBird(
          int index, int value) {
        ensureBirdIsMutable();
        bird_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird = 7;</code>
       *
       * <pre>
       *鸟ID
       * </pre>
       */
      public Builder addBird(int value) {
        ensureBirdIsMutable();
        bird_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird = 7;</code>
       *
       * <pre>
       *鸟ID
       * </pre>
       */
      public Builder addAllBird(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBirdIsMutable();
        super.addAll(values, bird_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 bird = 7;</code>
       *
       * <pre>
       *鸟ID
       * </pre>
       */
      public Builder clearBird() {
        bird_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // repeated int32 birdSeat = 8;
      private java.util.List<java.lang.Integer> birdSeat_ = java.util.Collections.emptyList();
      private void ensureBirdSeatIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          birdSeat_ = new java.util.ArrayList<java.lang.Integer>(birdSeat_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 birdSeat = 8;</code>
       *
       * <pre>
       *鸟位置
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getBirdSeatList() {
        return java.util.Collections.unmodifiableList(birdSeat_);
      }
      /**
       * <code>repeated int32 birdSeat = 8;</code>
       *
       * <pre>
       *鸟位置
       * </pre>
       */
      public int getBirdSeatCount() {
        return birdSeat_.size();
      }
      /**
       * <code>repeated int32 birdSeat = 8;</code>
       *
       * <pre>
       *鸟位置
       * </pre>
       */
      public int getBirdSeat(int index) {
        return birdSeat_.get(index);
      }
      /**
       * <code>repeated int32 birdSeat = 8;</code>
       *
       * <pre>
       *鸟位置
       * </pre>
       */
      public Builder setBirdSeat(
          int index, int value) {
        ensureBirdSeatIsMutable();
        birdSeat_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 birdSeat = 8;</code>
       *
       * <pre>
       *鸟位置
       * </pre>
       */
      public Builder addBirdSeat(int value) {
        ensureBirdSeatIsMutable();
        birdSeat_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 birdSeat = 8;</code>
       *
       * <pre>
       *鸟位置
       * </pre>
       */
      public Builder addAllBirdSeat(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBirdSeatIsMutable();
        super.addAll(values, birdSeat_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 birdSeat = 8;</code>
       *
       * <pre>
       *鸟位置
       * </pre>
       */
      public Builder clearBirdSeat() {
        birdSeat_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      // optional int32 groupLogId = 9;
      private int groupLogId_ ;
      /**
       * <code>optional int32 groupLogId = 9;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public boolean hasGroupLogId() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 groupLogId = 9;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public int getGroupLogId() {
        return groupLogId_;
      }
      /**
       * <code>optional int32 groupLogId = 9;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public Builder setGroupLogId(int value) {
        bitField0_ |= 0x00000080;
        groupLogId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 groupLogId = 9;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public Builder clearGroupLogId() {
        bitField0_ = (bitField0_ & ~0x00000080);
        groupLogId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 leftCards = 10;
      private java.util.List<java.lang.Integer> leftCards_ = java.util.Collections.emptyList();
      private void ensureLeftCardsIsMutable() {
        if (!((bitField0_ & 0x00000100) == 0x00000100)) {
          leftCards_ = new java.util.ArrayList<java.lang.Integer>(leftCards_);
          bitField0_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLeftCardsList() {
        return java.util.Collections.unmodifiableList(leftCards_);
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public int getLeftCardsCount() {
        return leftCards_.size();
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public int getLeftCards(int index) {
        return leftCards_.get(index);
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder setLeftCards(
          int index, int value) {
        ensureLeftCardsIsMutable();
        leftCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder addLeftCards(int value) {
        ensureLeftCardsIsMutable();
        leftCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder addAllLeftCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLeftCardsIsMutable();
        super.addAll(values, leftCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 10;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder clearLeftCards() {
        leftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000100);
        onChanged();
        return this;
      }

      // optional int32 catchBirdSeat = 11;
      private int catchBirdSeat_ ;
      /**
       * <code>optional int32 catchBirdSeat = 11;</code>
       *
       * <pre>
       *抓鸟人座位
       * </pre>
       */
      public boolean hasCatchBirdSeat() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 catchBirdSeat = 11;</code>
       *
       * <pre>
       *抓鸟人座位
       * </pre>
       */
      public int getCatchBirdSeat() {
        return catchBirdSeat_;
      }
      /**
       * <code>optional int32 catchBirdSeat = 11;</code>
       *
       * <pre>
       *抓鸟人座位
       * </pre>
       */
      public Builder setCatchBirdSeat(int value) {
        bitField0_ |= 0x00000200;
        catchBirdSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 catchBirdSeat = 11;</code>
       *
       * <pre>
       *抓鸟人座位
       * </pre>
       */
      public Builder clearCatchBirdSeat() {
        bitField0_ = (bitField0_ & ~0x00000200);
        catchBirdSeat_ = 0;
        onChanged();
        return this;
      }

      // repeated int64 creditConfig = 12;
      private java.util.List<java.lang.Long> creditConfig_ = java.util.Collections.emptyList();
      private void ensureCreditConfigIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          creditConfig_ = new java.util.ArrayList<java.lang.Long>(creditConfig_);
          bitField0_ |= 0x00000400;
         }
      }
      /**
       * <code>repeated int64 creditConfig = 12;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public java.util.List<java.lang.Long>
          getCreditConfigList() {
        return java.util.Collections.unmodifiableList(creditConfig_);
      }
      /**
       * <code>repeated int64 creditConfig = 12;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public int getCreditConfigCount() {
        return creditConfig_.size();
      }
      /**
       * <code>repeated int64 creditConfig = 12;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public long getCreditConfig(int index) {
        return creditConfig_.get(index);
      }
      /**
       * <code>repeated int64 creditConfig = 12;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder setCreditConfig(
          int index, long value) {
        ensureCreditConfigIsMutable();
        creditConfig_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creditConfig = 12;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder addCreditConfig(long value) {
        ensureCreditConfigIsMutable();
        creditConfig_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creditConfig = 12;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder addAllCreditConfig(
          java.lang.Iterable<? extends java.lang.Long> values) {
        ensureCreditConfigIsMutable();
        super.addAll(values, creditConfig_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int64 creditConfig = 12;</code>
       *
       * <pre>
       * 信用房配置
       * </pre>
       */
      public Builder clearCreditConfig() {
        creditConfig_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000400);
        onChanged();
        return this;
      }

      // repeated int32 intParams = 13;
      private java.util.List<java.lang.Integer> intParams_ = java.util.Collections.emptyList();
      private void ensureIntParamsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          intParams_ = new java.util.ArrayList<java.lang.Integer>(intParams_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 intParams = 13;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getIntParamsList() {
        return java.util.Collections.unmodifiableList(intParams_);
      }
      /**
       * <code>repeated int32 intParams = 13;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public int getIntParamsCount() {
        return intParams_.size();
      }
      /**
       * <code>repeated int32 intParams = 13;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public int getIntParams(int index) {
        return intParams_.get(index);
      }
      /**
       * <code>repeated int32 intParams = 13;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder setIntParams(
          int index, int value) {
        ensureIntParamsIsMutable();
        intParams_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 13;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder addIntParams(int value) {
        ensureIntParamsIsMutable();
        intParams_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 13;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder addAllIntParams(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureIntParamsIsMutable();
        super.addAll(values, intParams_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 intParams = 13;</code>
       *
       * <pre>
       *创房参数
       * </pre>
       */
      public Builder clearIntParams() {
        intParams_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;
      private java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute> birdAttr_ =
        java.util.Collections.emptyList();
      private void ensureBirdAttrIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          birdAttr_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute>(birdAttr_);
          bitField0_ |= 0x00001000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttributeOrBuilder> birdAttrBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute> getBirdAttrList() {
        if (birdAttrBuilder_ == null) {
          return java.util.Collections.unmodifiableList(birdAttr_);
        } else {
          return birdAttrBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public int getBirdAttrCount() {
        if (birdAttrBuilder_ == null) {
          return birdAttr_.size();
        } else {
          return birdAttrBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute getBirdAttr(int index) {
        if (birdAttrBuilder_ == null) {
          return birdAttr_.get(index);
        } else {
          return birdAttrBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public Builder setBirdAttr(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute value) {
        if (birdAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBirdAttrIsMutable();
          birdAttr_.set(index, value);
          onChanged();
        } else {
          birdAttrBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public Builder setBirdAttr(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder builderForValue) {
        if (birdAttrBuilder_ == null) {
          ensureBirdAttrIsMutable();
          birdAttr_.set(index, builderForValue.build());
          onChanged();
        } else {
          birdAttrBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public Builder addBirdAttr(com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute value) {
        if (birdAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBirdAttrIsMutable();
          birdAttr_.add(value);
          onChanged();
        } else {
          birdAttrBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public Builder addBirdAttr(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute value) {
        if (birdAttrBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureBirdAttrIsMutable();
          birdAttr_.add(index, value);
          onChanged();
        } else {
          birdAttrBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public Builder addBirdAttr(
          com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder builderForValue) {
        if (birdAttrBuilder_ == null) {
          ensureBirdAttrIsMutable();
          birdAttr_.add(builderForValue.build());
          onChanged();
        } else {
          birdAttrBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public Builder addBirdAttr(
          int index, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder builderForValue) {
        if (birdAttrBuilder_ == null) {
          ensureBirdAttrIsMutable();
          birdAttr_.add(index, builderForValue.build());
          onChanged();
        } else {
          birdAttrBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public Builder addAllBirdAttr(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute> values) {
        if (birdAttrBuilder_ == null) {
          ensureBirdAttrIsMutable();
          super.addAll(values, birdAttr_);
          onChanged();
        } else {
          birdAttrBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public Builder clearBirdAttr() {
        if (birdAttrBuilder_ == null) {
          birdAttr_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00001000);
          onChanged();
        } else {
          birdAttrBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public Builder removeBirdAttr(int index) {
        if (birdAttrBuilder_ == null) {
          ensureBirdAttrIsMutable();
          birdAttr_.remove(index);
          onChanged();
        } else {
          birdAttrBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder getBirdAttrBuilder(
          int index) {
        return getBirdAttrFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttributeOrBuilder getBirdAttrOrBuilder(
          int index) {
        if (birdAttrBuilder_ == null) {
          return birdAttr_.get(index);  } else {
          return birdAttrBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttributeOrBuilder> 
           getBirdAttrOrBuilderList() {
        if (birdAttrBuilder_ != null) {
          return birdAttrBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(birdAttr_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder addBirdAttrBuilder() {
        return getBirdAttrFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder addBirdAttrBuilder(
          int index) {
        return getBirdAttrFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.BirdAttribute birdAttr = 14;</code>
       *
       * <pre>
       *鸟, 麻将id-&gt;谁中-&gt;谁的鸟
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder> 
           getBirdAttrBuilderList() {
        return getBirdAttrFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttributeOrBuilder> 
          getBirdAttrFieldBuilder() {
        if (birdAttrBuilder_ == null) {
          birdAttrBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttributeOrBuilder>(
                  birdAttr_,
                  ((bitField0_ & 0x00001000) == 0x00001000),
                  getParentForChildren(),
                  isClean());
          birdAttr_ = null;
        }
        return birdAttrBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.ClosingMjInfoRes)
    }

    static {
      defaultInstance = new ClosingMjInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.ClosingMjInfoRes)
  }

  public interface BirdAttributeOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // required uint32 mjId = 1;
    /**
     * <code>required uint32 mjId = 1;</code>
     *
     * <pre>
     *麻将id
     * </pre>
     */
    boolean hasMjId();
    /**
     * <code>required uint32 mjId = 1;</code>
     *
     * <pre>
     *麻将id
     * </pre>
     */
    int getMjId();

    // required uint32 awardSeat = 2;
    /**
     * <code>required uint32 awardSeat = 2;</code>
     *
     * <pre>
     *中的位置
     * </pre>
     */
    boolean hasAwardSeat();
    /**
     * <code>required uint32 awardSeat = 2;</code>
     *
     * <pre>
     *中的位置
     * </pre>
     */
    int getAwardSeat();

    // required uint32 belongSeat = 3;
    /**
     * <code>required uint32 belongSeat = 3;</code>
     *
     * <pre>
     *所属位置,默认为0,属于系统产出的
     * </pre>
     */
    boolean hasBelongSeat();
    /**
     * <code>required uint32 belongSeat = 3;</code>
     *
     * <pre>
     *所属位置,默认为0,属于系统产出的
     * </pre>
     */
    int getBelongSeat();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.BirdAttribute}
   */
  public static final class BirdAttribute extends
      com.google.protobuf.GeneratedMessage
      implements BirdAttributeOrBuilder {
    // Use BirdAttribute.newBuilder() to construct.
    private BirdAttribute(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private BirdAttribute(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final BirdAttribute defaultInstance;
    public static BirdAttribute getDefaultInstance() {
      return defaultInstance;
    }

    public BirdAttribute getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private BirdAttribute(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mjId_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              awardSeat_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              belongSeat_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_BirdAttribute_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_BirdAttribute_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.class, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder.class);
    }

    public static com.google.protobuf.Parser<BirdAttribute> PARSER =
        new com.google.protobuf.AbstractParser<BirdAttribute>() {
      public BirdAttribute parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new BirdAttribute(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<BirdAttribute> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // required uint32 mjId = 1;
    public static final int MJID_FIELD_NUMBER = 1;
    private int mjId_;
    /**
     * <code>required uint32 mjId = 1;</code>
     *
     * <pre>
     *麻将id
     * </pre>
     */
    public boolean hasMjId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 mjId = 1;</code>
     *
     * <pre>
     *麻将id
     * </pre>
     */
    public int getMjId() {
      return mjId_;
    }

    // required uint32 awardSeat = 2;
    public static final int AWARDSEAT_FIELD_NUMBER = 2;
    private int awardSeat_;
    /**
     * <code>required uint32 awardSeat = 2;</code>
     *
     * <pre>
     *中的位置
     * </pre>
     */
    public boolean hasAwardSeat() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 awardSeat = 2;</code>
     *
     * <pre>
     *中的位置
     * </pre>
     */
    public int getAwardSeat() {
      return awardSeat_;
    }

    // required uint32 belongSeat = 3;
    public static final int BELONGSEAT_FIELD_NUMBER = 3;
    private int belongSeat_;
    /**
     * <code>required uint32 belongSeat = 3;</code>
     *
     * <pre>
     *所属位置,默认为0,属于系统产出的
     * </pre>
     */
    public boolean hasBelongSeat() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 belongSeat = 3;</code>
     *
     * <pre>
     *所属位置,默认为0,属于系统产出的
     * </pre>
     */
    public int getBelongSeat() {
      return belongSeat_;
    }

    private void initFields() {
      mjId_ = 0;
      awardSeat_ = 0;
      belongSeat_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasMjId()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasAwardSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasBelongSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, mjId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, awardSeat_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, belongSeat_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, mjId_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, awardSeat_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, belongSeat_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.BirdAttribute}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttributeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_BirdAttribute_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_BirdAttribute_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.class, com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mjId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        awardSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        belongSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.internal_static_com_sy599_game_msg_serverPacket_BirdAttribute_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute build() {
        com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute buildPartial() {
        com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute result = new com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mjId_ = mjId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.awardSeat_ = awardSeat_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.belongSeat_ = belongSeat_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute other) {
        if (other == com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute.getDefaultInstance()) return this;
        if (other.hasMjId()) {
          setMjId(other.getMjId());
        }
        if (other.hasAwardSeat()) {
          setAwardSeat(other.getAwardSeat());
        }
        if (other.hasBelongSeat()) {
          setBelongSeat(other.getBelongSeat());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasMjId()) {
          
          return false;
        }
        if (!hasAwardSeat()) {
          
          return false;
        }
        if (!hasBelongSeat()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableMjResMsg.BirdAttribute) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // required uint32 mjId = 1;
      private int mjId_ ;
      /**
       * <code>required uint32 mjId = 1;</code>
       *
       * <pre>
       *麻将id
       * </pre>
       */
      public boolean hasMjId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 mjId = 1;</code>
       *
       * <pre>
       *麻将id
       * </pre>
       */
      public int getMjId() {
        return mjId_;
      }
      /**
       * <code>required uint32 mjId = 1;</code>
       *
       * <pre>
       *麻将id
       * </pre>
       */
      public Builder setMjId(int value) {
        bitField0_ |= 0x00000001;
        mjId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 mjId = 1;</code>
       *
       * <pre>
       *麻将id
       * </pre>
       */
      public Builder clearMjId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mjId_ = 0;
        onChanged();
        return this;
      }

      // required uint32 awardSeat = 2;
      private int awardSeat_ ;
      /**
       * <code>required uint32 awardSeat = 2;</code>
       *
       * <pre>
       *中的位置
       * </pre>
       */
      public boolean hasAwardSeat() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 awardSeat = 2;</code>
       *
       * <pre>
       *中的位置
       * </pre>
       */
      public int getAwardSeat() {
        return awardSeat_;
      }
      /**
       * <code>required uint32 awardSeat = 2;</code>
       *
       * <pre>
       *中的位置
       * </pre>
       */
      public Builder setAwardSeat(int value) {
        bitField0_ |= 0x00000002;
        awardSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 awardSeat = 2;</code>
       *
       * <pre>
       *中的位置
       * </pre>
       */
      public Builder clearAwardSeat() {
        bitField0_ = (bitField0_ & ~0x00000002);
        awardSeat_ = 0;
        onChanged();
        return this;
      }

      // required uint32 belongSeat = 3;
      private int belongSeat_ ;
      /**
       * <code>required uint32 belongSeat = 3;</code>
       *
       * <pre>
       *所属位置,默认为0,属于系统产出的
       * </pre>
       */
      public boolean hasBelongSeat() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 belongSeat = 3;</code>
       *
       * <pre>
       *所属位置,默认为0,属于系统产出的
       * </pre>
       */
      public int getBelongSeat() {
        return belongSeat_;
      }
      /**
       * <code>required uint32 belongSeat = 3;</code>
       *
       * <pre>
       *所属位置,默认为0,属于系统产出的
       * </pre>
       */
      public Builder setBelongSeat(int value) {
        bitField0_ |= 0x00000004;
        belongSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 belongSeat = 3;</code>
       *
       * <pre>
       *所属位置,默认为0,属于系统产出的
       * </pre>
       */
      public Builder clearBelongSeat() {
        bitField0_ = (bitField0_ & ~0x00000004);
        belongSeat_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.BirdAttribute)
    }

    static {
      defaultInstance = new BirdAttribute(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.BirdAttribute)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_MjHuCards_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_MjHuCards_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_ClosingMjPlayerInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_ClosingMjPlayerInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_ClosingMjInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_ClosingMjInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_BirdAttribute_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_BirdAttribute_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\037proto/files/TableMjResMsg.proto\022\037com.s" +
      "y599.game.msg.serverPacket\032 proto/files/" +
      "TablePhzResMsg.proto\"7\n\tMjHuCards\022\016\n\006act" +
      "ion\030\001 \002(\005\022\r\n\005cards\030\002 \003(\005\022\013\n\003ext\030\003 \003(\005\"\247\004" +
      "\n\026ClosingMjPlayerInfoRes\022\016\n\006userId\030\001 \001(\t" +
      "\022\014\n\004name\030\002 \001(\t\022\014\n\004seat\030\003 \002(\005\022\013\n\003sex\030\004 \001(" +
      "\005\022\014\n\004icon\030\005 \001(\t\022\r\n\005point\030\006 \001(\005\022\022\n\ntotalP" +
      "oint\030\007 \001(\005\022\020\n\010winCount\030\010 \001(\005\022\021\n\tlostCoun" +
      "t\030\t \001(\005\022\020\n\010maxPoint\030\n \001(\005\022\017\n\007zmCount\030\013 \001" +
      "(\005\022\017\n\007jpCount\030\014 \001(\005\022\017\n\007fpCount\030\r \001(\005\022\020\n\010",
      "totalFan\030\016 \001(\005\022\013\n\003ext\030\017 \003(\005\022\020\n\010handPais\030" +
      "\020 \003(\005\022=\n\010moldPais\030\021 \003(\0132+.com.sy599.game" +
      ".msg.serverPacket.PhzHuCards\022\014\n\004isHu\030\022 \001" +
      "(\005\022\021\n\tbirdPoint\030\023 \001(\005\022\023\n\013actionCount\030\024 \003" +
      "(\005\022\r\n\005dahus\030\025 \003(\005\022\017\n\007xiaohus\030\026 \003(\005\022\016\n\006cr" +
      "edit\030\027 \001(\005\022\025\n\rwinLoseCredit\030\030 \001(\003\022\030\n\020com" +
      "missionCredit\030\031 \001(\003\022\020\n\010pointArr\030\032 \003(\005\022\016\n" +
      "\006fanPao\030\033 \001(\005\022\020\n\010goldFlag\030\034 \001(\005\"\225\003\n\020Clos" +
      "ingMjInfoRes\022O\n\016closingPlayers\030\001 \003(\01327.c" +
      "om.sy599.game.msg.serverPacket.ClosingMj",
      "PlayerInfoRes\022\017\n\007isBreak\030\002 \001(\005\022\r\n\005wanfa\030" +
      "\003 \001(\005\022\013\n\003ext\030\004 \003(\t\022:\n\006huList\030\006 \003(\0132*.com" +
      ".sy599.game.msg.serverPacket.MjHuCards\022\014" +
      "\n\004bird\030\007 \003(\005\022\020\n\010birdSeat\030\010 \003(\005\022\022\n\ngroupL" +
      "ogId\030\t \001(\005\022\021\n\tleftCards\030\n \003(\005\022\025\n\rcatchBi" +
      "rdSeat\030\013 \001(\005\022\024\n\014creditConfig\030\014 \003(\003\022\021\n\tin" +
      "tParams\030\r \003(\005\022@\n\010birdAttr\030\016 \003(\0132..com.sy" +
      "599.game.msg.serverPacket.BirdAttribute\"" +
      "D\n\rBirdAttribute\022\014\n\004mjId\030\001 \002(\r\022\021\n\tawardS" +
      "eat\030\002 \002(\r\022\022\n\nbelongSeat\030\003 \002(\r"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_sy599_game_msg_serverPacket_MjHuCards_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_sy599_game_msg_serverPacket_MjHuCards_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_MjHuCards_descriptor,
              new java.lang.String[] { "Action", "Cards", "Ext", });
          internal_static_com_sy599_game_msg_serverPacket_ClosingMjPlayerInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_sy599_game_msg_serverPacket_ClosingMjPlayerInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_ClosingMjPlayerInfoRes_descriptor,
              new java.lang.String[] { "UserId", "Name", "Seat", "Sex", "Icon", "Point", "TotalPoint", "WinCount", "LostCount", "MaxPoint", "ZmCount", "JpCount", "FpCount", "TotalFan", "Ext", "HandPais", "MoldPais", "IsHu", "BirdPoint", "ActionCount", "Dahus", "Xiaohus", "Credit", "WinLoseCredit", "CommissionCredit", "PointArr", "FanPao", "GoldFlag", });
          internal_static_com_sy599_game_msg_serverPacket_ClosingMjInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(2);
          internal_static_com_sy599_game_msg_serverPacket_ClosingMjInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_ClosingMjInfoRes_descriptor,
              new java.lang.String[] { "ClosingPlayers", "IsBreak", "Wanfa", "Ext", "HuList", "Bird", "BirdSeat", "GroupLogId", "LeftCards", "CatchBirdSeat", "CreditConfig", "IntParams", "BirdAttr", });
          internal_static_com_sy599_game_msg_serverPacket_BirdAttribute_descriptor =
            getDescriptor().getMessageTypes().get(3);
          internal_static_com_sy599_game_msg_serverPacket_BirdAttribute_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_BirdAttribute_descriptor,
              new java.lang.String[] { "MjId", "AwardSeat", "BelongSeat", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.sy599.game.msg.serverPacket.TablePhzResMsg.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
