// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/files/TableGhzResMsg.proto

package com.sy599.game.msg.serverPacket;

public final class TableGhzResMsg {
  private TableGhzResMsg() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ClosingGhzInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes> 
        getClosingPlayersList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
     */
    com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes getClosingPlayers(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
     */
    int getClosingPlayersCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
     */
    com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index);

    // optional int32 isBreak = 2;
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    boolean hasIsBreak();
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    int getIsBreak();

    // optional int32 wanfa = 3;
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    boolean hasWanfa();
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    int getWanfa();

    // repeated string ext = 4;
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    java.util.List<java.lang.String>
    getExtList();
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    int getExtCount();
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    java.lang.String getExt(int index);
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    com.google.protobuf.ByteString
        getExtBytes(int index);

    // repeated string matchExt = 5;
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    java.util.List<java.lang.String>
    getMatchExtList();
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    int getMatchExtCount();
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    java.lang.String getMatchExt(int index);
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    com.google.protobuf.ByteString
        getMatchExtBytes(int index);

    // repeated int32 leftCards = 6;
    /**
     * <code>repeated int32 leftCards = 6;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getLeftCardsList();
    /**
     * <code>repeated int32 leftCards = 6;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    int getLeftCardsCount();
    /**
     * <code>repeated int32 leftCards = 6;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    int getLeftCards(int index);

    // optional int32 tun = 7;
    /**
     * <code>optional int32 tun = 7;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    boolean hasTun();
    /**
     * <code>optional int32 tun = 7;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    int getTun();

    // optional int32 fan = 8;
    /**
     * <code>optional int32 fan = 8;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    boolean hasFan();
    /**
     * <code>optional int32 fan = 8;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    int getFan();

    // optional int32 huxi = 9;
    /**
     * <code>optional int32 huxi = 9;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    boolean hasHuxi();
    /**
     * <code>optional int32 huxi = 9;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    int getHuxi();

    // optional int32 huSeat = 10;
    /**
     * <code>optional int32 huSeat = 10;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    boolean hasHuSeat();
    /**
     * <code>optional int32 huSeat = 10;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    int getHuSeat();

    // optional int32 huCard = 11;
    /**
     * <code>optional int32 huCard = 11;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    boolean hasHuCard();
    /**
     * <code>optional int32 huCard = 11;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    int getHuCard();

    // optional int32 totalTun = 12;
    /**
     * <code>optional int32 totalTun = 12;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    boolean hasTotalTun();
    /**
     * <code>optional int32 totalTun = 12;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    int getTotalTun();

    // repeated int32 fanTypes = 13;
    /**
     * <code>repeated int32 fanTypes = 13;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    java.util.List<java.lang.Integer> getFanTypesList();
    /**
     * <code>repeated int32 fanTypes = 13;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    int getFanTypesCount();
    /**
     * <code>repeated int32 fanTypes = 13;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    int getFanTypes(int index);

    // optional int32 isRenew = 14;
    /**
     * <code>optional int32 isRenew = 14;</code>
     *
     * <pre>
     * 是否续费
     * </pre>
     */
    boolean hasIsRenew();
    /**
     * <code>optional int32 isRenew = 14;</code>
     *
     * <pre>
     * 是否续费
     * </pre>
     */
    int getIsRenew();

    // optional int32 renewCount = 15;
    /**
     * <code>optional int32 renewCount = 15;</code>
     *
     * <pre>
     * 续费次数
     * </pre>
     */
    boolean hasRenewCount();
    /**
     * <code>optional int32 renewCount = 15;</code>
     *
     * <pre>
     * 续费次数
     * </pre>
     */
    int getRenewCount();

    // optional string pointRecord = 16;
    /**
     * <code>optional string pointRecord = 16;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    boolean hasPointRecord();
    /**
     * <code>optional string pointRecord = 16;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    java.lang.String getPointRecord();
    /**
     * <code>optional string pointRecord = 16;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    com.google.protobuf.ByteString
        getPointRecordBytes();

    // repeated int32 startLeftCards = 17;
    /**
     * <code>repeated int32 startLeftCards = 17;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getStartLeftCardsList();
    /**
     * <code>repeated int32 startLeftCards = 17;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    int getStartLeftCardsCount();
    /**
     * <code>repeated int32 startLeftCards = 17;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    int getStartLeftCards(int index);

    // optional int32 groupLogId = 18;
    /**
     * <code>optional int32 groupLogId = 18;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    boolean hasGroupLogId();
    /**
     * <code>optional int32 groupLogId = 18;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    int getGroupLogId();

    // repeated int32 chouCards = 19;
    /**
     * <code>repeated int32 chouCards = 19;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getChouCardsList();
    /**
     * <code>repeated int32 chouCards = 19;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    int getChouCardsCount();
    /**
     * <code>repeated int32 chouCards = 19;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    int getChouCards(int index);
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingGhzInfoRes}
   *
   * <pre>
   *结算
   * </pre>
   */
  public static final class ClosingGhzInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements ClosingGhzInfoResOrBuilder {
    // Use ClosingGhzInfoRes.newBuilder() to construct.
    private ClosingGhzInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosingGhzInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosingGhzInfoRes defaultInstance;
    public static ClosingGhzInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public ClosingGhzInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosingGhzInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes>();
                mutable_bitField0_ |= 0x00000001;
              }
              closingPlayers_.add(input.readMessage(com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              isBreak_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              wanfa_ = input.readInt32();
              break;
            }
            case 34: {
              if (!((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
                ext_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000008;
              }
              ext_.add(input.readBytes());
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                matchExt_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000010;
              }
              matchExt_.add(input.readBytes());
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                leftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              leftCards_.add(input.readInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                leftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                leftCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              bitField0_ |= 0x00000004;
              tun_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000008;
              fan_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000010;
              huxi_ = input.readInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000020;
              huSeat_ = input.readInt32();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000040;
              huCard_ = input.readInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000080;
              totalTun_ = input.readInt32();
              break;
            }
            case 104: {
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
                fanTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              fanTypes_.add(input.readInt32());
              break;
            }
            case 106: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00001000) == 0x00001000) && input.getBytesUntilLimit() > 0) {
                fanTypes_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00001000;
              }
              while (input.getBytesUntilLimit() > 0) {
                fanTypes_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 112: {
              bitField0_ |= 0x00000100;
              isRenew_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00000200;
              renewCount_ = input.readInt32();
              break;
            }
            case 130: {
              bitField0_ |= 0x00000400;
              pointRecord_ = input.readBytes();
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                startLeftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              startLeftCards_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                startLeftCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                startLeftCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              bitField0_ |= 0x00000800;
              groupLogId_ = input.readInt32();
              break;
            }
            case 152: {
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
                chouCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              chouCards_.add(input.readInt32());
              break;
            }
            case 154: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00040000) == 0x00040000) && input.getBytesUntilLimit() > 0) {
                chouCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00040000;
              }
              while (input.getBytesUntilLimit() > 0) {
                chouCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
        }
        if (((mutable_bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(ext_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          matchExt_ = new com.google.protobuf.UnmodifiableLazyStringList(matchExt_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          leftCards_ = java.util.Collections.unmodifiableList(leftCards_);
        }
        if (((mutable_bitField0_ & 0x00001000) == 0x00001000)) {
          fanTypes_ = java.util.Collections.unmodifiableList(fanTypes_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          startLeftCards_ = java.util.Collections.unmodifiableList(startLeftCards_);
        }
        if (((mutable_bitField0_ & 0x00040000) == 0x00040000)) {
          chouCards_ = java.util.Collections.unmodifiableList(chouCards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableGhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingGhzInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableGhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingGhzInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes.class, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosingGhzInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<ClosingGhzInfoRes>() {
      public ClosingGhzInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosingGhzInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosingGhzInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;
    public static final int CLOSINGPLAYERS_FIELD_NUMBER = 1;
    private java.util.List<com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes> closingPlayers_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes> getClosingPlayersList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoResOrBuilder> 
        getClosingPlayersOrBuilderList() {
      return closingPlayers_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public int getClosingPlayersCount() {
      return closingPlayers_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes getClosingPlayers(int index) {
      return closingPlayers_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
     */
    public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
        int index) {
      return closingPlayers_.get(index);
    }

    // optional int32 isBreak = 2;
    public static final int ISBREAK_FIELD_NUMBER = 2;
    private int isBreak_;
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    public boolean hasIsBreak() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 isBreak = 2;</code>
     */
    public int getIsBreak() {
      return isBreak_;
    }

    // optional int32 wanfa = 3;
    public static final int WANFA_FIELD_NUMBER = 3;
    private int wanfa_;
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    public boolean hasWanfa() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 wanfa = 3;</code>
     */
    public int getWanfa() {
      return wanfa_;
    }

    // repeated string ext = 4;
    public static final int EXT_FIELD_NUMBER = 4;
    private com.google.protobuf.LazyStringList ext_;
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public java.util.List<java.lang.String>
        getExtList() {
      return ext_;
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public int getExtCount() {
      return ext_.size();
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public java.lang.String getExt(int index) {
      return ext_.get(index);
    }
    /**
     * <code>repeated string ext = 4;</code>
     *
     * <pre>
     * </pre>
     */
    public com.google.protobuf.ByteString
        getExtBytes(int index) {
      return ext_.getByteString(index);
    }

    // repeated string matchExt = 5;
    public static final int MATCHEXT_FIELD_NUMBER = 5;
    private com.google.protobuf.LazyStringList matchExt_;
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public java.util.List<java.lang.String>
        getMatchExtList() {
      return matchExt_;
    }
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public int getMatchExtCount() {
      return matchExt_.size();
    }
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public java.lang.String getMatchExt(int index) {
      return matchExt_.get(index);
    }
    /**
     * <code>repeated string matchExt = 5;</code>
     *
     * <pre>
     *比赛场
     * </pre>
     */
    public com.google.protobuf.ByteString
        getMatchExtBytes(int index) {
      return matchExt_.getByteString(index);
    }

    // repeated int32 leftCards = 6;
    public static final int LEFTCARDS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> leftCards_;
    /**
     * <code>repeated int32 leftCards = 6;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getLeftCardsList() {
      return leftCards_;
    }
    /**
     * <code>repeated int32 leftCards = 6;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public int getLeftCardsCount() {
      return leftCards_.size();
    }
    /**
     * <code>repeated int32 leftCards = 6;</code>
     *
     * <pre>
     *剩下的牌
     * </pre>
     */
    public int getLeftCards(int index) {
      return leftCards_.get(index);
    }

    // optional int32 tun = 7;
    public static final int TUN_FIELD_NUMBER = 7;
    private int tun_;
    /**
     * <code>optional int32 tun = 7;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    public boolean hasTun() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 tun = 7;</code>
     *
     * <pre>
     *囤数
     * </pre>
     */
    public int getTun() {
      return tun_;
    }

    // optional int32 fan = 8;
    public static final int FAN_FIELD_NUMBER = 8;
    private int fan_;
    /**
     * <code>optional int32 fan = 8;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    public boolean hasFan() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 fan = 8;</code>
     *
     * <pre>
     *番数
     * </pre>
     */
    public int getFan() {
      return fan_;
    }

    // optional int32 huxi = 9;
    public static final int HUXI_FIELD_NUMBER = 9;
    private int huxi_;
    /**
     * <code>optional int32 huxi = 9;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    public boolean hasHuxi() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 huxi = 9;</code>
     *
     * <pre>
     *胡息
     * </pre>
     */
    public int getHuxi() {
      return huxi_;
    }

    // optional int32 huSeat = 10;
    public static final int HUSEAT_FIELD_NUMBER = 10;
    private int huSeat_;
    /**
     * <code>optional int32 huSeat = 10;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    public boolean hasHuSeat() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 huSeat = 10;</code>
     *
     * <pre>
     *胡的人座位号
     * </pre>
     */
    public int getHuSeat() {
      return huSeat_;
    }

    // optional int32 huCard = 11;
    public static final int HUCARD_FIELD_NUMBER = 11;
    private int huCard_;
    /**
     * <code>optional int32 huCard = 11;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    public boolean hasHuCard() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 huCard = 11;</code>
     *
     * <pre>
     *胡的牌
     * </pre>
     */
    public int getHuCard() {
      return huCard_;
    }

    // optional int32 totalTun = 12;
    public static final int TOTALTUN_FIELD_NUMBER = 12;
    private int totalTun_;
    /**
     * <code>optional int32 totalTun = 12;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    public boolean hasTotalTun() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional int32 totalTun = 12;</code>
     *
     * <pre>
     *总囤数
     * </pre>
     */
    public int getTotalTun() {
      return totalTun_;
    }

    // repeated int32 fanTypes = 13;
    public static final int FANTYPES_FIELD_NUMBER = 13;
    private java.util.List<java.lang.Integer> fanTypes_;
    /**
     * <code>repeated int32 fanTypes = 13;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFanTypesList() {
      return fanTypes_;
    }
    /**
     * <code>repeated int32 fanTypes = 13;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    public int getFanTypesCount() {
      return fanTypes_.size();
    }
    /**
     * <code>repeated int32 fanTypes = 13;</code>
     *
     * <pre>
     *番类型
     * </pre>
     */
    public int getFanTypes(int index) {
      return fanTypes_.get(index);
    }

    // optional int32 isRenew = 14;
    public static final int ISRENEW_FIELD_NUMBER = 14;
    private int isRenew_;
    /**
     * <code>optional int32 isRenew = 14;</code>
     *
     * <pre>
     * 是否续费
     * </pre>
     */
    public boolean hasIsRenew() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 isRenew = 14;</code>
     *
     * <pre>
     * 是否续费
     * </pre>
     */
    public int getIsRenew() {
      return isRenew_;
    }

    // optional int32 renewCount = 15;
    public static final int RENEWCOUNT_FIELD_NUMBER = 15;
    private int renewCount_;
    /**
     * <code>optional int32 renewCount = 15;</code>
     *
     * <pre>
     * 续费次数
     * </pre>
     */
    public boolean hasRenewCount() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional int32 renewCount = 15;</code>
     *
     * <pre>
     * 续费次数
     * </pre>
     */
    public int getRenewCount() {
      return renewCount_;
    }

    // optional string pointRecord = 16;
    public static final int POINTRECORD_FIELD_NUMBER = 16;
    private java.lang.Object pointRecord_;
    /**
     * <code>optional string pointRecord = 16;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    public boolean hasPointRecord() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string pointRecord = 16;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    public java.lang.String getPointRecord() {
      java.lang.Object ref = pointRecord_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pointRecord_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pointRecord = 16;</code>
     *
     * <pre>
     * 记分记录
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPointRecordBytes() {
      java.lang.Object ref = pointRecord_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pointRecord_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // repeated int32 startLeftCards = 17;
    public static final int STARTLEFTCARDS_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> startLeftCards_;
    /**
     * <code>repeated int32 startLeftCards = 17;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getStartLeftCardsList() {
      return startLeftCards_;
    }
    /**
     * <code>repeated int32 startLeftCards = 17;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    public int getStartLeftCardsCount() {
      return startLeftCards_.size();
    }
    /**
     * <code>repeated int32 startLeftCards = 17;</code>
     *
     * <pre>
     *桌面所有底牌
     * </pre>
     */
    public int getStartLeftCards(int index) {
      return startLeftCards_.get(index);
    }

    // optional int32 groupLogId = 18;
    public static final int GROUPLOGID_FIELD_NUMBER = 18;
    private int groupLogId_;
    /**
     * <code>optional int32 groupLogId = 18;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    public boolean hasGroupLogId() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 groupLogId = 18;</code>
     *
     * <pre>
     *俱乐部战绩id
     * </pre>
     */
    public int getGroupLogId() {
      return groupLogId_;
    }

    // repeated int32 chouCards = 19;
    public static final int CHOUCARDS_FIELD_NUMBER = 19;
    private java.util.List<java.lang.Integer> chouCards_;
    /**
     * <code>repeated int32 chouCards = 19;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getChouCardsList() {
      return chouCards_;
    }
    /**
     * <code>repeated int32 chouCards = 19;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    public int getChouCardsCount() {
      return chouCards_.size();
    }
    /**
     * <code>repeated int32 chouCards = 19;</code>
     *
     * <pre>
     *抽掉的牌
     * </pre>
     */
    public int getChouCards(int index) {
      return chouCards_.get(index);
    }

    private void initFields() {
      closingPlayers_ = java.util.Collections.emptyList();
      isBreak_ = 0;
      wanfa_ = 0;
      ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      leftCards_ = java.util.Collections.emptyList();
      tun_ = 0;
      fan_ = 0;
      huxi_ = 0;
      huSeat_ = 0;
      huCard_ = 0;
      totalTun_ = 0;
      fanTypes_ = java.util.Collections.emptyList();
      isRenew_ = 0;
      renewCount_ = 0;
      pointRecord_ = "";
      startLeftCards_ = java.util.Collections.emptyList();
      groupLogId_ = 0;
      chouCards_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      for (int i = 0; i < getClosingPlayersCount(); i++) {
        if (!getClosingPlayers(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < closingPlayers_.size(); i++) {
        output.writeMessage(1, closingPlayers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(2, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(3, wanfa_);
      }
      for (int i = 0; i < ext_.size(); i++) {
        output.writeBytes(4, ext_.getByteString(i));
      }
      for (int i = 0; i < matchExt_.size(); i++) {
        output.writeBytes(5, matchExt_.getByteString(i));
      }
      for (int i = 0; i < leftCards_.size(); i++) {
        output.writeInt32(6, leftCards_.get(i));
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(7, tun_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(8, fan_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(9, huxi_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(10, huSeat_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(11, huCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(12, totalTun_);
      }
      for (int i = 0; i < fanTypes_.size(); i++) {
        output.writeInt32(13, fanTypes_.get(i));
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(14, isRenew_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeInt32(15, renewCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(16, getPointRecordBytes());
      }
      for (int i = 0; i < startLeftCards_.size(); i++) {
        output.writeInt32(17, startLeftCards_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(18, groupLogId_);
      }
      for (int i = 0; i < chouCards_.size(); i++) {
        output.writeInt32(19, chouCards_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < closingPlayers_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, closingPlayers_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, isBreak_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, wanfa_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < ext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(ext_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getExtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < matchExt_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(matchExt_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getMatchExtList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < leftCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(leftCards_.get(i));
        }
        size += dataSize;
        size += 1 * getLeftCardsList().size();
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, tun_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, fan_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, huxi_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(10, huSeat_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, huCard_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(12, totalTun_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < fanTypes_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(fanTypes_.get(i));
        }
        size += dataSize;
        size += 1 * getFanTypesList().size();
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, isRenew_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, renewCount_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(16, getPointRecordBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < startLeftCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(startLeftCards_.get(i));
        }
        size += dataSize;
        size += 2 * getStartLeftCardsList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, groupLogId_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < chouCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(chouCards_.get(i));
        }
        size += dataSize;
        size += 2 * getChouCardsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingGhzInfoRes}
     *
     * <pre>
     *结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableGhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingGhzInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableGhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingGhzInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes.class, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getClosingPlayersFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          closingPlayersBuilder_.clear();
        }
        isBreak_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        wanfa_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        leftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        tun_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        fan_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        huxi_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        huSeat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000200);
        huCard_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        totalTun_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        fanTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        isRenew_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        renewCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        pointRecord_ = "";
        bitField0_ = (bitField0_ & ~0x00008000);
        startLeftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        groupLogId_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        chouCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableGhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingGhzInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes build() {
        com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes result = new com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (closingPlayersBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            closingPlayers_ = java.util.Collections.unmodifiableList(closingPlayers_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.closingPlayers_ = closingPlayers_;
        } else {
          result.closingPlayers_ = closingPlayersBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.isBreak_ = isBreak_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.wanfa_ = wanfa_;
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.UnmodifiableLazyStringList(
              ext_);
          bitField0_ = (bitField0_ & ~0x00000008);
        }
        result.ext_ = ext_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          matchExt_ = new com.google.protobuf.UnmodifiableLazyStringList(
              matchExt_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.matchExt_ = matchExt_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          leftCards_ = java.util.Collections.unmodifiableList(leftCards_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.leftCards_ = leftCards_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tun_ = tun_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000008;
        }
        result.fan_ = fan_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000010;
        }
        result.huxi_ = huxi_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000020;
        }
        result.huSeat_ = huSeat_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000040;
        }
        result.huCard_ = huCard_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000080;
        }
        result.totalTun_ = totalTun_;
        if (((bitField0_ & 0x00001000) == 0x00001000)) {
          fanTypes_ = java.util.Collections.unmodifiableList(fanTypes_);
          bitField0_ = (bitField0_ & ~0x00001000);
        }
        result.fanTypes_ = fanTypes_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000100;
        }
        result.isRenew_ = isRenew_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00000200;
        }
        result.renewCount_ = renewCount_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00000400;
        }
        result.pointRecord_ = pointRecord_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          startLeftCards_ = java.util.Collections.unmodifiableList(startLeftCards_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.startLeftCards_ = startLeftCards_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.groupLogId_ = groupLogId_;
        if (((bitField0_ & 0x00040000) == 0x00040000)) {
          chouCards_ = java.util.Collections.unmodifiableList(chouCards_);
          bitField0_ = (bitField0_ & ~0x00040000);
        }
        result.chouCards_ = chouCards_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes.getDefaultInstance()) return this;
        if (closingPlayersBuilder_ == null) {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayers_.isEmpty()) {
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureClosingPlayersIsMutable();
              closingPlayers_.addAll(other.closingPlayers_);
            }
            onChanged();
          }
        } else {
          if (!other.closingPlayers_.isEmpty()) {
            if (closingPlayersBuilder_.isEmpty()) {
              closingPlayersBuilder_.dispose();
              closingPlayersBuilder_ = null;
              closingPlayers_ = other.closingPlayers_;
              bitField0_ = (bitField0_ & ~0x00000001);
              closingPlayersBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getClosingPlayersFieldBuilder() : null;
            } else {
              closingPlayersBuilder_.addAllMessages(other.closingPlayers_);
            }
          }
        }
        if (other.hasIsBreak()) {
          setIsBreak(other.getIsBreak());
        }
        if (other.hasWanfa()) {
          setWanfa(other.getWanfa());
        }
        if (!other.ext_.isEmpty()) {
          if (ext_.isEmpty()) {
            ext_ = other.ext_;
            bitField0_ = (bitField0_ & ~0x00000008);
          } else {
            ensureExtIsMutable();
            ext_.addAll(other.ext_);
          }
          onChanged();
        }
        if (!other.matchExt_.isEmpty()) {
          if (matchExt_.isEmpty()) {
            matchExt_ = other.matchExt_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureMatchExtIsMutable();
            matchExt_.addAll(other.matchExt_);
          }
          onChanged();
        }
        if (!other.leftCards_.isEmpty()) {
          if (leftCards_.isEmpty()) {
            leftCards_ = other.leftCards_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureLeftCardsIsMutable();
            leftCards_.addAll(other.leftCards_);
          }
          onChanged();
        }
        if (other.hasTun()) {
          setTun(other.getTun());
        }
        if (other.hasFan()) {
          setFan(other.getFan());
        }
        if (other.hasHuxi()) {
          setHuxi(other.getHuxi());
        }
        if (other.hasHuSeat()) {
          setHuSeat(other.getHuSeat());
        }
        if (other.hasHuCard()) {
          setHuCard(other.getHuCard());
        }
        if (other.hasTotalTun()) {
          setTotalTun(other.getTotalTun());
        }
        if (!other.fanTypes_.isEmpty()) {
          if (fanTypes_.isEmpty()) {
            fanTypes_ = other.fanTypes_;
            bitField0_ = (bitField0_ & ~0x00001000);
          } else {
            ensureFanTypesIsMutable();
            fanTypes_.addAll(other.fanTypes_);
          }
          onChanged();
        }
        if (other.hasIsRenew()) {
          setIsRenew(other.getIsRenew());
        }
        if (other.hasRenewCount()) {
          setRenewCount(other.getRenewCount());
        }
        if (other.hasPointRecord()) {
          bitField0_ |= 0x00008000;
          pointRecord_ = other.pointRecord_;
          onChanged();
        }
        if (!other.startLeftCards_.isEmpty()) {
          if (startLeftCards_.isEmpty()) {
            startLeftCards_ = other.startLeftCards_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureStartLeftCardsIsMutable();
            startLeftCards_.addAll(other.startLeftCards_);
          }
          onChanged();
        }
        if (other.hasGroupLogId()) {
          setGroupLogId(other.getGroupLogId());
        }
        if (!other.chouCards_.isEmpty()) {
          if (chouCards_.isEmpty()) {
            chouCards_ = other.chouCards_;
            bitField0_ = (bitField0_ & ~0x00040000);
          } else {
            ensureChouCardsIsMutable();
            chouCards_.addAll(other.chouCards_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getClosingPlayersCount(); i++) {
          if (!getClosingPlayers(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;
      private java.util.List<com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes> closingPlayers_ =
        java.util.Collections.emptyList();
      private void ensureClosingPlayersIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          closingPlayers_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes>(closingPlayers_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoResOrBuilder> closingPlayersBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes> getClosingPlayersList() {
        if (closingPlayersBuilder_ == null) {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        } else {
          return closingPlayersBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public int getClosingPlayersCount() {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.size();
        } else {
          return closingPlayersBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes getClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);
        } else {
          return closingPlayersBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder setClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.set(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes value) {
        if (closingPlayersBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, value);
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addClosingPlayers(
          int index, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder builderForValue) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.add(index, builderForValue.build());
          onChanged();
        } else {
          closingPlayersBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder addAllClosingPlayers(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes> values) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          super.addAll(values, closingPlayers_);
          onChanged();
        } else {
          closingPlayersBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder clearClosingPlayers() {
        if (closingPlayersBuilder_ == null) {
          closingPlayers_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          closingPlayersBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public Builder removeClosingPlayers(int index) {
        if (closingPlayersBuilder_ == null) {
          ensureClosingPlayersIsMutable();
          closingPlayers_.remove(index);
          onChanged();
        } else {
          closingPlayersBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder getClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoResOrBuilder getClosingPlayersOrBuilder(
          int index) {
        if (closingPlayersBuilder_ == null) {
          return closingPlayers_.get(index);  } else {
          return closingPlayersBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoResOrBuilder> 
           getClosingPlayersOrBuilderList() {
        if (closingPlayersBuilder_ != null) {
          return closingPlayersBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(closingPlayers_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder addClosingPlayersBuilder() {
        return getClosingPlayersFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder addClosingPlayersBuilder(
          int index) {
        return getClosingPlayersFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes closingPlayers = 1;</code>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder> 
           getClosingPlayersBuilderList() {
        return getClosingPlayersFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoResOrBuilder> 
          getClosingPlayersFieldBuilder() {
        if (closingPlayersBuilder_ == null) {
          closingPlayersBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoResOrBuilder>(
                  closingPlayers_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          closingPlayers_ = null;
        }
        return closingPlayersBuilder_;
      }

      // optional int32 isBreak = 2;
      private int isBreak_ ;
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public boolean hasIsBreak() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public int getIsBreak() {
        return isBreak_;
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public Builder setIsBreak(int value) {
        bitField0_ |= 0x00000002;
        isBreak_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isBreak = 2;</code>
       */
      public Builder clearIsBreak() {
        bitField0_ = (bitField0_ & ~0x00000002);
        isBreak_ = 0;
        onChanged();
        return this;
      }

      // optional int32 wanfa = 3;
      private int wanfa_ ;
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public boolean hasWanfa() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public int getWanfa() {
        return wanfa_;
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public Builder setWanfa(int value) {
        bitField0_ |= 0x00000004;
        wanfa_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 wanfa = 3;</code>
       */
      public Builder clearWanfa() {
        bitField0_ = (bitField0_ & ~0x00000004);
        wanfa_ = 0;
        onChanged();
        return this;
      }

      // repeated string ext = 4;
      private com.google.protobuf.LazyStringList ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureExtIsMutable() {
        if (!((bitField0_ & 0x00000008) == 0x00000008)) {
          ext_ = new com.google.protobuf.LazyStringArrayList(ext_);
          bitField0_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public java.util.List<java.lang.String>
          getExtList() {
        return java.util.Collections.unmodifiableList(ext_);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public int getExtCount() {
        return ext_.size();
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public java.lang.String getExt(int index) {
        return ext_.get(index);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public com.google.protobuf.ByteString
          getExtBytes(int index) {
        return ext_.getByteString(index);
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder setExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addAllExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureExtIsMutable();
        super.addAll(values, ext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder clearExt() {
        ext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string ext = 4;</code>
       *
       * <pre>
       * </pre>
       */
      public Builder addExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureExtIsMutable();
        ext_.add(value);
        onChanged();
        return this;
      }

      // repeated string matchExt = 5;
      private com.google.protobuf.LazyStringList matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureMatchExtIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          matchExt_ = new com.google.protobuf.LazyStringArrayList(matchExt_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public java.util.List<java.lang.String>
          getMatchExtList() {
        return java.util.Collections.unmodifiableList(matchExt_);
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public int getMatchExtCount() {
        return matchExt_.size();
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public java.lang.String getMatchExt(int index) {
        return matchExt_.get(index);
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public com.google.protobuf.ByteString
          getMatchExtBytes(int index) {
        return matchExt_.getByteString(index);
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder setMatchExt(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addMatchExt(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addAllMatchExt(
          java.lang.Iterable<java.lang.String> values) {
        ensureMatchExtIsMutable();
        super.addAll(values, matchExt_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder clearMatchExt() {
        matchExt_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string matchExt = 5;</code>
       *
       * <pre>
       *比赛场
       * </pre>
       */
      public Builder addMatchExtBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureMatchExtIsMutable();
        matchExt_.add(value);
        onChanged();
        return this;
      }

      // repeated int32 leftCards = 6;
      private java.util.List<java.lang.Integer> leftCards_ = java.util.Collections.emptyList();
      private void ensureLeftCardsIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          leftCards_ = new java.util.ArrayList<java.lang.Integer>(leftCards_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 leftCards = 6;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getLeftCardsList() {
        return java.util.Collections.unmodifiableList(leftCards_);
      }
      /**
       * <code>repeated int32 leftCards = 6;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public int getLeftCardsCount() {
        return leftCards_.size();
      }
      /**
       * <code>repeated int32 leftCards = 6;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public int getLeftCards(int index) {
        return leftCards_.get(index);
      }
      /**
       * <code>repeated int32 leftCards = 6;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder setLeftCards(
          int index, int value) {
        ensureLeftCardsIsMutable();
        leftCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 6;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder addLeftCards(int value) {
        ensureLeftCardsIsMutable();
        leftCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 6;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder addAllLeftCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureLeftCardsIsMutable();
        super.addAll(values, leftCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 leftCards = 6;</code>
       *
       * <pre>
       *剩下的牌
       * </pre>
       */
      public Builder clearLeftCards() {
        leftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      // optional int32 tun = 7;
      private int tun_ ;
      /**
       * <code>optional int32 tun = 7;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public boolean hasTun() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 tun = 7;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public int getTun() {
        return tun_;
      }
      /**
       * <code>optional int32 tun = 7;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public Builder setTun(int value) {
        bitField0_ |= 0x00000040;
        tun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 tun = 7;</code>
       *
       * <pre>
       *囤数
       * </pre>
       */
      public Builder clearTun() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tun_ = 0;
        onChanged();
        return this;
      }

      // optional int32 fan = 8;
      private int fan_ ;
      /**
       * <code>optional int32 fan = 8;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public boolean hasFan() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional int32 fan = 8;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public int getFan() {
        return fan_;
      }
      /**
       * <code>optional int32 fan = 8;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public Builder setFan(int value) {
        bitField0_ |= 0x00000080;
        fan_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 fan = 8;</code>
       *
       * <pre>
       *番数
       * </pre>
       */
      public Builder clearFan() {
        bitField0_ = (bitField0_ & ~0x00000080);
        fan_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huxi = 9;
      private int huxi_ ;
      /**
       * <code>optional int32 huxi = 9;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public boolean hasHuxi() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 huxi = 9;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public int getHuxi() {
        return huxi_;
      }
      /**
       * <code>optional int32 huxi = 9;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public Builder setHuxi(int value) {
        bitField0_ |= 0x00000100;
        huxi_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huxi = 9;</code>
       *
       * <pre>
       *胡息
       * </pre>
       */
      public Builder clearHuxi() {
        bitField0_ = (bitField0_ & ~0x00000100);
        huxi_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huSeat = 10;
      private int huSeat_ ;
      /**
       * <code>optional int32 huSeat = 10;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public boolean hasHuSeat() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional int32 huSeat = 10;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public int getHuSeat() {
        return huSeat_;
      }
      /**
       * <code>optional int32 huSeat = 10;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public Builder setHuSeat(int value) {
        bitField0_ |= 0x00000200;
        huSeat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huSeat = 10;</code>
       *
       * <pre>
       *胡的人座位号
       * </pre>
       */
      public Builder clearHuSeat() {
        bitField0_ = (bitField0_ & ~0x00000200);
        huSeat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 huCard = 11;
      private int huCard_ ;
      /**
       * <code>optional int32 huCard = 11;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public boolean hasHuCard() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 huCard = 11;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public int getHuCard() {
        return huCard_;
      }
      /**
       * <code>optional int32 huCard = 11;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public Builder setHuCard(int value) {
        bitField0_ |= 0x00000400;
        huCard_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 huCard = 11;</code>
       *
       * <pre>
       *胡的牌
       * </pre>
       */
      public Builder clearHuCard() {
        bitField0_ = (bitField0_ & ~0x00000400);
        huCard_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalTun = 12;
      private int totalTun_ ;
      /**
       * <code>optional int32 totalTun = 12;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public boolean hasTotalTun() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional int32 totalTun = 12;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public int getTotalTun() {
        return totalTun_;
      }
      /**
       * <code>optional int32 totalTun = 12;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public Builder setTotalTun(int value) {
        bitField0_ |= 0x00000800;
        totalTun_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalTun = 12;</code>
       *
       * <pre>
       *总囤数
       * </pre>
       */
      public Builder clearTotalTun() {
        bitField0_ = (bitField0_ & ~0x00000800);
        totalTun_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 fanTypes = 13;
      private java.util.List<java.lang.Integer> fanTypes_ = java.util.Collections.emptyList();
      private void ensureFanTypesIsMutable() {
        if (!((bitField0_ & 0x00001000) == 0x00001000)) {
          fanTypes_ = new java.util.ArrayList<java.lang.Integer>(fanTypes_);
          bitField0_ |= 0x00001000;
         }
      }
      /**
       * <code>repeated int32 fanTypes = 13;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFanTypesList() {
        return java.util.Collections.unmodifiableList(fanTypes_);
      }
      /**
       * <code>repeated int32 fanTypes = 13;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public int getFanTypesCount() {
        return fanTypes_.size();
      }
      /**
       * <code>repeated int32 fanTypes = 13;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public int getFanTypes(int index) {
        return fanTypes_.get(index);
      }
      /**
       * <code>repeated int32 fanTypes = 13;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder setFanTypes(
          int index, int value) {
        ensureFanTypesIsMutable();
        fanTypes_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fanTypes = 13;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder addFanTypes(int value) {
        ensureFanTypesIsMutable();
        fanTypes_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fanTypes = 13;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder addAllFanTypes(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFanTypesIsMutable();
        super.addAll(values, fanTypes_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 fanTypes = 13;</code>
       *
       * <pre>
       *番类型
       * </pre>
       */
      public Builder clearFanTypes() {
        fanTypes_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00001000);
        onChanged();
        return this;
      }

      // optional int32 isRenew = 14;
      private int isRenew_ ;
      /**
       * <code>optional int32 isRenew = 14;</code>
       *
       * <pre>
       * 是否续费
       * </pre>
       */
      public boolean hasIsRenew() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 isRenew = 14;</code>
       *
       * <pre>
       * 是否续费
       * </pre>
       */
      public int getIsRenew() {
        return isRenew_;
      }
      /**
       * <code>optional int32 isRenew = 14;</code>
       *
       * <pre>
       * 是否续费
       * </pre>
       */
      public Builder setIsRenew(int value) {
        bitField0_ |= 0x00002000;
        isRenew_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isRenew = 14;</code>
       *
       * <pre>
       * 是否续费
       * </pre>
       */
      public Builder clearIsRenew() {
        bitField0_ = (bitField0_ & ~0x00002000);
        isRenew_ = 0;
        onChanged();
        return this;
      }

      // optional int32 renewCount = 15;
      private int renewCount_ ;
      /**
       * <code>optional int32 renewCount = 15;</code>
       *
       * <pre>
       * 续费次数
       * </pre>
       */
      public boolean hasRenewCount() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 renewCount = 15;</code>
       *
       * <pre>
       * 续费次数
       * </pre>
       */
      public int getRenewCount() {
        return renewCount_;
      }
      /**
       * <code>optional int32 renewCount = 15;</code>
       *
       * <pre>
       * 续费次数
       * </pre>
       */
      public Builder setRenewCount(int value) {
        bitField0_ |= 0x00004000;
        renewCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 renewCount = 15;</code>
       *
       * <pre>
       * 续费次数
       * </pre>
       */
      public Builder clearRenewCount() {
        bitField0_ = (bitField0_ & ~0x00004000);
        renewCount_ = 0;
        onChanged();
        return this;
      }

      // optional string pointRecord = 16;
      private java.lang.Object pointRecord_ = "";
      /**
       * <code>optional string pointRecord = 16;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public boolean hasPointRecord() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional string pointRecord = 16;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public java.lang.String getPointRecord() {
        java.lang.Object ref = pointRecord_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          pointRecord_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pointRecord = 16;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPointRecordBytes() {
        java.lang.Object ref = pointRecord_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pointRecord_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pointRecord = 16;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public Builder setPointRecord(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        pointRecord_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pointRecord = 16;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public Builder clearPointRecord() {
        bitField0_ = (bitField0_ & ~0x00008000);
        pointRecord_ = getDefaultInstance().getPointRecord();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pointRecord = 16;</code>
       *
       * <pre>
       * 记分记录
       * </pre>
       */
      public Builder setPointRecordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00008000;
        pointRecord_ = value;
        onChanged();
        return this;
      }

      // repeated int32 startLeftCards = 17;
      private java.util.List<java.lang.Integer> startLeftCards_ = java.util.Collections.emptyList();
      private void ensureStartLeftCardsIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          startLeftCards_ = new java.util.ArrayList<java.lang.Integer>(startLeftCards_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 startLeftCards = 17;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getStartLeftCardsList() {
        return java.util.Collections.unmodifiableList(startLeftCards_);
      }
      /**
       * <code>repeated int32 startLeftCards = 17;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public int getStartLeftCardsCount() {
        return startLeftCards_.size();
      }
      /**
       * <code>repeated int32 startLeftCards = 17;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public int getStartLeftCards(int index) {
        return startLeftCards_.get(index);
      }
      /**
       * <code>repeated int32 startLeftCards = 17;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public Builder setStartLeftCards(
          int index, int value) {
        ensureStartLeftCardsIsMutable();
        startLeftCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 startLeftCards = 17;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public Builder addStartLeftCards(int value) {
        ensureStartLeftCardsIsMutable();
        startLeftCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 startLeftCards = 17;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public Builder addAllStartLeftCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureStartLeftCardsIsMutable();
        super.addAll(values, startLeftCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 startLeftCards = 17;</code>
       *
       * <pre>
       *桌面所有底牌
       * </pre>
       */
      public Builder clearStartLeftCards() {
        startLeftCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // optional int32 groupLogId = 18;
      private int groupLogId_ ;
      /**
       * <code>optional int32 groupLogId = 18;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public boolean hasGroupLogId() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 groupLogId = 18;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public int getGroupLogId() {
        return groupLogId_;
      }
      /**
       * <code>optional int32 groupLogId = 18;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public Builder setGroupLogId(int value) {
        bitField0_ |= 0x00020000;
        groupLogId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 groupLogId = 18;</code>
       *
       * <pre>
       *俱乐部战绩id
       * </pre>
       */
      public Builder clearGroupLogId() {
        bitField0_ = (bitField0_ & ~0x00020000);
        groupLogId_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 chouCards = 19;
      private java.util.List<java.lang.Integer> chouCards_ = java.util.Collections.emptyList();
      private void ensureChouCardsIsMutable() {
        if (!((bitField0_ & 0x00040000) == 0x00040000)) {
          chouCards_ = new java.util.ArrayList<java.lang.Integer>(chouCards_);
          bitField0_ |= 0x00040000;
         }
      }
      /**
       * <code>repeated int32 chouCards = 19;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getChouCardsList() {
        return java.util.Collections.unmodifiableList(chouCards_);
      }
      /**
       * <code>repeated int32 chouCards = 19;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public int getChouCardsCount() {
        return chouCards_.size();
      }
      /**
       * <code>repeated int32 chouCards = 19;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public int getChouCards(int index) {
        return chouCards_.get(index);
      }
      /**
       * <code>repeated int32 chouCards = 19;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder setChouCards(
          int index, int value) {
        ensureChouCardsIsMutable();
        chouCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chouCards = 19;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder addChouCards(int value) {
        ensureChouCardsIsMutable();
        chouCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chouCards = 19;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder addAllChouCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureChouCardsIsMutable();
        super.addAll(values, chouCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 chouCards = 19;</code>
       *
       * <pre>
       *抽掉的牌
       * </pre>
       */
      public Builder clearChouCards() {
        chouCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00040000);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.ClosingGhzInfoRes)
    }

    static {
      defaultInstance = new ClosingGhzInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.ClosingGhzInfoRes)
  }

  public interface ClosingGhzPlayerInfoResOrBuilder
      extends com.google.protobuf.MessageOrBuilder {

    // optional string userId = 1;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    boolean hasUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    java.lang.String getUserId();
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    com.google.protobuf.ByteString
        getUserIdBytes();

    // optional string name = 2;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    boolean hasName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    java.lang.String getName();
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    // optional int32 point = 3;
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    boolean hasPoint();
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    int getPoint();

    // optional int32 totalPoint = 4;
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    boolean hasTotalPoint();
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    int getTotalPoint();

    // optional int32 winCount = 5;
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    boolean hasWinCount();
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    int getWinCount();

    // optional int32 lostCount = 6;
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    boolean hasLostCount();
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    int getLostCount();

    // optional int32 maxPoint = 7;
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    boolean hasMaxPoint();
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    int getMaxPoint();

    // required int32 seat = 8;
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    boolean hasSeat();
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    int getSeat();

    // optional int32 sex = 9;
    /**
     * <code>optional int32 sex = 9;</code>
     */
    boolean hasSex();
    /**
     * <code>optional int32 sex = 9;</code>
     */
    int getSex();

    // optional string icon = 10;
    /**
     * <code>optional string icon = 10;</code>
     */
    boolean hasIcon();
    /**
     * <code>optional string icon = 10;</code>
     */
    java.lang.String getIcon();
    /**
     * <code>optional string icon = 10;</code>
     */
    com.google.protobuf.ByteString
        getIconBytes();

    // optional int32 bopiPoint = 11;
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    boolean hasBopiPoint();
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    int getBopiPoint();

    // repeated int32 cards = 12;
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getCardsList();
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    int getCardsCount();
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    int getCards(int index);

    // optional int32 isShuXing = 13;
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    boolean hasIsShuXing();
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    int getIsShuXing();

    // optional int32 renewStatus = 14;
    /**
     * <code>optional int32 renewStatus = 14;</code>
     *
     * <pre>
     *续费状态
     * </pre>
     */
    boolean hasRenewStatus();
    /**
     * <code>optional int32 renewStatus = 14;</code>
     *
     * <pre>
     *续费状态
     * </pre>
     */
    int getRenewStatus();

    // repeated int32 firstCards = 15;
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    java.util.List<java.lang.Integer> getFirstCardsList();
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    int getFirstCardsCount();
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    int getFirstCards(int index);

    // repeated int32 dahus = 16;
    /**
     * <code>repeated int32 dahus = 16;</code>
     *
     * <pre>
     *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
     * </pre>
     */
    java.util.List<java.lang.Integer> getDahusList();
    /**
     * <code>repeated int32 dahus = 16;</code>
     *
     * <pre>
     *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
     * </pre>
     */
    int getDahusCount();
    /**
     * <code>repeated int32 dahus = 16;</code>
     *
     * <pre>
     *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
     * </pre>
     */
    int getDahus(int index);

    // repeated int32 dahuCounts = 17;
    /**
     * <code>repeated int32 dahuCounts = 17;</code>
     *
     * <pre>
     *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
     * </pre>
     */
    java.util.List<java.lang.Integer> getDahuCountsList();
    /**
     * <code>repeated int32 dahuCounts = 17;</code>
     *
     * <pre>
     *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
     * </pre>
     */
    int getDahuCountsCount();
    /**
     * <code>repeated int32 dahuCounts = 17;</code>
     *
     * <pre>
     *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
     * </pre>
     */
    int getDahuCounts(int index);

    // optional int32 neiYuanNum = 18;
    /**
     * <code>optional int32 neiYuanNum = 18;</code>
     *
     * <pre>
     *内圆个数
     * </pre>
     */
    boolean hasNeiYuanNum();
    /**
     * <code>optional int32 neiYuanNum = 18;</code>
     *
     * <pre>
     *内圆个数
     * </pre>
     */
    int getNeiYuanNum();

    // optional int32 waiYuanNum = 19;
    /**
     * <code>optional int32 waiYuanNum = 19;</code>
     *
     * <pre>
     *外圆个数
     * </pre>
     */
    boolean hasWaiYuanNum();
    /**
     * <code>optional int32 waiYuanNum = 19;</code>
     *
     * <pre>
     *外圆个数
     * </pre>
     */
    int getWaiYuanNum();

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> 
        getMcardsList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMcards(int index);
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    int getMcardsCount();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMcardsOrBuilderList();
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMcardsOrBuilder(
        int index);

    // optional int32 zhuaHao = 21;
    /**
     * <code>optional int32 zhuaHao = 21;</code>
     *
     * <pre>
     *抓豪个数
     * </pre>
     */
    boolean hasZhuaHao();
    /**
     * <code>optional int32 zhuaHao = 21;</code>
     *
     * <pre>
     *抓豪个数
     * </pre>
     */
    int getZhuaHao();

    // optional int32 qingHao = 22;
    /**
     * <code>optional int32 qingHao = 22;</code>
     *
     * <pre>
     *清豪个数
     * </pre>
     */
    boolean hasQingHao();
    /**
     * <code>optional int32 qingHao = 22;</code>
     *
     * <pre>
     *清豪个数
     * </pre>
     */
    int getQingHao();

    // optional int32 waiHao = 23;
    /**
     * <code>optional int32 waiHao = 23;</code>
     *
     * <pre>
     *外豪个数
     * </pre>
     */
    boolean hasWaiHao();
    /**
     * <code>optional int32 waiHao = 23;</code>
     *
     * <pre>
     *外豪个数
     * </pre>
     */
    int getWaiHao();

    // optional int32 credit = 24;
    /**
     * <code>optional int32 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    boolean hasCredit();
    /**
     * <code>optional int32 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    int getCredit();

    // optional int64 winLoseCredit = 25;
    /**
     * <code>optional int64 winLoseCredit = 25;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    boolean hasWinLoseCredit();
    /**
     * <code>optional int64 winLoseCredit = 25;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    long getWinLoseCredit();

    // optional int64 commissionCredit = 26;
    /**
     * <code>optional int64 commissionCredit = 26;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    boolean hasCommissionCredit();
    /**
     * <code>optional int64 commissionCredit = 26;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    long getCommissionCredit();
  }
  /**
   * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes}
   *
   * <pre>
   *单个玩家结算
   * </pre>
   */
  public static final class ClosingGhzPlayerInfoRes extends
      com.google.protobuf.GeneratedMessage
      implements ClosingGhzPlayerInfoResOrBuilder {
    // Use ClosingGhzPlayerInfoRes.newBuilder() to construct.
    private ClosingGhzPlayerInfoRes(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ClosingGhzPlayerInfoRes(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ClosingGhzPlayerInfoRes defaultInstance;
    public static ClosingGhzPlayerInfoRes getDefaultInstance() {
      return defaultInstance;
    }

    public ClosingGhzPlayerInfoRes getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ClosingGhzPlayerInfoRes(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              bitField0_ |= 0x00000001;
              userId_ = input.readBytes();
              break;
            }
            case 18: {
              bitField0_ |= 0x00000002;
              name_ = input.readBytes();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              point_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              totalPoint_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              winCount_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              lostCount_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              maxPoint_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              seat_ = input.readInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              sex_ = input.readInt32();
              break;
            }
            case 82: {
              bitField0_ |= 0x00000200;
              icon_ = input.readBytes();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              bopiPoint_ = input.readInt32();
              break;
            }
            case 96: {
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              cards_.add(input.readInt32());
              break;
            }
            case 98: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000800) == 0x00000800) && input.getBytesUntilLimit() > 0) {
                cards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000800;
              }
              while (input.getBytesUntilLimit() > 0) {
                cards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              isShuXing_ = input.readInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              renewStatus_ = input.readInt32();
              break;
            }
            case 120: {
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
                firstCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              firstCards_.add(input.readInt32());
              break;
            }
            case 122: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00004000) == 0x00004000) && input.getBytesUntilLimit() > 0) {
                firstCards_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00004000;
              }
              while (input.getBytesUntilLimit() > 0) {
                firstCards_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 128: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                dahus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              dahus_.add(input.readInt32());
              break;
            }
            case 130: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000) && input.getBytesUntilLimit() > 0) {
                dahus_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00008000;
              }
              while (input.getBytesUntilLimit() > 0) {
                dahus_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 136: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                dahuCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              dahuCounts_.add(input.readInt32());
              break;
            }
            case 138: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000) && input.getBytesUntilLimit() > 0) {
                dahuCounts_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00010000;
              }
              while (input.getBytesUntilLimit() > 0) {
                dahuCounts_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 144: {
              bitField0_ |= 0x00002000;
              neiYuanNum_ = input.readInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00004000;
              waiYuanNum_ = input.readInt32();
              break;
            }
            case 162: {
              if (!((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
                mcards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>();
                mutable_bitField0_ |= 0x00080000;
              }
              mcards_.add(input.readMessage(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.PARSER, extensionRegistry));
              break;
            }
            case 168: {
              bitField0_ |= 0x00008000;
              zhuaHao_ = input.readInt32();
              break;
            }
            case 176: {
              bitField0_ |= 0x00010000;
              qingHao_ = input.readInt32();
              break;
            }
            case 184: {
              bitField0_ |= 0x00020000;
              waiHao_ = input.readInt32();
              break;
            }
            case 192: {
              bitField0_ |= 0x00040000;
              credit_ = input.readInt32();
              break;
            }
            case 200: {
              bitField0_ |= 0x00080000;
              winLoseCredit_ = input.readInt64();
              break;
            }
            case 208: {
              bitField0_ |= 0x00100000;
              commissionCredit_ = input.readInt64();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000800) == 0x00000800)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
        }
        if (((mutable_bitField0_ & 0x00004000) == 0x00004000)) {
          firstCards_ = java.util.Collections.unmodifiableList(firstCards_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          dahus_ = java.util.Collections.unmodifiableList(dahus_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          dahuCounts_ = java.util.Collections.unmodifiableList(dahuCounts_);
        }
        if (((mutable_bitField0_ & 0x00080000) == 0x00080000)) {
          mcards_ = java.util.Collections.unmodifiableList(mcards_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.sy599.game.msg.serverPacket.TableGhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingGhzPlayerInfoRes_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.sy599.game.msg.serverPacket.TableGhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingGhzPlayerInfoRes_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder.class);
    }

    public static com.google.protobuf.Parser<ClosingGhzPlayerInfoRes> PARSER =
        new com.google.protobuf.AbstractParser<ClosingGhzPlayerInfoRes>() {
      public ClosingGhzPlayerInfoRes parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ClosingGhzPlayerInfoRes(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ClosingGhzPlayerInfoRes> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    // optional string userId = 1;
    public static final int USERID_FIELD_NUMBER = 1;
    private java.lang.Object userId_;
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public boolean hasUserId() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public java.lang.String getUserId() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          userId_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string userId = 1;</code>
     *
     * <pre>
     *userId
     * </pre>
     */
    public com.google.protobuf.ByteString
        getUserIdBytes() {
      java.lang.Object ref = userId_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        userId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional string name = 2;
    public static final int NAME_FIELD_NUMBER = 2;
    private java.lang.Object name_;
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string name = 2;</code>
     *
     * <pre>
     *名字
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 point = 3;
    public static final int POINT_FIELD_NUMBER = 3;
    private int point_;
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public boolean hasPoint() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 point = 3;</code>
     *
     * <pre>
     *积分
     * </pre>
     */
    public int getPoint() {
      return point_;
    }

    // optional int32 totalPoint = 4;
    public static final int TOTALPOINT_FIELD_NUMBER = 4;
    private int totalPoint_;
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public boolean hasTotalPoint() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 totalPoint = 4;</code>
     *
     * <pre>
     *总积分
     * </pre>
     */
    public int getTotalPoint() {
      return totalPoint_;
    }

    // optional int32 winCount = 5;
    public static final int WINCOUNT_FIELD_NUMBER = 5;
    private int winCount_;
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    public boolean hasWinCount() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 winCount = 5;</code>
     *
     * <pre>
     *赢的次数
     * </pre>
     */
    public int getWinCount() {
      return winCount_;
    }

    // optional int32 lostCount = 6;
    public static final int LOSTCOUNT_FIELD_NUMBER = 6;
    private int lostCount_;
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    public boolean hasLostCount() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional int32 lostCount = 6;</code>
     *
     * <pre>
     *输的次数
     * </pre>
     */
    public int getLostCount() {
      return lostCount_;
    }

    // optional int32 maxPoint = 7;
    public static final int MAXPOINT_FIELD_NUMBER = 7;
    private int maxPoint_;
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    public boolean hasMaxPoint() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 maxPoint = 7;</code>
     *
     * <pre>
     *最高积分
     * </pre>
     */
    public int getMaxPoint() {
      return maxPoint_;
    }

    // required int32 seat = 8;
    public static final int SEAT_FIELD_NUMBER = 8;
    private int seat_;
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public boolean hasSeat() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>required int32 seat = 8;</code>
     *
     * <pre>
     *座位
     * </pre>
     */
    public int getSeat() {
      return seat_;
    }

    // optional int32 sex = 9;
    public static final int SEX_FIELD_NUMBER = 9;
    private int sex_;
    /**
     * <code>optional int32 sex = 9;</code>
     */
    public boolean hasSex() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 sex = 9;</code>
     */
    public int getSex() {
      return sex_;
    }

    // optional string icon = 10;
    public static final int ICON_FIELD_NUMBER = 10;
    private java.lang.Object icon_;
    /**
     * <code>optional string icon = 10;</code>
     */
    public boolean hasIcon() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string icon = 10;</code>
     */
    public java.lang.String getIcon() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          icon_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string icon = 10;</code>
     */
    public com.google.protobuf.ByteString
        getIconBytes() {
      java.lang.Object ref = icon_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        icon_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    // optional int32 bopiPoint = 11;
    public static final int BOPIPOINT_FIELD_NUMBER = 11;
    private int bopiPoint_;
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    public boolean hasBopiPoint() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional int32 bopiPoint = 11;</code>
     *
     * <pre>
     *剥皮算分
     * </pre>
     */
    public int getBopiPoint() {
      return bopiPoint_;
    }

    // repeated int32 cards = 12;
    public static final int CARDS_FIELD_NUMBER = 12;
    private java.util.List<java.lang.Integer> cards_;
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getCardsList() {
      return cards_;
    }
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public int getCardsCount() {
      return cards_.size();
    }
    /**
     * <code>repeated int32 cards = 12;</code>
     *
     * <pre>
     *剩余牌
     * </pre>
     */
    public int getCards(int index) {
      return cards_.get(index);
    }

    // optional int32 isShuXing = 13;
    public static final int ISSHUXING_FIELD_NUMBER = 13;
    private int isShuXing_;
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    public boolean hasIsShuXing() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional int32 isShuXing = 13;</code>
     *
     * <pre>
     *数醒标示
     * </pre>
     */
    public int getIsShuXing() {
      return isShuXing_;
    }

    // optional int32 renewStatus = 14;
    public static final int RENEWSTATUS_FIELD_NUMBER = 14;
    private int renewStatus_;
    /**
     * <code>optional int32 renewStatus = 14;</code>
     *
     * <pre>
     *续费状态
     * </pre>
     */
    public boolean hasRenewStatus() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 renewStatus = 14;</code>
     *
     * <pre>
     *续费状态
     * </pre>
     */
    public int getRenewStatus() {
      return renewStatus_;
    }

    // repeated int32 firstCards = 15;
    public static final int FIRSTCARDS_FIELD_NUMBER = 15;
    private java.util.List<java.lang.Integer> firstCards_;
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getFirstCardsList() {
      return firstCards_;
    }
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    public int getFirstCardsCount() {
      return firstCards_.size();
    }
    /**
     * <code>repeated int32 firstCards = 15;</code>
     *
     * <pre>
     *初始手牌
     * </pre>
     */
    public int getFirstCards(int index) {
      return firstCards_.get(index);
    }

    // repeated int32 dahus = 16;
    public static final int DAHUS_FIELD_NUMBER = 16;
    private java.util.List<java.lang.Integer> dahus_;
    /**
     * <code>repeated int32 dahus = 16;</code>
     *
     * <pre>
     *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDahusList() {
      return dahus_;
    }
    /**
     * <code>repeated int32 dahus = 16;</code>
     *
     * <pre>
     *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
     * </pre>
     */
    public int getDahusCount() {
      return dahus_.size();
    }
    /**
     * <code>repeated int32 dahus = 16;</code>
     *
     * <pre>
     *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
     * </pre>
     */
    public int getDahus(int index) {
      return dahus_.get(index);
    }

    // repeated int32 dahuCounts = 17;
    public static final int DAHUCOUNTS_FIELD_NUMBER = 17;
    private java.util.List<java.lang.Integer> dahuCounts_;
    /**
     * <code>repeated int32 dahuCounts = 17;</code>
     *
     * <pre>
     *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getDahuCountsList() {
      return dahuCounts_;
    }
    /**
     * <code>repeated int32 dahuCounts = 17;</code>
     *
     * <pre>
     *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
     * </pre>
     */
    public int getDahuCountsCount() {
      return dahuCounts_.size();
    }
    /**
     * <code>repeated int32 dahuCounts = 17;</code>
     *
     * <pre>
     *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
     * </pre>
     */
    public int getDahuCounts(int index) {
      return dahuCounts_.get(index);
    }

    // optional int32 neiYuanNum = 18;
    public static final int NEIYUANNUM_FIELD_NUMBER = 18;
    private int neiYuanNum_;
    /**
     * <code>optional int32 neiYuanNum = 18;</code>
     *
     * <pre>
     *内圆个数
     * </pre>
     */
    public boolean hasNeiYuanNum() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 neiYuanNum = 18;</code>
     *
     * <pre>
     *内圆个数
     * </pre>
     */
    public int getNeiYuanNum() {
      return neiYuanNum_;
    }

    // optional int32 waiYuanNum = 19;
    public static final int WAIYUANNUM_FIELD_NUMBER = 19;
    private int waiYuanNum_;
    /**
     * <code>optional int32 waiYuanNum = 19;</code>
     *
     * <pre>
     *外圆个数
     * </pre>
     */
    public boolean hasWaiYuanNum() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 waiYuanNum = 19;</code>
     *
     * <pre>
     *外圆个数
     * </pre>
     */
    public int getWaiYuanNum() {
      return waiYuanNum_;
    }

    // repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;
    public static final int MCARDS_FIELD_NUMBER = 20;
    private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> mcards_;
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMcardsList() {
      return mcards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
        getMcardsOrBuilderList() {
      return mcards_;
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public int getMcardsCount() {
      return mcards_.size();
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMcards(int index) {
      return mcards_.get(index);
    }
    /**
     * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
     *
     * <pre>
     *牌
     * </pre>
     */
    public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMcardsOrBuilder(
        int index) {
      return mcards_.get(index);
    }

    // optional int32 zhuaHao = 21;
    public static final int ZHUAHAO_FIELD_NUMBER = 21;
    private int zhuaHao_;
    /**
     * <code>optional int32 zhuaHao = 21;</code>
     *
     * <pre>
     *抓豪个数
     * </pre>
     */
    public boolean hasZhuaHao() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional int32 zhuaHao = 21;</code>
     *
     * <pre>
     *抓豪个数
     * </pre>
     */
    public int getZhuaHao() {
      return zhuaHao_;
    }

    // optional int32 qingHao = 22;
    public static final int QINGHAO_FIELD_NUMBER = 22;
    private int qingHao_;
    /**
     * <code>optional int32 qingHao = 22;</code>
     *
     * <pre>
     *清豪个数
     * </pre>
     */
    public boolean hasQingHao() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 qingHao = 22;</code>
     *
     * <pre>
     *清豪个数
     * </pre>
     */
    public int getQingHao() {
      return qingHao_;
    }

    // optional int32 waiHao = 23;
    public static final int WAIHAO_FIELD_NUMBER = 23;
    private int waiHao_;
    /**
     * <code>optional int32 waiHao = 23;</code>
     *
     * <pre>
     *外豪个数
     * </pre>
     */
    public boolean hasWaiHao() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 waiHao = 23;</code>
     *
     * <pre>
     *外豪个数
     * </pre>
     */
    public int getWaiHao() {
      return waiHao_;
    }

    // optional int32 credit = 24;
    public static final int CREDIT_FIELD_NUMBER = 24;
    private int credit_;
    /**
     * <code>optional int32 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    public boolean hasCredit() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional int32 credit = 24;</code>
     *
     * <pre>
     *玩家身上的credit
     * </pre>
     */
    public int getCredit() {
      return credit_;
    }

    // optional int64 winLoseCredit = 25;
    public static final int WINLOSECREDIT_FIELD_NUMBER = 25;
    private long winLoseCredit_;
    /**
     * <code>optional int64 winLoseCredit = 25;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    public boolean hasWinLoseCredit() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional int64 winLoseCredit = 25;</code>
     *
     * <pre>
     *输赢信用分
     * </pre>
     */
    public long getWinLoseCredit() {
      return winLoseCredit_;
    }

    // optional int64 commissionCredit = 26;
    public static final int COMMISSIONCREDIT_FIELD_NUMBER = 26;
    private long commissionCredit_;
    /**
     * <code>optional int64 commissionCredit = 26;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    public boolean hasCommissionCredit() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional int64 commissionCredit = 26;</code>
     *
     * <pre>
     *抽水信用分
     * </pre>
     */
    public long getCommissionCredit() {
      return commissionCredit_;
    }

    private void initFields() {
      userId_ = "";
      name_ = "";
      point_ = 0;
      totalPoint_ = 0;
      winCount_ = 0;
      lostCount_ = 0;
      maxPoint_ = 0;
      seat_ = 0;
      sex_ = 0;
      icon_ = "";
      bopiPoint_ = 0;
      cards_ = java.util.Collections.emptyList();
      isShuXing_ = 0;
      renewStatus_ = 0;
      firstCards_ = java.util.Collections.emptyList();
      dahus_ = java.util.Collections.emptyList();
      dahuCounts_ = java.util.Collections.emptyList();
      neiYuanNum_ = 0;
      waiYuanNum_ = 0;
      mcards_ = java.util.Collections.emptyList();
      zhuaHao_ = 0;
      qingHao_ = 0;
      waiHao_ = 0;
      credit_ = 0;
      winLoseCredit_ = 0L;
      commissionCredit_ = 0L;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized != -1) return isInitialized == 1;

      if (!hasSeat()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getMcardsCount(); i++) {
        if (!getMcards(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, point_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, totalPoint_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, winCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, lostCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, maxPoint_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeInt32(8, seat_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, sex_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getIconBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeInt32(11, bopiPoint_);
      }
      for (int i = 0; i < cards_.size(); i++) {
        output.writeInt32(12, cards_.get(i));
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeInt32(13, isShuXing_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(14, renewStatus_);
      }
      for (int i = 0; i < firstCards_.size(); i++) {
        output.writeInt32(15, firstCards_.get(i));
      }
      for (int i = 0; i < dahus_.size(); i++) {
        output.writeInt32(16, dahus_.get(i));
      }
      for (int i = 0; i < dahuCounts_.size(); i++) {
        output.writeInt32(17, dahuCounts_.get(i));
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(18, neiYuanNum_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(19, waiYuanNum_);
      }
      for (int i = 0; i < mcards_.size(); i++) {
        output.writeMessage(20, mcards_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeInt32(21, zhuaHao_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(22, qingHao_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(23, waiHao_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeInt32(24, credit_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeInt64(25, winLoseCredit_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeInt64(26, commissionCredit_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getUserIdBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getNameBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, point_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, totalPoint_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, winCount_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, lostCount_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, maxPoint_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(8, seat_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, sex_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getIconBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(11, bopiPoint_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < cards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(cards_.get(i));
        }
        size += dataSize;
        size += 1 * getCardsList().size();
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(13, isShuXing_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, renewStatus_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < firstCards_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(firstCards_.get(i));
        }
        size += dataSize;
        size += 1 * getFirstCardsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dahus_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dahus_.get(i));
        }
        size += dataSize;
        size += 2 * getDahusList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dahuCounts_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(dahuCounts_.get(i));
        }
        size += dataSize;
        size += 2 * getDahuCountsList().size();
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, neiYuanNum_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(19, waiYuanNum_);
      }
      for (int i = 0; i < mcards_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(20, mcards_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(21, zhuaHao_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(22, qingHao_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(23, waiHao_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(24, credit_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(25, winLoseCredit_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(26, commissionCredit_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes}
     *
     * <pre>
     *单个玩家结算
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder>
       implements com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoResOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.sy599.game.msg.serverPacket.TableGhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingGhzPlayerInfoRes_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.sy599.game.msg.serverPacket.TableGhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingGhzPlayerInfoRes_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.class, com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.Builder.class);
      }

      // Construct using com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMcardsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        userId_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        point_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        totalPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        winCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        lostCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        maxPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        seat_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        sex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        icon_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        bopiPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        isShuXing_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        renewStatus_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        firstCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        dahus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        dahuCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        neiYuanNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        waiYuanNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        if (mcardsBuilder_ == null) {
          mcards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
        } else {
          mcardsBuilder_.clear();
        }
        zhuaHao_ = 0;
        bitField0_ = (bitField0_ & ~0x00100000);
        qingHao_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        waiHao_ = 0;
        bitField0_ = (bitField0_ & ~0x00400000);
        credit_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        winLoseCredit_ = 0L;
        bitField0_ = (bitField0_ & ~0x01000000);
        commissionCredit_ = 0L;
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.sy599.game.msg.serverPacket.TableGhzResMsg.internal_static_com_sy599_game_msg_serverPacket_ClosingGhzPlayerInfoRes_descriptor;
      }

      public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes getDefaultInstanceForType() {
        return com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.getDefaultInstance();
      }

      public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes build() {
        com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes buildPartial() {
        com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes result = new com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.userId_ = userId_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.point_ = point_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.totalPoint_ = totalPoint_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.winCount_ = winCount_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.lostCount_ = lostCount_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.maxPoint_ = maxPoint_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.seat_ = seat_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.sex_ = sex_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.icon_ = icon_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.bopiPoint_ = bopiPoint_;
        if (((bitField0_ & 0x00000800) == 0x00000800)) {
          cards_ = java.util.Collections.unmodifiableList(cards_);
          bitField0_ = (bitField0_ & ~0x00000800);
        }
        result.cards_ = cards_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000800;
        }
        result.isShuXing_ = isShuXing_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.renewStatus_ = renewStatus_;
        if (((bitField0_ & 0x00004000) == 0x00004000)) {
          firstCards_ = java.util.Collections.unmodifiableList(firstCards_);
          bitField0_ = (bitField0_ & ~0x00004000);
        }
        result.firstCards_ = firstCards_;
        if (((bitField0_ & 0x00008000) == 0x00008000)) {
          dahus_ = java.util.Collections.unmodifiableList(dahus_);
          bitField0_ = (bitField0_ & ~0x00008000);
        }
        result.dahus_ = dahus_;
        if (((bitField0_ & 0x00010000) == 0x00010000)) {
          dahuCounts_ = java.util.Collections.unmodifiableList(dahuCounts_);
          bitField0_ = (bitField0_ & ~0x00010000);
        }
        result.dahuCounts_ = dahuCounts_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.neiYuanNum_ = neiYuanNum_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.waiYuanNum_ = waiYuanNum_;
        if (mcardsBuilder_ == null) {
          if (((bitField0_ & 0x00080000) == 0x00080000)) {
            mcards_ = java.util.Collections.unmodifiableList(mcards_);
            bitField0_ = (bitField0_ & ~0x00080000);
          }
          result.mcards_ = mcards_;
        } else {
          result.mcards_ = mcardsBuilder_.build();
        }
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.zhuaHao_ = zhuaHao_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.qingHao_ = qingHao_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.waiHao_ = waiHao_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.credit_ = credit_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.winLoseCredit_ = winLoseCredit_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.commissionCredit_ = commissionCredit_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes) {
          return mergeFrom((com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes other) {
        if (other == com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes.getDefaultInstance()) return this;
        if (other.hasUserId()) {
          bitField0_ |= 0x00000001;
          userId_ = other.userId_;
          onChanged();
        }
        if (other.hasName()) {
          bitField0_ |= 0x00000002;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasPoint()) {
          setPoint(other.getPoint());
        }
        if (other.hasTotalPoint()) {
          setTotalPoint(other.getTotalPoint());
        }
        if (other.hasWinCount()) {
          setWinCount(other.getWinCount());
        }
        if (other.hasLostCount()) {
          setLostCount(other.getLostCount());
        }
        if (other.hasMaxPoint()) {
          setMaxPoint(other.getMaxPoint());
        }
        if (other.hasSeat()) {
          setSeat(other.getSeat());
        }
        if (other.hasSex()) {
          setSex(other.getSex());
        }
        if (other.hasIcon()) {
          bitField0_ |= 0x00000200;
          icon_ = other.icon_;
          onChanged();
        }
        if (other.hasBopiPoint()) {
          setBopiPoint(other.getBopiPoint());
        }
        if (!other.cards_.isEmpty()) {
          if (cards_.isEmpty()) {
            cards_ = other.cards_;
            bitField0_ = (bitField0_ & ~0x00000800);
          } else {
            ensureCardsIsMutable();
            cards_.addAll(other.cards_);
          }
          onChanged();
        }
        if (other.hasIsShuXing()) {
          setIsShuXing(other.getIsShuXing());
        }
        if (other.hasRenewStatus()) {
          setRenewStatus(other.getRenewStatus());
        }
        if (!other.firstCards_.isEmpty()) {
          if (firstCards_.isEmpty()) {
            firstCards_ = other.firstCards_;
            bitField0_ = (bitField0_ & ~0x00004000);
          } else {
            ensureFirstCardsIsMutable();
            firstCards_.addAll(other.firstCards_);
          }
          onChanged();
        }
        if (!other.dahus_.isEmpty()) {
          if (dahus_.isEmpty()) {
            dahus_ = other.dahus_;
            bitField0_ = (bitField0_ & ~0x00008000);
          } else {
            ensureDahusIsMutable();
            dahus_.addAll(other.dahus_);
          }
          onChanged();
        }
        if (!other.dahuCounts_.isEmpty()) {
          if (dahuCounts_.isEmpty()) {
            dahuCounts_ = other.dahuCounts_;
            bitField0_ = (bitField0_ & ~0x00010000);
          } else {
            ensureDahuCountsIsMutable();
            dahuCounts_.addAll(other.dahuCounts_);
          }
          onChanged();
        }
        if (other.hasNeiYuanNum()) {
          setNeiYuanNum(other.getNeiYuanNum());
        }
        if (other.hasWaiYuanNum()) {
          setWaiYuanNum(other.getWaiYuanNum());
        }
        if (mcardsBuilder_ == null) {
          if (!other.mcards_.isEmpty()) {
            if (mcards_.isEmpty()) {
              mcards_ = other.mcards_;
              bitField0_ = (bitField0_ & ~0x00080000);
            } else {
              ensureMcardsIsMutable();
              mcards_.addAll(other.mcards_);
            }
            onChanged();
          }
        } else {
          if (!other.mcards_.isEmpty()) {
            if (mcardsBuilder_.isEmpty()) {
              mcardsBuilder_.dispose();
              mcardsBuilder_ = null;
              mcards_ = other.mcards_;
              bitField0_ = (bitField0_ & ~0x00080000);
              mcardsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMcardsFieldBuilder() : null;
            } else {
              mcardsBuilder_.addAllMessages(other.mcards_);
            }
          }
        }
        if (other.hasZhuaHao()) {
          setZhuaHao(other.getZhuaHao());
        }
        if (other.hasQingHao()) {
          setQingHao(other.getQingHao());
        }
        if (other.hasWaiHao()) {
          setWaiHao(other.getWaiHao());
        }
        if (other.hasCredit()) {
          setCredit(other.getCredit());
        }
        if (other.hasWinLoseCredit()) {
          setWinLoseCredit(other.getWinLoseCredit());
        }
        if (other.hasCommissionCredit()) {
          setCommissionCredit(other.getCommissionCredit());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasSeat()) {
          
          return false;
        }
        for (int i = 0; i < getMcardsCount(); i++) {
          if (!getMcards(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.sy599.game.msg.serverPacket.TableGhzResMsg.ClosingGhzPlayerInfoRes) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      // optional string userId = 1;
      private java.lang.Object userId_ = "";
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public boolean hasUserId() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public java.lang.String getUserId() {
        java.lang.Object ref = userId_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          userId_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public com.google.protobuf.ByteString
          getUserIdBytes() {
        java.lang.Object ref = userId_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          userId_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserId(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder clearUserId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        userId_ = getDefaultInstance().getUserId();
        onChanged();
        return this;
      }
      /**
       * <code>optional string userId = 1;</code>
       *
       * <pre>
       *userId
       * </pre>
       */
      public Builder setUserIdBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        userId_ = value;
        onChanged();
        return this;
      }

      // optional string name = 2;
      private java.lang.Object name_ = "";
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          name_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000002);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string name = 2;</code>
       *
       * <pre>
       *名字
       * </pre>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        name_ = value;
        onChanged();
        return this;
      }

      // optional int32 point = 3;
      private int point_ ;
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public boolean hasPoint() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public int getPoint() {
        return point_;
      }
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder setPoint(int value) {
        bitField0_ |= 0x00000004;
        point_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 point = 3;</code>
       *
       * <pre>
       *积分
       * </pre>
       */
      public Builder clearPoint() {
        bitField0_ = (bitField0_ & ~0x00000004);
        point_ = 0;
        onChanged();
        return this;
      }

      // optional int32 totalPoint = 4;
      private int totalPoint_ ;
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public boolean hasTotalPoint() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public int getTotalPoint() {
        return totalPoint_;
      }
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder setTotalPoint(int value) {
        bitField0_ |= 0x00000008;
        totalPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 totalPoint = 4;</code>
       *
       * <pre>
       *总积分
       * </pre>
       */
      public Builder clearTotalPoint() {
        bitField0_ = (bitField0_ & ~0x00000008);
        totalPoint_ = 0;
        onChanged();
        return this;
      }

      // optional int32 winCount = 5;
      private int winCount_ ;
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public boolean hasWinCount() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public int getWinCount() {
        return winCount_;
      }
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public Builder setWinCount(int value) {
        bitField0_ |= 0x00000010;
        winCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 winCount = 5;</code>
       *
       * <pre>
       *赢的次数
       * </pre>
       */
      public Builder clearWinCount() {
        bitField0_ = (bitField0_ & ~0x00000010);
        winCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 lostCount = 6;
      private int lostCount_ ;
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public boolean hasLostCount() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public int getLostCount() {
        return lostCount_;
      }
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public Builder setLostCount(int value) {
        bitField0_ |= 0x00000020;
        lostCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 lostCount = 6;</code>
       *
       * <pre>
       *输的次数
       * </pre>
       */
      public Builder clearLostCount() {
        bitField0_ = (bitField0_ & ~0x00000020);
        lostCount_ = 0;
        onChanged();
        return this;
      }

      // optional int32 maxPoint = 7;
      private int maxPoint_ ;
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public boolean hasMaxPoint() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public int getMaxPoint() {
        return maxPoint_;
      }
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public Builder setMaxPoint(int value) {
        bitField0_ |= 0x00000040;
        maxPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 maxPoint = 7;</code>
       *
       * <pre>
       *最高积分
       * </pre>
       */
      public Builder clearMaxPoint() {
        bitField0_ = (bitField0_ & ~0x00000040);
        maxPoint_ = 0;
        onChanged();
        return this;
      }

      // required int32 seat = 8;
      private int seat_ ;
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public boolean hasSeat() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public int getSeat() {
        return seat_;
      }
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder setSeat(int value) {
        bitField0_ |= 0x00000080;
        seat_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 seat = 8;</code>
       *
       * <pre>
       *座位
       * </pre>
       */
      public Builder clearSeat() {
        bitField0_ = (bitField0_ & ~0x00000080);
        seat_ = 0;
        onChanged();
        return this;
      }

      // optional int32 sex = 9;
      private int sex_ ;
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public boolean hasSex() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public int getSex() {
        return sex_;
      }
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public Builder setSex(int value) {
        bitField0_ |= 0x00000100;
        sex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sex = 9;</code>
       */
      public Builder clearSex() {
        bitField0_ = (bitField0_ & ~0x00000100);
        sex_ = 0;
        onChanged();
        return this;
      }

      // optional string icon = 10;
      private java.lang.Object icon_ = "";
      /**
       * <code>optional string icon = 10;</code>
       */
      public boolean hasIcon() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public java.lang.String getIcon() {
        java.lang.Object ref = icon_;
        if (!(ref instanceof java.lang.String)) {
          java.lang.String s = ((com.google.protobuf.ByteString) ref)
              .toStringUtf8();
          icon_ = s;
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public com.google.protobuf.ByteString
          getIconBytes() {
        java.lang.Object ref = icon_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          icon_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public Builder setIcon(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        icon_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public Builder clearIcon() {
        bitField0_ = (bitField0_ & ~0x00000200);
        icon_ = getDefaultInstance().getIcon();
        onChanged();
        return this;
      }
      /**
       * <code>optional string icon = 10;</code>
       */
      public Builder setIconBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        icon_ = value;
        onChanged();
        return this;
      }

      // optional int32 bopiPoint = 11;
      private int bopiPoint_ ;
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public boolean hasBopiPoint() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public int getBopiPoint() {
        return bopiPoint_;
      }
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public Builder setBopiPoint(int value) {
        bitField0_ |= 0x00000400;
        bopiPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 bopiPoint = 11;</code>
       *
       * <pre>
       *剥皮算分
       * </pre>
       */
      public Builder clearBopiPoint() {
        bitField0_ = (bitField0_ & ~0x00000400);
        bopiPoint_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 cards = 12;
      private java.util.List<java.lang.Integer> cards_ = java.util.Collections.emptyList();
      private void ensureCardsIsMutable() {
        if (!((bitField0_ & 0x00000800) == 0x00000800)) {
          cards_ = new java.util.ArrayList<java.lang.Integer>(cards_);
          bitField0_ |= 0x00000800;
         }
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getCardsList() {
        return java.util.Collections.unmodifiableList(cards_);
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public int getCardsCount() {
        return cards_.size();
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public int getCards(int index) {
        return cards_.get(index);
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder setCards(
          int index, int value) {
        ensureCardsIsMutable();
        cards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder addCards(int value) {
        ensureCardsIsMutable();
        cards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder addAllCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureCardsIsMutable();
        super.addAll(values, cards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 cards = 12;</code>
       *
       * <pre>
       *剩余牌
       * </pre>
       */
      public Builder clearCards() {
        cards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000800);
        onChanged();
        return this;
      }

      // optional int32 isShuXing = 13;
      private int isShuXing_ ;
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public boolean hasIsShuXing() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public int getIsShuXing() {
        return isShuXing_;
      }
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public Builder setIsShuXing(int value) {
        bitField0_ |= 0x00001000;
        isShuXing_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 isShuXing = 13;</code>
       *
       * <pre>
       *数醒标示
       * </pre>
       */
      public Builder clearIsShuXing() {
        bitField0_ = (bitField0_ & ~0x00001000);
        isShuXing_ = 0;
        onChanged();
        return this;
      }

      // optional int32 renewStatus = 14;
      private int renewStatus_ ;
      /**
       * <code>optional int32 renewStatus = 14;</code>
       *
       * <pre>
       *续费状态
       * </pre>
       */
      public boolean hasRenewStatus() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 renewStatus = 14;</code>
       *
       * <pre>
       *续费状态
       * </pre>
       */
      public int getRenewStatus() {
        return renewStatus_;
      }
      /**
       * <code>optional int32 renewStatus = 14;</code>
       *
       * <pre>
       *续费状态
       * </pre>
       */
      public Builder setRenewStatus(int value) {
        bitField0_ |= 0x00002000;
        renewStatus_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 renewStatus = 14;</code>
       *
       * <pre>
       *续费状态
       * </pre>
       */
      public Builder clearRenewStatus() {
        bitField0_ = (bitField0_ & ~0x00002000);
        renewStatus_ = 0;
        onChanged();
        return this;
      }

      // repeated int32 firstCards = 15;
      private java.util.List<java.lang.Integer> firstCards_ = java.util.Collections.emptyList();
      private void ensureFirstCardsIsMutable() {
        if (!((bitField0_ & 0x00004000) == 0x00004000)) {
          firstCards_ = new java.util.ArrayList<java.lang.Integer>(firstCards_);
          bitField0_ |= 0x00004000;
         }
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getFirstCardsList() {
        return java.util.Collections.unmodifiableList(firstCards_);
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public int getFirstCardsCount() {
        return firstCards_.size();
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public int getFirstCards(int index) {
        return firstCards_.get(index);
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public Builder setFirstCards(
          int index, int value) {
        ensureFirstCardsIsMutable();
        firstCards_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public Builder addFirstCards(int value) {
        ensureFirstCardsIsMutable();
        firstCards_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public Builder addAllFirstCards(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureFirstCardsIsMutable();
        super.addAll(values, firstCards_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 firstCards = 15;</code>
       *
       * <pre>
       *初始手牌
       * </pre>
       */
      public Builder clearFirstCards() {
        firstCards_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00004000);
        onChanged();
        return this;
      }

      // repeated int32 dahus = 16;
      private java.util.List<java.lang.Integer> dahus_ = java.util.Collections.emptyList();
      private void ensureDahusIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          dahus_ = new java.util.ArrayList<java.lang.Integer>(dahus_);
          bitField0_ |= 0x00008000;
         }
      }
      /**
       * <code>repeated int32 dahus = 16;</code>
       *
       * <pre>
       *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDahusList() {
        return java.util.Collections.unmodifiableList(dahus_);
      }
      /**
       * <code>repeated int32 dahus = 16;</code>
       *
       * <pre>
       *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
       * </pre>
       */
      public int getDahusCount() {
        return dahus_.size();
      }
      /**
       * <code>repeated int32 dahus = 16;</code>
       *
       * <pre>
       *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
       * </pre>
       */
      public int getDahus(int index) {
        return dahus_.get(index);
      }
      /**
       * <code>repeated int32 dahus = 16;</code>
       *
       * <pre>
       *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
       * </pre>
       */
      public Builder setDahus(
          int index, int value) {
        ensureDahusIsMutable();
        dahus_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 16;</code>
       *
       * <pre>
       *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
       * </pre>
       */
      public Builder addDahus(int value) {
        ensureDahusIsMutable();
        dahus_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 16;</code>
       *
       * <pre>
       *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
       * </pre>
       */
      public Builder addAllDahus(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDahusIsMutable();
        super.addAll(values, dahus_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahus = 16;</code>
       *
       * <pre>
       *大胡 0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听
       * </pre>
       */
      public Builder clearDahus() {
        dahus_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00008000);
        onChanged();
        return this;
      }

      // repeated int32 dahuCounts = 17;
      private java.util.List<java.lang.Integer> dahuCounts_ = java.util.Collections.emptyList();
      private void ensureDahuCountsIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          dahuCounts_ = new java.util.ArrayList<java.lang.Integer>(dahuCounts_);
          bitField0_ |= 0x00010000;
         }
      }
      /**
       * <code>repeated int32 dahuCounts = 17;</code>
       *
       * <pre>
       *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getDahuCountsList() {
        return java.util.Collections.unmodifiableList(dahuCounts_);
      }
      /**
       * <code>repeated int32 dahuCounts = 17;</code>
       *
       * <pre>
       *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
       * </pre>
       */
      public int getDahuCountsCount() {
        return dahuCounts_.size();
      }
      /**
       * <code>repeated int32 dahuCounts = 17;</code>
       *
       * <pre>
       *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
       * </pre>
       */
      public int getDahuCounts(int index) {
        return dahuCounts_.get(index);
      }
      /**
       * <code>repeated int32 dahuCounts = 17;</code>
       *
       * <pre>
       *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
       * </pre>
       */
      public Builder setDahuCounts(
          int index, int value) {
        ensureDahuCountsIsMutable();
        dahuCounts_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahuCounts = 17;</code>
       *
       * <pre>
       *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
       * </pre>
       */
      public Builder addDahuCounts(int value) {
        ensureDahuCountsIsMutable();
        dahuCounts_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahuCounts = 17;</code>
       *
       * <pre>
       *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
       * </pre>
       */
      public Builder addAllDahuCounts(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureDahuCountsIsMutable();
        super.addAll(values, dahuCounts_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 dahuCounts = 17;</code>
       *
       * <pre>
       *大胡次数  0项项息 1无息平 2对子胡 3黑胡 4黑对子胡 5一点朱 6十三火 7十四火 8十五火 9九对半 10大字胡 11小字胡 12海底 13天胡 14报听 15内圆 16外圆
       * </pre>
       */
      public Builder clearDahuCounts() {
        dahuCounts_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00010000);
        onChanged();
        return this;
      }

      // optional int32 neiYuanNum = 18;
      private int neiYuanNum_ ;
      /**
       * <code>optional int32 neiYuanNum = 18;</code>
       *
       * <pre>
       *内圆个数
       * </pre>
       */
      public boolean hasNeiYuanNum() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 neiYuanNum = 18;</code>
       *
       * <pre>
       *内圆个数
       * </pre>
       */
      public int getNeiYuanNum() {
        return neiYuanNum_;
      }
      /**
       * <code>optional int32 neiYuanNum = 18;</code>
       *
       * <pre>
       *内圆个数
       * </pre>
       */
      public Builder setNeiYuanNum(int value) {
        bitField0_ |= 0x00020000;
        neiYuanNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 neiYuanNum = 18;</code>
       *
       * <pre>
       *内圆个数
       * </pre>
       */
      public Builder clearNeiYuanNum() {
        bitField0_ = (bitField0_ & ~0x00020000);
        neiYuanNum_ = 0;
        onChanged();
        return this;
      }

      // optional int32 waiYuanNum = 19;
      private int waiYuanNum_ ;
      /**
       * <code>optional int32 waiYuanNum = 19;</code>
       *
       * <pre>
       *外圆个数
       * </pre>
       */
      public boolean hasWaiYuanNum() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional int32 waiYuanNum = 19;</code>
       *
       * <pre>
       *外圆个数
       * </pre>
       */
      public int getWaiYuanNum() {
        return waiYuanNum_;
      }
      /**
       * <code>optional int32 waiYuanNum = 19;</code>
       *
       * <pre>
       *外圆个数
       * </pre>
       */
      public Builder setWaiYuanNum(int value) {
        bitField0_ |= 0x00040000;
        waiYuanNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 waiYuanNum = 19;</code>
       *
       * <pre>
       *外圆个数
       * </pre>
       */
      public Builder clearWaiYuanNum() {
        bitField0_ = (bitField0_ & ~0x00040000);
        waiYuanNum_ = 0;
        onChanged();
        return this;
      }

      // repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;
      private java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> mcards_ =
        java.util.Collections.emptyList();
      private void ensureMcardsIsMutable() {
        if (!((bitField0_ & 0x00080000) == 0x00080000)) {
          mcards_ = new java.util.ArrayList<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards>(mcards_);
          bitField0_ |= 0x00080000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> mcardsBuilder_;

      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> getMcardsList() {
        if (mcardsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mcards_);
        } else {
          return mcardsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public int getMcardsCount() {
        if (mcardsBuilder_ == null) {
          return mcards_.size();
        } else {
          return mcardsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards getMcards(int index) {
        if (mcardsBuilder_ == null) {
          return mcards_.get(index);
        } else {
          return mcardsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (mcardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMcardsIsMutable();
          mcards_.set(index, value);
          onChanged();
        } else {
          mcardsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder setMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.set(index, builderForValue.build());
          onChanged();
        } else {
          mcardsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (mcardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMcardsIsMutable();
          mcards_.add(value);
          onChanged();
        } else {
          mcardsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards value) {
        if (mcardsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMcardsIsMutable();
          mcards_.add(index, value);
          onChanged();
        } else {
          mcardsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.add(builderForValue.build());
          onChanged();
        } else {
          mcardsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addMcards(
          int index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder builderForValue) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.add(index, builderForValue.build());
          onChanged();
        } else {
          mcardsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder addAllMcards(
          java.lang.Iterable<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards> values) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          super.addAll(values, mcards_);
          onChanged();
        } else {
          mcardsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder clearMcards() {
        if (mcardsBuilder_ == null) {
          mcards_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00080000);
          onChanged();
        } else {
          mcardsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public Builder removeMcards(int index) {
        if (mcardsBuilder_ == null) {
          ensureMcardsIsMutable();
          mcards_.remove(index);
          onChanged();
        } else {
          mcardsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder getMcardsBuilder(
          int index) {
        return getMcardsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder getMcardsOrBuilder(
          int index) {
        if (mcardsBuilder_ == null) {
          return mcards_.get(index);  } else {
          return mcardsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<? extends com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
           getMcardsOrBuilderList() {
        if (mcardsBuilder_ != null) {
          return mcardsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mcards_);
        }
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMcardsBuilder() {
        return getMcardsFieldBuilder().addBuilder(
            com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder addMcardsBuilder(
          int index) {
        return getMcardsFieldBuilder().addBuilder(
            index, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.getDefaultInstance());
      }
      /**
       * <code>repeated .com.sy599.game.msg.serverPacket.PhzHuCards mcards = 20;</code>
       *
       * <pre>
       *牌
       * </pre>
       */
      public java.util.List<com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder> 
           getMcardsBuilderList() {
        return getMcardsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder> 
          getMcardsFieldBuilder() {
        if (mcardsBuilder_ == null) {
          mcardsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCards.Builder, com.sy599.game.msg.serverPacket.TablePhzResMsg.PhzHuCardsOrBuilder>(
                  mcards_,
                  ((bitField0_ & 0x00080000) == 0x00080000),
                  getParentForChildren(),
                  isClean());
          mcards_ = null;
        }
        return mcardsBuilder_;
      }

      // optional int32 zhuaHao = 21;
      private int zhuaHao_ ;
      /**
       * <code>optional int32 zhuaHao = 21;</code>
       *
       * <pre>
       *抓豪个数
       * </pre>
       */
      public boolean hasZhuaHao() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional int32 zhuaHao = 21;</code>
       *
       * <pre>
       *抓豪个数
       * </pre>
       */
      public int getZhuaHao() {
        return zhuaHao_;
      }
      /**
       * <code>optional int32 zhuaHao = 21;</code>
       *
       * <pre>
       *抓豪个数
       * </pre>
       */
      public Builder setZhuaHao(int value) {
        bitField0_ |= 0x00100000;
        zhuaHao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 zhuaHao = 21;</code>
       *
       * <pre>
       *抓豪个数
       * </pre>
       */
      public Builder clearZhuaHao() {
        bitField0_ = (bitField0_ & ~0x00100000);
        zhuaHao_ = 0;
        onChanged();
        return this;
      }

      // optional int32 qingHao = 22;
      private int qingHao_ ;
      /**
       * <code>optional int32 qingHao = 22;</code>
       *
       * <pre>
       *清豪个数
       * </pre>
       */
      public boolean hasQingHao() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional int32 qingHao = 22;</code>
       *
       * <pre>
       *清豪个数
       * </pre>
       */
      public int getQingHao() {
        return qingHao_;
      }
      /**
       * <code>optional int32 qingHao = 22;</code>
       *
       * <pre>
       *清豪个数
       * </pre>
       */
      public Builder setQingHao(int value) {
        bitField0_ |= 0x00200000;
        qingHao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 qingHao = 22;</code>
       *
       * <pre>
       *清豪个数
       * </pre>
       */
      public Builder clearQingHao() {
        bitField0_ = (bitField0_ & ~0x00200000);
        qingHao_ = 0;
        onChanged();
        return this;
      }

      // optional int32 waiHao = 23;
      private int waiHao_ ;
      /**
       * <code>optional int32 waiHao = 23;</code>
       *
       * <pre>
       *外豪个数
       * </pre>
       */
      public boolean hasWaiHao() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional int32 waiHao = 23;</code>
       *
       * <pre>
       *外豪个数
       * </pre>
       */
      public int getWaiHao() {
        return waiHao_;
      }
      /**
       * <code>optional int32 waiHao = 23;</code>
       *
       * <pre>
       *外豪个数
       * </pre>
       */
      public Builder setWaiHao(int value) {
        bitField0_ |= 0x00400000;
        waiHao_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 waiHao = 23;</code>
       *
       * <pre>
       *外豪个数
       * </pre>
       */
      public Builder clearWaiHao() {
        bitField0_ = (bitField0_ & ~0x00400000);
        waiHao_ = 0;
        onChanged();
        return this;
      }

      // optional int32 credit = 24;
      private int credit_ ;
      /**
       * <code>optional int32 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public boolean hasCredit() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional int32 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public int getCredit() {
        return credit_;
      }
      /**
       * <code>optional int32 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public Builder setCredit(int value) {
        bitField0_ |= 0x00800000;
        credit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 credit = 24;</code>
       *
       * <pre>
       *玩家身上的credit
       * </pre>
       */
      public Builder clearCredit() {
        bitField0_ = (bitField0_ & ~0x00800000);
        credit_ = 0;
        onChanged();
        return this;
      }

      // optional int64 winLoseCredit = 25;
      private long winLoseCredit_ ;
      /**
       * <code>optional int64 winLoseCredit = 25;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public boolean hasWinLoseCredit() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional int64 winLoseCredit = 25;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public long getWinLoseCredit() {
        return winLoseCredit_;
      }
      /**
       * <code>optional int64 winLoseCredit = 25;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public Builder setWinLoseCredit(long value) {
        bitField0_ |= 0x01000000;
        winLoseCredit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 winLoseCredit = 25;</code>
       *
       * <pre>
       *输赢信用分
       * </pre>
       */
      public Builder clearWinLoseCredit() {
        bitField0_ = (bitField0_ & ~0x01000000);
        winLoseCredit_ = 0L;
        onChanged();
        return this;
      }

      // optional int64 commissionCredit = 26;
      private long commissionCredit_ ;
      /**
       * <code>optional int64 commissionCredit = 26;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public boolean hasCommissionCredit() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional int64 commissionCredit = 26;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public long getCommissionCredit() {
        return commissionCredit_;
      }
      /**
       * <code>optional int64 commissionCredit = 26;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public Builder setCommissionCredit(long value) {
        bitField0_ |= 0x02000000;
        commissionCredit_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 commissionCredit = 26;</code>
       *
       * <pre>
       *抽水信用分
       * </pre>
       */
      public Builder clearCommissionCredit() {
        bitField0_ = (bitField0_ & ~0x02000000);
        commissionCredit_ = 0L;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes)
    }

    static {
      defaultInstance = new ClosingGhzPlayerInfoRes(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:com.sy599.game.msg.serverPacket.ClosingGhzPlayerInfoRes)
  }

  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_ClosingGhzInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_ClosingGhzInfoRes_fieldAccessorTable;
  private static com.google.protobuf.Descriptors.Descriptor
    internal_static_com_sy599_game_msg_serverPacket_ClosingGhzPlayerInfoRes_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_com_sy599_game_msg_serverPacket_ClosingGhzPlayerInfoRes_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n proto/files/TableGhzResMsg.proto\022\037com." +
      "sy599.game.msg.serverPacket\032 proto/files" +
      "/TablePhzResMsg.proto\"\234\003\n\021ClosingGhzInfo" +
      "Res\022P\n\016closingPlayers\030\001 \003(\01328.com.sy599." +
      "game.msg.serverPacket.ClosingGhzPlayerIn" +
      "foRes\022\017\n\007isBreak\030\002 \001(\005\022\r\n\005wanfa\030\003 \001(\005\022\013\n" +
      "\003ext\030\004 \003(\t\022\020\n\010matchExt\030\005 \003(\t\022\021\n\tleftCard" +
      "s\030\006 \003(\005\022\013\n\003tun\030\007 \001(\005\022\013\n\003fan\030\010 \001(\005\022\014\n\004hux" +
      "i\030\t \001(\005\022\016\n\006huSeat\030\n \001(\005\022\016\n\006huCard\030\013 \001(\005\022" +
      "\020\n\010totalTun\030\014 \001(\005\022\020\n\010fanTypes\030\r \003(\005\022\017\n\007i",
      "sRenew\030\016 \001(\005\022\022\n\nrenewCount\030\017 \001(\005\022\023\n\013poin" +
      "tRecord\030\020 \001(\t\022\026\n\016startLeftCards\030\021 \003(\005\022\022\n" +
      "\ngroupLogId\030\022 \001(\005\022\021\n\tchouCards\030\023 \003(\005\"\223\004\n" +
      "\027ClosingGhzPlayerInfoRes\022\016\n\006userId\030\001 \001(\t" +
      "\022\014\n\004name\030\002 \001(\t\022\r\n\005point\030\003 \001(\005\022\022\n\ntotalPo" +
      "int\030\004 \001(\005\022\020\n\010winCount\030\005 \001(\005\022\021\n\tlostCount" +
      "\030\006 \001(\005\022\020\n\010maxPoint\030\007 \001(\005\022\014\n\004seat\030\010 \002(\005\022\013" +
      "\n\003sex\030\t \001(\005\022\014\n\004icon\030\n \001(\t\022\021\n\tbopiPoint\030\013" +
      " \001(\005\022\r\n\005cards\030\014 \003(\005\022\021\n\tisShuXing\030\r \001(\005\022\023" +
      "\n\013renewStatus\030\016 \001(\005\022\022\n\nfirstCards\030\017 \003(\005\022",
      "\r\n\005dahus\030\020 \003(\005\022\022\n\ndahuCounts\030\021 \003(\005\022\022\n\nne" +
      "iYuanNum\030\022 \001(\005\022\022\n\nwaiYuanNum\030\023 \001(\005\022;\n\006mc" +
      "ards\030\024 \003(\0132+.com.sy599.game.msg.serverPa" +
      "cket.PhzHuCards\022\017\n\007zhuaHao\030\025 \001(\005\022\017\n\007qing" +
      "Hao\030\026 \001(\005\022\016\n\006waiHao\030\027 \001(\005\022\016\n\006credit\030\030 \001(" +
      "\005\022\025\n\rwinLoseCredit\030\031 \001(\003\022\030\n\020commissionCr" +
      "edit\030\032 \001(\003"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          internal_static_com_sy599_game_msg_serverPacket_ClosingGhzInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(0);
          internal_static_com_sy599_game_msg_serverPacket_ClosingGhzInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_ClosingGhzInfoRes_descriptor,
              new java.lang.String[] { "ClosingPlayers", "IsBreak", "Wanfa", "Ext", "MatchExt", "LeftCards", "Tun", "Fan", "Huxi", "HuSeat", "HuCard", "TotalTun", "FanTypes", "IsRenew", "RenewCount", "PointRecord", "StartLeftCards", "GroupLogId", "ChouCards", });
          internal_static_com_sy599_game_msg_serverPacket_ClosingGhzPlayerInfoRes_descriptor =
            getDescriptor().getMessageTypes().get(1);
          internal_static_com_sy599_game_msg_serverPacket_ClosingGhzPlayerInfoRes_fieldAccessorTable = new
            com.google.protobuf.GeneratedMessage.FieldAccessorTable(
              internal_static_com_sy599_game_msg_serverPacket_ClosingGhzPlayerInfoRes_descriptor,
              new java.lang.String[] { "UserId", "Name", "Point", "TotalPoint", "WinCount", "LostCount", "MaxPoint", "Seat", "Sex", "Icon", "BopiPoint", "Cards", "IsShuXing", "RenewStatus", "FirstCards", "Dahus", "DahuCounts", "NeiYuanNum", "WaiYuanNum", "Mcards", "ZhuaHao", "QingHao", "WaiHao", "Credit", "WinLoseCredit", "CommissionCredit", });
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          com.sy599.game.msg.serverPacket.TablePhzResMsg.getDescriptor(),
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
